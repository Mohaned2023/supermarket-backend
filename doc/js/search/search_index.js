var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.038,1,2.485]],["body/modules/AppModule.html",[0,1.758,1,5.085,2,1.924,3,1.924,4,2.182,5,2.182,6,1.924,7,2.182,8,2.182,9,3.672,10,3.672,11,4.319,12,0.021,13,3.995,14,3.717,15,3.475,16,4.319,17,3.995,18,2.809,19,2.182,20,2.182,21,0.222,22,0.251,23,0.222,24,4.294,25,3.005,26,0.416,27,1.052,28,4.294,29,2.508,30,1.618,31,3.262,32,4.294,33,4.294,34,4.294,35,2.334,36,2.334,37,3.672,38,4.294,39,4.294,40,4.294,41,0.251,42,0.194,43,0.015,44,0.015]],["title/controllers/AuthController.html",[45,1.525,46,2.485]],["body/controllers/AuthController.html",[12,0.021,21,0.16,22,0.181,23,0.16,26,0.406,27,0.759,41,0.181,42,0.14,43,0.012,44,0.012,45,1.309,46,3.048,47,0.845,48,2.649,49,1.956,50,2.649,51,0.318,52,1.766,53,4.419,54,3.926,55,4.428,56,4.419,57,2.649,58,1.603,59,1.207,60,1.113,61,1.804,62,3.098,63,3.098,64,1.239,65,3.098,66,2.125,67,0.93,68,0.625,69,2.125,70,1.904,71,2.125,72,2.78,73,2.649,74,3.917,75,3.098,76,3.098,77,3.098,78,3.293,79,3.098,80,3.098,81,3.098,82,3.364,83,3.098,84,4.124,85,3.098,86,3.098,87,3.098,88,2.462,89,1.684,90,1.476,91,2.649,92,2.133,93,1.956,94,2.649,95,2.649,96,1.574,97,3.364,98,3.019,99,2.649,100,2.133,101,2.649,102,1.388,103,2.649,104,1.81,105,2.527,106,2.649,107,1.476,108,2.649,109,1.309,110,2.133,111,1.574,112,2.133,113,3.065,114,3.098,115,2.133,116,3.561,117,3.098,118,1.956,119,2.133,120,1.956,121,1.956,122,1.956,123,1.956,124,0.609,125,1.956,126,2.354,127,2.354,128,2.133,129,1.956,130,3.098,131,3.098,132,1.235,133,1.235,134,3.098,135,3.098,136,3.098,137,3.098,138,3.098,139,3.926,140,3.926,141,4.419,142,3.098,143,3.098,144,3.098,145,1.381,146,3.098,147,3.098,148,3.098,149,3.098,150,3.098,151,3.098,152,3.098,153,3.098,154,2.649,155,2.649,156,2.649,157,2.649,158,2.649,159,2.649,160,3.098,161,3.098,162,4.428,163,3.098,164,2.354,165,2.354,166,3.098,167,2.354,168,2.354,169,2.354,170,3.098,171,3.098,172,3.098]],["title/modules/AuthModule.html",[0,1.038,11,2.28]],["body/modules/AuthModule.html",[0,1.883,2,1.806,3,1.806,4,2.048,5,2.048,6,1.806,7,3.013,8,3.013,11,4.549,12,0.021,18,2.695,19,2.048,20,2.048,21,0.208,22,0.236,23,0.208,25,2.191,26,0.418,27,0.987,29,2.354,30,1.519,41,0.236,42,0.182,43,0.015,44,0.015,46,4.082,47,1.446,60,0.665,98,3.927,99,3.446,100,2.775,102,3.228,103,3.446,104,2.354,105,3.117,106,3.446,173,3.446,174,3.446,175,3.446,176,4.245,177,4.03,178,0.382,179,1.043,180,4.536,181,4.536,182,5.305,183,2.354,184,4.03,185,5.305,186,2.775,187,4.03,188,3.062,189,3.062,190,4.03,191,4.03,192,4.03,193,1.361,194,4.03,195,4.03]],["title/injectables/AuthService.html",[98,2.109,196,1.219]],["body/injectables/AuthService.html",[12,0.021,21,0.078,22,0.088,23,0.078,26,0.337,27,0.37,30,0.569,41,0.088,42,0.068,43,0.007,44,0.007,51,0.155,52,1.008,53,2.788,54,3.704,56,2.788,57,1.291,58,1.374,59,1.265,60,1.03,64,1.168,66,1.6,67,0.701,68,0.509,69,1.6,70,2.272,71,2.125,72,2.725,73,1.291,74,3.356,78,2.48,82,2.897,84,3.717,88,0.72,89,2.308,90,2.437,96,0.767,97,1.921,98,1.477,100,1.04,101,1.291,109,2.16,110,1.04,111,0.767,112,1.04,132,1.008,133,2.248,145,1.04,178,0.362,179,1.079,183,2.682,188,1.147,196,0.854,197,0.767,198,1.291,199,0.469,200,2.292,201,3.261,202,3.685,203,3.813,204,3.261,205,4.592,206,1.291,207,2.228,208,4.876,209,1.51,210,2.162,211,1.51,212,3.043,213,2.162,214,4.592,215,3.972,216,1.51,217,1.068,218,2.528,219,1.51,220,1.51,221,2.528,222,1.461,223,2.171,224,1.74,225,3.643,226,4.296,227,2.897,228,3.261,229,3.63,230,3.136,231,3.161,232,2.162,233,1.51,234,3.778,235,3.972,236,3.079,237,1.773,238,1.51,239,1.921,240,3.63,241,3.225,242,3.466,243,3.261,244,1.51,245,2.528,246,2.528,247,2.162,248,2.528,249,2.897,250,1.51,251,1.51,252,2.528,253,1.51,254,2.528,255,2.528,256,3.356,257,2.923,258,2.625,259,4.876,260,1.068,261,1.284,262,2.528,263,1.51,264,2.528,265,1.51,266,1.04,267,0.882,268,0.602,269,2.162,270,1.74,271,1.477,272,1.04,273,1.291,274,1.51,275,1.51,276,2.788,277,2.528,278,1.51,279,3.261,280,1.51,281,3.261,282,3.438,283,2.528,284,2.528,285,2.528,286,2.528,287,3.261,288,1.51,289,1.291,290,1.51,291,1.51,292,2.9,293,3.229,294,1.291,295,1.74,296,1.291,297,1.291,298,3.356,299,1.147,300,1.51,301,3.225,302,1.51,303,2.528,304,3.261,305,2.528,306,1.51,307,1.291,308,1.51,309,1.291,310,1.51,311,1.51,312,1.51,313,1.291,314,1.51,315,3.261,316,2.162,317,1.51,318,2.162,319,1.147,320,1.51,321,1.291,322,1.51,323,2.528,324,1.51,325,1.51,326,1.51,327,1.51,328,1.51,329,2.408,330,1.147,331,1.147,332,1.51,333,1.51,334,1.51,335,2.528,336,1.51,337,0.882,338,1.74,339,1.51,340,1.51,341,1.51,342,1.51,343,1.51,344,1.773,345,1.51,346,1.51,347,1.51,348,1.51,349,1.51,350,0.882,351,0.882,352,1.51,353,1.51,354,1.51,355,0.412,356,1.51,357,0.882,358,0.72]],["title/classes/CreataUserDto.html",[42,0.163,78,2.109]],["body/classes/CreataUserDto.html",[12,0.021,21,0.192,22,0.217,23,0.192,26,0.332,41,0.217,42,0.226,43,0.014,44,0.014,51,0.381,58,1.696,61,1.95,64,1.339,67,0.828,68,0.675,70,2.15,78,2.931,109,2.883,110,2.552,111,1.884,124,0.729,178,0.578,199,0.931,215,3.454,237,2.727,242,4.238,257,3.915,344,3.312,350,2.931,351,2.931,358,2.904,359,1.767,360,5.444,361,2.816,362,2.904,363,3.168,364,2.883,365,3.454,366,4.29,367,4.311,368,3.707,369,3.707,370,4.29,371,5.612,372,3.812,373,6.563,374,6.093,375,3.707,376,3.707,377,4.29,378,5.017,379,3.168,380,3.707,381,5.017,382,5.017,383,5.017,384,3.707,385,5.017,386,3.707,387,3.707,388,3.719,389,4.629,390,5.017,391,3.17,392,3.707,393,2.015,394,3.034,395,3.707,396,5.017,397,3.17,398,3.707,399,3.707,400,3.707]],["title/classes/CreateInvoiceDto.html",[42,0.163,401,2.28]],["body/classes/CreateInvoiceDto.html",[12,0.021,21,0.242,22,0.274,23,0.242,26,0.342,41,0.274,42,0.264,43,0.016,44,0.016,51,0.482,61,1.871,64,1.284,68,0.648,124,0.922,178,0.554,199,1.085,358,2.786,359,2.235,362,2.786,364,2.816,367,4.211,388,3.72,393,2.549,394,3.035,401,3.692,402,5.446,403,3.563,404,2.038,405,2.038,406,1.375,407,1.773,408,1.974,409,2.786,410,4.999,411,4.689,412,1.356,413,4.024,414,4.689,415,4.385]],["title/classes/CreateItemDto.html",[42,0.163,416,2.109]],["body/classes/CreateItemDto.html",[12,0.021,21,0.16,22,0.181,23,0.16,26,0.302,41,0.181,42,0.233,43,0.012,44,0.012,51,0.318,58,1.457,61,2.09,64,1.435,67,1.054,68,0.756,124,0.609,178,0.619,199,0.822,223,1.495,355,1.879,358,3.112,359,1.476,362,3.112,364,2.995,367,4.479,371,4.821,372,4.283,388,3.883,389,3.926,391,2.649,393,1.684,394,3.168,397,3.786,404,1.654,405,1.654,406,1.326,408,1.495,409,2.11,415,4.106,416,2.587,417,5.684,418,2.354,419,3.926,420,3.926,421,3.926,422,3.926,423,3.926,424,3.786,425,2.248,426,3.881,427,4.821,428,3.786,429,5.638,430,3.098,431,4.821,432,3.881,433,4.428,434,3.098,435,3.786,436,2.796,437,4.428,438,3.098,439,3.881,440,3.098,441,3.048,442,3.098,443,3.786,444,3.786,445,3.098,446,3.786,447,3.098,448,3.786,449,3.786,450,3.098,451,2.649,452,5.167]],["title/classes/CreateReturnedInvoiceDto.html",[42,0.163,453,2.28]],["body/classes/CreateReturnedInvoiceDto.html",[12,0.021,21,0.239,22,0.27,23,0.239,26,0.339,35,3.44,41,0.27,42,0.261,43,0.016,44,0.016,51,0.475,61,1.855,64,1.273,68,0.642,124,0.909,178,0.55,199,1.076,358,2.762,359,2.204,362,2.762,364,2.802,367,4.19,388,3.697,393,2.514,394,3.016,403,3.514,404,2.025,405,2.025,406,1.37,407,1.758,408,1.957,409,2.762,410,4.956,412,1.345,413,3.99,415,4.357,453,3.66,454,2.837,455,5.412,456,4.625,457,4.625]],["title/interfaces/DataInvoiceReportInterface.html",[458,1.095,459,1.439]],["body/interfaces/DataInvoiceReportInterface.html",[12,0.021,21,0.182,22,0.206,23,0.182,26,0.283,41,0.394,43,0.014,44,0.014,47,0.962,51,0.362,58,1.253,59,0.849,60,0.915,67,0.582,68,0.694,70,1.191,124,0.693,145,0.864,178,0.335,179,1.326,193,1.191,199,0.9,217,2.048,355,1.627,404,1.129,405,1.129,406,1.455,407,1.471,412,1.125,425,1.406,458,2.198,459,2.21,460,1.681,461,1.681,462,2.641,463,1.81,464,2.496,465,2.844,466,2.844,467,2.982,468,2.844,469,2.844,470,2.464,471,3.285,472,0.912,473,1.681,474,1.49,475,1.681,476,1.681,477,1.49,478,1.73,479,1.49,480,1.406,481,1.934,482,2.048,483,1.681,484,1.681,485,1.681,486,1.681,487,1.681,488,1.681,489,1.681,490,1.49,491,1.581,492,1.581,493,1.49,494,1.681,495,1.681,496,1.681,497,1.681,498,1.681,499,1.681,500,1.681]],["title/interfaces/DateItemReportInterface.html",[458,1.095,482,1.525]],["body/interfaces/DateItemReportInterface.html",[12,0.021,21,0.176,22,0.199,23,0.176,26,0.277,41,0.391,43,0.013,44,0.013,47,0.928,51,0.35,58,1.223,59,0.829,60,0.897,67,0.562,68,0.741,70,1.149,124,0.669,145,0.834,178,0.323,179,1.315,193,1.149,199,0.878,217,1.998,355,1.823,404,1.089,405,1.089,406,1.456,407,1.65,412,1.098,425,1.357,458,2.188,459,1.887,460,1.622,461,1.622,462,2.592,463,1.65,464,2.472,465,1.622,466,1.622,467,2.944,468,1.622,469,1.622,470,2.404,471,3.249,472,0.88,473,1.622,474,1.438,475,1.622,476,1.622,477,1.438,478,1.687,479,1.438,480,1.357,481,1.887,482,2.297,483,2.801,484,2.801,485,2.801,486,2.801,487,2.801,488,2.801,489,2.801,490,1.438,491,1.525,492,1.525,493,1.438,494,1.622,495,1.622,496,1.622,497,1.622,498,1.622,499,1.622,500,1.622]],["title/entities/ErrorEntitiy.html",[501,1.361,502,1.962]],["body/entities/ErrorEntitiy.html",[12,0.021,21,0.223,22,0.252,23,0.223,26,0.324,41,0.252,42,0.194,43,0.015,44,0.015,51,0.443,58,1.433,59,1.172,60,1.067,61,2.14,64,1.47,67,0.712,68,0.759,199,1.029,237,3.33,260,2.341,268,1.719,355,1.511,406,1.271,408,2.069,472,1.114,501,2.089,502,3.013,503,2.344,504,3.687,505,4.217,506,4.217,507,4.312,508,3.501,509,3.501,510,4.312,511,3.869,512,4.312,513,4.224,514,4.312,515,2.969,516,5.543,517,3.501,518,3.501,519,4.312,520,4.312,521,3.501,522,3.501,523,3.816,524,3.276,525,1.932]],["title/modules/ErrorModule.html",[0,1.038,13,2.109]],["body/modules/ErrorModule.html",[0,1.977,2,2.116,3,2.116,4,2.399,5,2.399,6,2.116,7,3.246,8,3.246,12,0.021,13,4.151,18,2.983,19,2.399,20,2.399,21,0.244,22,0.276,23,0.244,25,2.567,26,0.391,27,1.157,29,2.758,30,1.78,41,0.276,42,0.213,43,0.016,44,0.016,178,0.448,179,1.154,502,2.567,524,4.46,526,4.038,527,4.038,528,4.038,529,4.302,530,4.722,531,4.722,532,4.038,533,4.722]],["title/injectables/ErrorService.html",[196,1.219,529,2.109]],["body/injectables/ErrorService.html",[12,0.021,21,0.206,22,0.233,23,0.206,26,0.381,27,0.976,30,1.501,41,0.233,42,0.18,43,0.015,44,0.015,51,0.409,52,2.099,58,1.621,59,1.142,60,1.076,64,1.295,66,1.984,67,0.869,68,0.583,69,1.984,71,1.984,72,2.642,90,2.508,132,2.099,133,2.501,145,0.976,179,1.035,183,3.664,196,1.778,197,2.024,199,0.977,200,2.811,202,3.444,207,3.664,212,2.674,222,2.811,223,1.991,237,3.545,260,1.682,261,2.024,267,2.327,268,1.588,276,2.024,282,2.327,292,2.515,293,2.515,295,4.318,329,2.515,357,2.327,408,1.345,412,1.221,472,1.029,502,2.861,529,3.075,532,3.406,534,3.406,535,3.983,536,3.983,537,5.263,538,3.983,539,3.983,540,5.263,541,3.075,542,5.263,543,3.983,544,3.983,545,3.983,546,3.983,547,3.983,548,3.983]],["title/controllers/InvoiceController.html",[45,1.525,549,2.485]],["body/controllers/InvoiceController.html",[12,0.021,21,0.171,22,0.194,23,0.171,26,0.408,27,0.812,41,0.194,42,0.15,43,0.013,44,0.013,45,1.4,47,0.904,49,2.093,51,0.341,52,1.852,59,1.222,60,1.129,61,1.716,64,1.178,66,2.021,67,0.885,68,0.644,69,2.021,71,2.021,72,2.842,88,1.58,89,1.802,90,1.58,92,2.282,93,3.386,96,1.684,102,1.486,104,1.936,105,2.403,107,1.58,109,1.4,111,1.684,113,3.159,115,2.282,116,2.934,118,2.093,119,2.282,120,2.093,121,2.093,122,2.093,123,2.093,124,0.652,125,2.093,129,2.093,132,1.322,133,1.322,139,2.518,145,1.313,164,2.518,165,2.518,167,2.518,168,2.518,169,2.518,178,0.441,200,1.486,357,1.936,401,4.005,406,1.246,408,2.142,412,1.078,436,2.093,463,1.005,472,0.857,549,3.198,550,2.835,551,4.585,552,4.585,553,4.585,554,2.835,555,3.315,556,3.972,557,3.315,558,3.315,559,4.585,560,3.315,561,3.315,562,3.315,563,3.315,564,3.315,565,3.315,566,2.835,567,4.074,568,2.725,569,2.093,570,2.282,571,2.282,572,1.936,573,2.282,574,2.282,575,2.093,576,1.684,577,2.518,578,3.972,579,2.093,580,2.518,581,3.315,582,3.315,583,2.518,584,2.518,585,2.835,586,2.518,587,2.518,588,2.518,589,4.645,590,2.835,591,2.835,592,2.835,593,3.315,594,3.315,595,3.315,596,3.315,597,3.315,598,3.315,599,3.972,600,2.835,601,2.835,602,3.315]],["title/entities/InvoiceEntity.html",[501,1.361,576,1.834]],["body/entities/InvoiceEntity.html",[12,0.021,21,0.193,22,0.218,23,0.193,26,0.357,41,0.218,42,0.168,43,0.014,44,0.014,51,0.384,59,1.118,60,1.009,61,2.105,64,1.445,67,0.832,68,0.745,124,0.734,178,0.541,199,0.936,223,1.261,260,2.13,268,1.489,355,1.74,362,2.72,364,2.778,394,2.913,404,1.195,405,1.195,406,1.293,408,1.928,409,1.78,412,1.481,413,2.571,425,2.276,432,2.571,441,2.571,463,1.529,472,0.965,478,2.036,479,2.411,501,1.9,503,2.03,505,3.93,506,3.93,508,3.184,509,3.184,511,3.605,513,3.605,515,2.571,517,3.184,518,3.184,521,3.184,522,3.184,523,3.471,525,1.674,576,2.562,603,3.193,604,2.571,605,3.734,606,3.734,607,4.311,608,3.193,609,3.734,610,4.311,611,3.193,612,3.734,613,5.042,614,3.734,615,3.734,616,2.182,617,2.03,618,4.311,619,3.193,620,3.193]],["title/modules/InvoiceModule.html",[0,1.038,14,1.962]],["body/modules/InvoiceModule.html",[0,1.918,2,1.916,3,1.916,4,2.172,5,2.172,6,1.916,7,3.1,8,3.1,12,0.021,13,3.99,14,3.926,15,3.471,18,2.801,19,2.172,20,2.172,21,0.221,22,0.25,23,0.221,25,2.997,26,0.412,27,1.047,29,2.498,30,1.612,41,0.25,42,0.193,43,0.015,44,0.015,47,1.503,178,0.406,179,1.084,463,1.672,549,4.201,568,3.691,569,2.7,576,2.172,577,3.248,621,3.656,622,4.276,623,3.656,624,3.656,625,4.276,626,4.714,627,3.656,628,2.471,629,3.248,630,3.248,631,4.276,632,4.276]],["title/interfaces/InvoiceReportInterface.html",[458,1.095,480,1.439]],["body/interfaces/InvoiceReportInterface.html",[12,0.021,21,0.187,22,0.211,23,0.187,26,0.288,41,0.397,43,0.014,44,0.014,47,0.986,51,0.371,58,1.275,59,1.105,60,1.042,67,0.597,68,0.622,70,1.221,124,0.711,145,0.885,178,0.343,179,1.334,193,1.221,199,0.916,217,2.371,355,1.776,404,1.157,405,1.157,406,1.417,407,1.496,412,1.144,425,1.441,458,2.205,459,2.405,460,1.723,461,1.723,462,2.35,463,1.829,464,2.623,465,1.723,466,1.723,467,2.35,468,1.723,469,1.723,470,2.506,471,3.31,472,0.934,473,1.723,474,1.527,475,1.723,476,1.723,477,1.527,478,1.759,479,1.527,480,1.967,481,2.517,482,2.083,483,1.723,484,1.723,485,1.723,486,1.723,487,1.723,488,1.723,489,1.723,490,1.527,491,1.62,492,1.62,493,1.527,494,1.723,495,1.723,496,1.723,497,1.723,498,1.723,499,1.723,500,1.723]],["title/injectables/InvoiceService.html",[196,1.219,568,1.834]],["body/injectables/InvoiceService.html",[12,0.021,21,0.15,22,0.105,23,0.092,26,0.355,27,0.438,30,0.674,41,0.105,42,0.081,43,0.008,44,0.008,51,0.184,52,1.159,58,0.462,59,1.223,60,1.118,64,1.154,66,1.879,67,0.823,68,0.553,69,1.879,71,2.133,72,2.808,89,1.996,90,2.609,96,0.909,109,0.755,132,1.159,133,2.095,145,1.036,178,0.441,179,1.112,183,2.471,196,0.982,197,0.909,199,0.54,200,2.354,202,3.707,207,3.069,212,3.325,222,1.303,223,1.965,225,3.833,226,2.912,230,2.71,231,3.896,235,4.419,236,3.899,237,2.71,256,1.836,260,0.755,261,1.477,266,1.231,267,1.045,268,0.713,271,1.698,272,1.231,276,3.024,282,2.912,292,2.671,293,2.671,298,2.671,329,2.671,330,1.359,331,1.359,337,2.145,338,1.231,355,0.488,357,1.045,379,1.13,401,2.938,404,1.175,406,1.297,407,0.882,408,2.143,409,0.852,412,1.219,426,2.528,436,1.836,459,1.464,463,2.184,464,1.879,472,0.462,477,1.965,478,1.037,479,0.755,480,0.713,481,0.713,529,3.069,541,2.145,551,3.141,552,3.141,553,3.141,554,1.53,559,3.141,568,1.477,570,1.231,576,2.149,577,1.359,616,1.045,617,1.996,628,1.303,629,1.359,633,1.53,634,3.673,635,5.253,636,1.789,637,3.141,638,2.504,639,1.789,640,2.907,641,1.789,642,3.673,643,1.789,644,1.789,645,4.821,646,3.617,647,1.789,648,1.789,649,1.53,650,1.789,651,1.789,652,1.789,653,1.789,654,2.907,655,1.789,656,1.359,657,1.359,658,1.359,659,1.789,660,1.789,661,1.53,662,1.789,663,1.789,664,2.907,665,3.673,666,1.789,667,1.789,668,1.789,669,1.789,670,3.141,671,1.789,672,2.907,673,1.789,674,1.53,675,1.53,676,1.789,677,1.53,678,1.789,679,1.789,680,1.53,681,1.789,682,2.001,683,1.53,684,1.789,685,1.53,686,1.789,687,1.789,688,1.789,689,1.789,690,1.789,691,1.789,692,2.486,693,1.359,694,1.789,695,1.359,696,1.359,697,1.789,698,1.789,699,2.907,700,1.359,701,1.789]],["title/controllers/ItemController.html",[45,1.525,702,2.485]],["body/controllers/ItemController.html",[12,0.021,21,0.174,22,0.197,23,0.174,26,0.412,27,0.825,41,0.197,42,0.152,43,0.013,44,0.013,45,1.423,47,0.919,49,2.128,51,0.346,52,1.873,59,1.226,60,1.133,61,1.731,64,1.189,66,2.039,67,0.893,68,0.6,69,2.039,71,2.039,72,2.623,88,2.578,89,1.832,90,1.606,91,2.882,92,2.32,93,2.128,94,2.882,95,2.882,96,1.712,102,1.51,104,1.969,105,2.106,107,1.606,109,1.423,111,1.712,112,2.32,113,3.181,115,2.32,116,2.967,118,2.128,119,2.32,120,2.128,121,2.128,122,2.128,123,2.128,124,0.662,125,2.128,128,2.32,129,2.128,132,1.344,133,1.344,139,2.56,140,2.56,141,4.018,145,1.325,154,2.882,155,2.882,156,2.882,157,2.882,158,2.882,159,2.882,164,2.56,165,2.56,167,2.56,168,2.56,169,2.56,200,1.51,406,1.253,407,1.022,408,1.587,416,3.724,472,0.871,567,4.11,571,2.32,572,1.969,573,2.32,574,2.32,575,2.128,579,2.128,583,2.56,584,2.56,586,2.56,587,2.56,588,2.56,599,4.018,601,2.882,628,1.51,638,2.578,702,3.235,703,2.882,704,4.626,705,4.626,706,4.626,707,2.882,708,3.37,709,3.37,710,3.37,711,3.37,712,3.37,713,3.37,714,4.214,715,3.37,716,3.37,717,4.699,718,3.57,719,2.882,720,2.56,721,3.37,722,3.37,723,3.37,724,3.37,725,3.37,726,3.37,727,3.37]],["title/entities/ItemEntity.html",[501,1.361,628,1.618]],["body/entities/ItemEntity.html",[12,0.021,21,0.144,22,0.162,23,0.144,26,0.284,41,0.162,42,0.125,43,0.011,44,0.011,51,0.285,58,1.384,59,1,60,0.884,61,2.201,64,1.511,67,1.046,68,0.768,124,0.546,178,0.614,199,0.759,223,1.64,260,1.727,268,1.107,355,1.859,358,1.949,362,3.083,364,2.98,394,3.135,404,1.554,405,1.554,406,1.387,407,1.625,408,1.928,409,1.323,412,0.644,419,3.688,420,3.688,421,3.688,422,3.688,423,3.688,424,3.497,425,2.136,426,3.687,427,4.58,428,2.375,431,4.152,432,3.687,435,3.497,439,2.816,441,1.912,443,3.497,444,2.375,446,3.497,448,3.497,449,2.375,472,0.718,501,1.541,503,1.509,505,3.342,506,3.342,508,2.583,509,2.583,511,3.066,513,3.9,515,1.912,517,2.583,518,2.583,521,2.583,522,2.583,523,2.816,525,1.244,604,1.912,628,1.833,728,2.375,729,4.152,730,4.152,731,4.09,732,4.09,733,2.777,734,6.175,735,6.578,736,6.578,737,2.777,738,2.777,739,2.777,740,2.777,741,2.777,742,4.09,743,2.777,744,2.777,745,2.777,746,2.777,747,2.777,748,2.777,749,2.777,750,2.777,751,2.777,752,2.777,753,2.777,754,2.777,755,4.09,756,2.777,757,2.777,758,2.375]],["title/interfaces/ItemInterface.html",[458,1.095,478,1.287]],["body/interfaces/ItemInterface.html",[12,0.021,21,0.185,22,0.209,23,0.185,26,0.286,41,0.396,43,0.014,44,0.014,47,0.973,51,0.367,58,1.551,59,0.857,60,0.92,67,0.99,68,0.665,70,1.206,124,0.702,145,1.198,178,0.339,179,1.33,193,1.206,199,0.908,217,2.066,355,1.636,404,1.92,405,1.92,406,1.444,407,1.483,412,1.294,425,2.392,458,2.201,459,1.95,460,1.702,461,1.702,462,2.331,463,1.82,464,2.446,465,1.702,466,1.702,467,2.331,468,1.702,469,1.702,470,2.485,471,3.297,472,0.923,473,1.702,474,1.508,475,1.702,476,1.702,477,1.508,478,1.989,479,1.508,480,1.424,481,1.95,482,2.066,483,1.702,484,1.702,485,1.702,486,1.702,487,1.702,488,1.702,489,1.702,490,1.508,491,1.6,492,1.6,493,1.508,494,1.702,495,1.702,496,1.702,497,1.702,498,1.702,499,1.702,500,1.702]],["title/modules/ItemModule.html",[0,1.038,15,1.834]],["body/modules/ItemModule.html",[0,1.965,2,2.073,3,2.073,4,2.35,5,2.35,6,2.073,7,3.216,8,3.216,12,0.021,15,3.594,18,2.945,19,2.35,20,2.35,21,0.239,22,0.27,23,0.239,25,2.514,26,0.399,27,1.133,29,2.702,30,1.743,41,0.27,42,0.209,43,0.016,44,0.016,47,1.58,178,0.439,179,1.139,412,1.345,628,2.073,638,3.5,702,4.357,719,3.955,720,3.514,759,3.955,760,3.955,761,3.955,762,4.625,763,5.795,764,4.625,765,4.625]],["title/interfaces/ItemReportInterface.html",[458,1.095,490,1.525]],["body/interfaces/ItemReportInterface.html",[12,0.021,21,0.187,22,0.211,23,0.187,26,0.288,41,0.397,43,0.014,44,0.014,47,0.986,51,0.371,58,1.275,59,1.105,60,1.042,67,0.597,68,0.622,70,1.221,124,0.711,145,0.885,178,0.343,179,1.334,193,1.221,199,0.916,217,2.371,355,1.776,404,1.157,405,1.157,406,1.417,407,1.703,412,1.144,425,1.441,458,2.205,459,1.967,460,1.723,461,1.723,462,2.35,463,1.703,464,2.623,465,1.723,466,1.723,467,2.35,468,1.723,469,1.723,470,2.506,471,3.31,472,0.934,473,1.723,474,1.527,475,1.723,476,1.723,477,1.527,478,1.759,479,1.527,480,1.441,481,2.517,482,2.547,483,1.723,484,1.723,485,1.723,486,1.723,487,1.723,488,1.723,489,1.723,490,2.083,491,1.62,492,1.62,493,1.527,494,1.723,495,1.723,496,1.723,497,1.723,498,1.723,499,1.723,500,1.723]],["title/injectables/ItemService.html",[196,1.219,638,1.72]],["body/injectables/ItemService.html",[12,0.021,21,0.088,22,0.099,23,0.088,26,0.334,27,0.415,30,0.639,41,0.099,42,0.077,43,0.008,44,0.008,51,0.174,52,1.11,58,0.719,59,1.21,60,1.086,64,1.128,66,1.833,67,0.916,68,0.539,69,1.833,71,2.093,72,2.77,88,0.808,89,2.227,90,2.791,96,0.862,112,1.168,132,1.11,133,1.634,145,1.004,178,0.429,179,1.092,183,2.394,196,0.94,197,0.862,199,0.517,200,1.836,202,3.66,207,2.394,212,3.289,222,1.587,223,1.978,225,3.775,226,3.692,227,3.113,229,2.381,230,2.227,231,3.823,232,2.381,234,2.821,235,3.935,236,2.236,237,2.459,256,3.957,258,3.692,260,0.716,261,0.862,266,1.168,267,0.991,268,0.676,271,1.626,272,1.168,276,2.975,282,2.84,289,1.451,292,2.588,293,2.588,294,1.451,295,1.168,296,1.451,297,1.451,298,3.071,299,1.289,301,2.115,318,2.381,319,3.437,321,1.451,329,2.588,337,0.991,338,1.917,355,0.462,357,0.991,379,1.071,404,2.122,405,1.913,406,1.32,407,2.176,408,2.055,412,1.192,416,3.244,419,3.437,420,2.69,421,2.69,422,2.69,423,3.437,439,1.168,464,1.705,472,0.438,481,0.676,482,1.495,490,1.176,541,3.745,616,0.991,626,1.451,628,0.76,637,2.381,638,1.327,646,3.504,656,2.115,657,1.289,661,1.451,674,2.381,677,3.504,682,1.168,683,1.451,685,1.451,693,2.115,695,1.289,696,1.289,700,1.289,704,3.028,705,3.028,706,3.028,707,1.451,714,3.843,718,2.115,720,1.289,729,1.451,730,1.451,766,1.451,767,3.028,768,2.437,769,1.696,770,2.784,771,1.696,772,4.097,773,1.696,774,1.696,775,1.451,776,1.696,777,1.696,778,1.289,779,1.696,780,1.696,781,1.696,782,1.696,783,4.862,784,1.696,785,1.696,786,4.097,787,4.097,788,2.784,789,1.696,790,1.696,791,2.784,792,1.696,793,1.696,794,1.696,795,1.696,796,2.381,797,1.696,798,1.696,799,2.784,800,1.696,801,1.696,802,1.696,803,1.696,804,1.696,805,1.696,806,1.696,807,1.696,808,1.696,809,1.696,810,1.696,811,1.696,812,1.696,813,1.696,814,1.696,815,1.451]],["title/injectables/JwtAuthGuard.html",[102,1.618,196,1.219]],["body/injectables/JwtAuthGuard.html",[0,1.783,12,0.021,21,0.267,22,0.302,23,0.267,26,0.363,27,1.265,41,0.302,42,0.233,43,0.017,44,0.017,50,5.303,102,2.779,178,0.49,179,1.219,186,3.556,193,2.245,196,2.094,197,2.624,222,2.779,525,2.979,572,3.017,816,4.417,817,4.575,818,6.201,819,6.201]],["title/interfaces/JwtPayloadInterface.html",[458,1.095,474,1.525]],["body/interfaces/JwtPayloadInterface.html",[12,0.021,21,0.192,22,0.217,23,0.192,26,0.294,41,0.399,43,0.014,44,0.014,47,1.013,51,0.382,58,1.576,59,0.88,60,0.939,67,0.613,68,0.412,70,2.06,124,0.73,145,0.91,178,0.352,179,1.342,193,1.697,199,0.933,217,2.122,355,1.663,404,1.188,405,1.188,406,1.422,407,1.524,412,1.166,425,1.481,458,2.212,459,2.003,460,1.77,461,1.77,462,2.394,463,1.727,464,2.475,465,1.77,466,1.77,467,2.394,468,1.77,469,1.77,470,2.552,471,3.336,472,0.96,473,2.394,474,2.122,475,1.77,476,1.77,477,1.569,478,1.792,479,1.569,480,1.481,481,2.003,482,2.122,483,1.77,484,1.77,485,1.77,486,1.77,487,1.77,488,1.77,489,1.77,490,1.569,491,1.665,492,1.665,493,1.569,494,1.77,495,1.77,496,1.77,497,1.77,498,1.77,499,1.77,500,1.77]],["title/injectables/JwtStrategy.html",[176,2.28,196,1.219]],["body/injectables/JwtStrategy.html",[0,1.425,12,0.021,21,0.188,22,0.213,23,0.188,26,0.397,27,0.892,30,1.372,41,0.213,42,0.164,43,0.014,44,0.014,51,0.374,52,1.976,59,1.207,60,0.601,64,1.089,66,1.868,67,0.818,68,0.549,69,1.868,70,1.674,71,1.868,72,2.221,88,2.362,90,1.735,100,2.507,132,1.452,133,1.452,145,0.892,176,3.13,178,0.47,179,1.189,186,2.507,193,2.296,196,1.674,197,1.85,200,1.632,202,3.291,206,3.113,207,3.533,210,4.238,212,2.518,213,4.238,223,1.23,225,3.558,230,2.694,234,3.879,241,4.28,267,2.127,268,1.452,270,3.412,276,2.863,282,2.127,298,2.299,316,3.113,473,2.882,474,2.555,501,1.868,525,2.525,541,2.895,616,2.127,820,2.766,821,6.048,822,4.595,823,4.956,824,5.634,825,3.641,826,3.641,827,3.641,828,6.327,829,4.956,830,4.956,831,4.956,832,3.641,833,3.113,834,3.113,835,3.641,836,3.641,837,3.641,838,3.641,839,3.641,840,3.641,841,3.641,842,3.113]],["title/classes/LoginDto.html",[42,0.163,74,2.28]],["body/classes/LoginDto.html",[12,0.021,21,0.246,22,0.279,23,0.246,26,0.345,41,0.279,42,0.266,43,0.016,44,0.016,51,0.49,58,1.733,61,1.89,64,1.297,68,0.654,70,2.328,74,3.729,124,0.937,178,0.56,199,1.096,242,4.353,344,3.21,358,2.814,359,2.271,362,2.814,364,2.832,367,4.235,377,5.049,388,3.748,389,4.874,393,2.591,394,3.057,843,4.076,844,5.905,845,4.766,846,4.766]],["title/controllers/ReportController.html",[45,1.525,847,2.485]],["body/controllers/ReportController.html",[12,0.021,21,0.187,22,0.211,23,0.187,26,0.414,27,0.884,36,1.962,41,0.211,42,0.163,43,0.014,44,0.014,45,1.524,47,0.984,49,2.279,51,0.371,52,1.964,59,1.205,60,1.148,61,1.795,64,1.232,66,2.114,67,0.925,68,0.622,69,2.114,71,2.114,93,3.111,102,2.208,104,2.108,105,2.208,107,1.72,109,1.524,111,1.834,113,3.276,116,3.111,118,2.279,120,2.279,121,2.279,122,2.279,123,2.279,124,0.709,129,2.279,132,1.439,133,2.236,140,2.742,145,1.374,200,2.514,454,1.617,464,1.36,472,0.933,568,2.85,569,2.279,571,2.484,572,2.108,573,2.484,574,2.484,575,2.279,617,2.678,638,2.673,658,2.742,767,4.796,775,3.086,847,3.391,848,3.086,849,5.608,850,5.608,851,3.609,852,3.609,853,3.609,854,3.609,855,3.609,856,3.609,857,3.609,858,3.609,859,3.086,860,3.049,861,2.742,862,2.742,863,2.742,864,3.609,865,3.609,866,3.609,867,3.609,868,3.609,869,3.609,870,3.609,871,3.609,872,3.609,873,3.609,874,3.609,875,3.609,876,3.609,877,3.609,878,3.609,879,3.609,880,3.609,881,3.609,882,3.609,883,3.609]],["title/modules/ReportModule.html",[0,1.038,16,2.28]],["body/modules/ReportModule.html",[0,1.962,2,2.064,3,2.064,4,2.34,5,2.34,6,2.064,7,2.34,8,2.34,12,0.021,14,3.785,15,3.538,16,4.586,17,4.068,18,2.936,19,2.34,20,2.34,21,0.238,22,0.269,23,0.238,25,3.141,26,0.399,27,1.128,36,2.503,37,3.937,41,0.269,42,0.208,43,0.016,44,0.016,47,1.576,178,0.437,179,1.136,454,2.064,630,3.498,847,4.348,884,4.604,885,4.604,886,4.604,887,4.942,888,4.604,889,3.937]],["title/controllers/RetrunedInvoiceController.html",[45,1.525,890,2.485]],["body/controllers/RetrunedInvoiceController.html",[12,0.021,21,0.195,22,0.22,23,0.195,26,0.417,27,0.923,35,3.117,36,2.758,41,0.22,42,0.17,43,0.014,44,0.014,45,1.592,47,1.028,49,2.38,51,0.387,52,2.023,59,1.074,60,1.012,61,1.206,64,0.828,66,1.421,67,0.622,68,0.562,69,1.421,71,1.421,72,2.274,88,1.796,92,2.595,93,3.622,96,1.915,102,2.274,104,2.202,105,2.274,107,2.418,109,1.592,111,1.915,113,2.758,115,2.595,116,3.204,118,2.38,119,2.595,120,2.38,121,2.38,122,2.38,123,2.38,124,0.741,129,2.38,132,1.503,133,1.503,145,0.923,178,0.481,200,1.689,313,3.223,406,1.127,412,1.177,436,2.38,453,4.165,454,2.274,463,1.739,472,0.974,556,4.338,566,3.223,567,3.854,569,2.38,570,2.595,571,2.595,572,2.202,573,2.595,574,2.595,575,2.38,578,4.338,579,2.38,583,2.863,584,2.863,585,3.223,586,2.863,587,2.863,588,2.863,590,3.223,591,3.223,592,3.223,645,4.661,860,3.117,890,3.493,891,3.223,892,5.735,893,3.769,894,3.769,895,3.769,896,3.769,897,4.904,898,1.915,899,2.863,900,2.595,901,3.769,902,3.769,903,3.223,904,3.769,905,3.769,906,3.769]],["title/entities/ReturnedInvoiceEntity.html",[501,1.361,898,1.834]],["body/entities/ReturnedInvoiceEntity.html",[12,0.021,21,0.185,22,0.209,23,0.185,26,0.351,41,0.209,42,0.162,43,0.014,44,0.014,51,0.368,59,1.102,60,0.991,61,2.079,64,1.427,67,0.809,68,0.737,124,0.704,178,0.53,199,0.91,223,1.21,260,2.538,261,2.491,268,1.429,337,2.864,355,1.715,362,2.663,364,2.744,394,2.863,404,1.147,405,1.147,406,1.277,408,1.887,409,1.708,412,1.46,413,2.467,425,2.228,432,2.467,441,2.467,454,2.981,463,1.487,472,0.926,478,1.993,479,2.36,501,1.848,503,1.948,505,3.847,506,3.847,508,3.096,509,3.096,511,3.529,513,3.529,515,2.467,517,3.096,518,3.096,521,3.096,522,3.096,523,3.375,525,1.606,604,2.467,608,3.064,610,4.192,611,3.064,616,2.093,618,4.192,619,3.064,620,3.064,898,2.491,907,5.053,908,3.064,909,3.583,910,3.583,911,3.583,912,3.583,913,4.902,914,3.583,915,3.583,916,3.583]],["title/modules/ReturnedInvoiceModule.html",[0,1.038,17,2.109]],["body/modules/ReturnedInvoiceModule.html",[0,1.917,2,1.912,3,1.912,4,2.168,5,2.168,6,1.912,7,3.097,8,3.097,12,0.021,14,3.711,15,3.469,17,4.218,18,2.797,19,2.168,20,2.168,21,0.221,22,0.249,23,0.221,25,2.993,26,0.406,27,1.045,29,2.492,30,1.608,35,3.501,36,2.319,41,0.249,42,0.192,43,0.015,44,0.015,47,1.501,178,0.405,179,1.082,454,1.912,569,2.695,617,2.993,627,3.649,630,3.241,860,3.948,889,3.649,890,4.196,898,2.168,899,3.241,900,2.937,917,3.649,918,4.267,919,3.649,920,3.649,921,4.267,922,4.267]],["title/injectables/ReturnedInvoiceService.html",[196,1.219,860,1.962]],["body/injectables/ReturnedInvoiceService.html",[12,0.021,21,0.134,22,0.151,23,0.134,26,0.384,27,0.633,30,0.974,35,3.162,36,3.011,41,0.151,42,0.117,43,0.011,44,0.011,51,0.265,52,1.545,58,0.668,59,1.149,60,1.024,64,1.136,66,1.753,67,0.768,68,0.516,69,1.753,71,1.753,72,2.085,88,1.231,90,2.217,96,1.312,132,1.545,133,2.319,145,0.633,178,0.368,179,0.914,183,3.02,196,1.309,197,1.312,199,0.72,200,2.607,202,3.236,207,3.02,212,2.955,222,2.607,223,1.871,225,2.938,226,4.153,230,2.107,231,3.202,235,3.559,236,2.938,260,1.091,261,1.969,266,1.778,267,1.509,268,1.03,271,2.264,272,1.778,276,2.626,282,2.264,292,1.631,293,1.631,298,2.448,299,1.962,301,2.944,329,1.631,337,1.509,355,0.704,379,1.631,406,1.386,407,1.568,408,1.571,412,1.543,436,2.448,453,3.673,454,2.482,459,1.855,463,2.117,464,2.088,472,0.668,478,1.382,480,1.545,481,1.03,541,3.236,568,3.065,570,1.778,600,2.209,616,1.509,617,2.107,638,2.874,645,4.208,656,2.944,657,1.962,658,1.962,670,2.209,675,2.209,682,1.778,693,2.944,695,1.962,696,1.962,700,1.962,815,2.209,859,2.209,860,2.107,897,4.42,898,2.363,899,1.962,900,1.778,903,2.209,923,2.209,924,3.876,925,2.583,926,2.583,927,3.876,928,2.583,929,2.583,930,5.158,931,4.973,932,3.876,933,2.583,934,2.583,935,3.876,936,2.583,937,2.583,938,3.876,939,2.583,940,2.583,941,2.583,942,2.583,943,2.583,944,2.583,945,2.583,946,2.583,947,2.583,948,2.583]],["title/guards/RolesGuard.html",[105,1.618,817,2.485]],["body/guards/RolesGuard.html",[0,1.623,12,0.021,21,0.229,22,0.259,23,0.229,26,0.363,27,1.086,41,0.259,42,0.2,43,0.016,44,0.016,51,0.456,52,2.25,59,1.087,64,1.24,66,2.127,67,0.931,68,0.625,69,2.127,71,1.671,105,2.529,107,2.958,108,3.792,132,2.25,133,1.768,145,1.382,178,0.421,179,1.109,223,1.497,273,4.825,276,3.154,319,4.287,358,2.113,363,3.564,525,1.987,822,3.369,949,4.434,950,3.792,951,5.643,952,6.896,953,4.434,954,7.007,955,4.434,956,5.643,957,5.587,958,4.434,959,4.434,960,3.792,961,4.434,962,4.434,963,4.434,964,4.434,965,4.434]],["title/interfaces/UpdateInvoiceIterface.html",[458,1.095,477,1.525]],["body/interfaces/UpdateInvoiceIterface.html",[12,0.021,21,0.19,22,0.214,23,0.19,26,0.291,41,0.398,43,0.014,44,0.014,47,1,51,0.377,58,1.287,59,0.872,60,0.933,67,0.605,68,0.552,70,1.239,124,0.721,145,0.898,178,0.348,179,1.338,193,1.239,199,0.925,217,2.104,355,1.654,404,1.174,405,1.174,406,1.431,407,1.511,412,1.472,425,1.462,458,2.208,459,1.986,460,1.748,461,1.748,462,2.373,463,1.715,464,2.466,465,1.748,466,1.748,467,2.373,468,1.748,469,1.748,470,2.53,471,3.324,472,0.948,473,1.748,474,1.549,475,2.373,476,2.373,477,2.104,478,2.164,479,2.562,480,1.462,481,1.986,482,2.104,483,1.748,484,1.748,485,1.748,486,1.748,487,1.748,488,1.748,489,1.748,490,1.549,491,1.644,492,1.644,493,1.549,494,1.748,495,1.748,496,1.748,497,1.748,498,1.748,499,1.748,500,1.748]],["title/classes/UpdateItemDto.html",[42,0.163,714,2.28]],["body/classes/UpdateItemDto.html",[12,0.02,21,0.282,22,0.319,23,0.282,26,0.374,41,0.319,42,0.246,43,0.018,44,0.018,124,1.072,222,2.445,359,2.6,416,3.187,418,4.145,525,2.871,714,4.046,718,4.145,966,4.145,967,6.406,968,4.666]],["title/classes/UpdateNumberOfItems.html",[42,0.163,768,2.485]],["body/classes/UpdateNumberOfItems.html",[12,0.02,21,0.273,22,0.308,23,0.273,26,0.308,41,0.308,42,0.283,43,0.018,44,0.018,51,0.542,61,1.687,64,1.158,68,0.584,199,1.166,359,2.513,388,3.667,393,2.866,405,2.145,406,1.364,415,4.322,768,4.322,966,4.77,969,4.508,970,5.272,971,5.272]],["title/classes/UpdateUserDto.html",[42,0.163,84,2.28]],["body/classes/UpdateUserDto.html",[12,0.021,21,0.264,22,0.299,23,0.264,26,0.36,41,0.299,42,0.231,43,0.017,44,0.017,59,1.08,78,2.987,82,3.885,84,3.893,97,3.885,124,1.005,178,0.485,179,1.212,222,2.292,230,3.351,256,4.179,258,3.52,359,2.437,361,3.885,491,2.763,492,2.292,525,2.966,968,5.271,972,4.373,973,6.164,974,6.164,975,5.113,976,5.113]],["title/entities/UserEntity.html",[60,0.596,501,1.361]],["body/entities/UserEntity.html",[12,0.021,21,0.156,22,0.176,23,0.156,26,0.37,41,0.176,42,0.136,43,0.012,44,0.012,51,0.309,58,1.675,59,0.975,60,0.716,61,2.171,64,1.491,67,0.839,68,0.76,70,1.992,109,2.674,110,2.073,111,1.53,124,0.592,178,0.528,199,0.805,215,2.987,217,1.832,223,1.017,257,3.501,260,1.832,268,1.201,295,2.987,330,3.863,331,3.863,344,2.764,350,2.534,351,1.759,355,1.608,358,2.067,362,2.652,363,2.74,364,2.737,365,2.987,366,3.71,370,3.71,394,2.811,406,0.853,407,1.316,408,1.718,412,1.18,454,1.349,463,1.316,501,1.635,502,3.025,503,1.637,508,2.74,509,2.74,511,3.212,513,3.999,517,4.093,518,4.093,521,2.74,522,2.74,524,3.863,525,1.349,576,2.827,604,2.073,617,2.764,628,2.494,629,2.287,680,3.71,682,3.501,758,2.575,796,3.71,898,2.827,900,2.073,907,2.287,977,2.575,978,5.085,979,3.011,980,3.011,981,3.011,982,3.011,983,3.011,984,5.565,985,4.338,986,3.011,987,3.011,988,3.011,989,3.011,990,3.011,991,4.338,992,4.338,993,3.011,994,3.011,995,3.011,996,3.011,997,5.898,998,3.011,999,3.011,1000,2.287]],["title/coverage.html",[1001,4.213]],["body/coverage.html",[6,1.263,12,0.021,23,0.146,31,2.142,35,1.532,36,2.248,42,0.287,43,0.012,44,0.012,45,2.427,46,1.941,48,2.411,60,0.465,68,0.312,74,1.78,78,1.647,84,1.78,98,1.647,102,1.263,105,1.263,107,1.343,113,1.532,125,3.093,126,2.142,127,2.142,128,2.847,176,1.78,189,2.142,193,1.397,196,2.096,198,2.411,212,2.101,223,0.952,271,1.647,337,4.337,360,2.411,361,3.142,372,2.142,401,1.78,402,2.411,403,3.142,406,0.554,416,1.647,417,2.411,418,3.142,453,1.78,454,2.575,455,2.411,458,1.93,459,1.124,461,3.033,474,1.191,477,1.191,478,1.005,480,1.124,482,1.191,490,1.191,493,1.191,501,2.165,502,1.532,504,2.411,529,1.647,534,2.411,549,1.941,550,2.411,568,1.432,572,1.647,576,1.432,579,3.093,580,2.142,603,2.411,628,1.263,633,2.411,638,1.343,702,1.941,703,2.411,714,1.78,728,2.411,766,2.411,768,1.941,816,2.411,817,1.941,820,3.142,843,2.411,847,1.941,848,2.411,860,1.532,861,2.142,862,2.142,863,2.142,890,1.941,891,2.411,898,1.432,907,2.142,908,2.411,923,2.411,950,2.411,966,3.142,969,2.411,972,2.411,977,2.411,1001,2.411,1002,2.411,1003,2.819,1004,2.819,1005,4.135,1006,2.819,1007,2.819,1008,2.411,1009,7.186,1010,5.395,1011,5.395,1012,2.411,1013,7.301,1014,4.898,1015,4.898,1016,4.898,1017,2.819,1018,2.819,1019,4.613,1020,3.536,1021,3.536,1022,2.411,1023,4.898,1024,4.898,1025,2.819,1026,2.819,1027,2.819,1028,2.819,1029,2.819,1030,2.819,1031,2.819,1032,4.898,1033,4.135,1034,4.135,1035,4.188,1036,2.819,1037,4.135,1038,4.188,1039,3.142,1040,2.411,1041,4.188,1042,2.819,1043,2.819,1044,2.411,1045,2.411,1046,2.819,1047,2.819]],["title/dependencies.html",[3,1.946,1048,2.578]],["body/dependencies.html",[3,2.225,12,0.021,27,1.216,30,1.871,42,0.273,43,0.017,44,0.017,124,0.976,186,3.417,188,3.771,193,1.676,268,1.979,269,4.245,270,3.417,393,2.698,451,4.245,833,5.177,960,4.245,1049,4.964,1050,4.964,1051,6.532,1052,4.964,1053,4.964,1054,4.964,1055,4.964,1056,4.964,1057,4.964,1058,4.964,1059,4.964,1060,4.964,1061,4.964,1062,4.964,1063,4.964,1064,4.964,1065,4.964,1066,4.964,1067,4.964,1068,4.964,1069,4.964,1070,4.964,1071,4.964,1072,4.964,1073,4.964]],["title/miscellaneous/enumerations.html",[1074,1.761,1075,3.713]],["body/miscellaneous/enumerations.html",[12,0.02,43,0.018,44,0.018,51,0.571,109,2.736,249,4.921,261,3.291,363,3.512,365,4.46,575,3.512,1000,4.224,1074,3.248,1075,4.755,1076,5.56,1077,6.478]],["title/miscellaneous/functions.html",[1074,1.761,1078,3.713]],["body/miscellaneous/functions.html",[6,3.001,12,0.019,43,0.018,44,0.018,51,0.54,66,1.982,67,0.868,68,0.583,69,1.982,71,1.982,178,0.499,179,1.034,212,2.672,223,2.117,271,3.662,607,4.497,1039,3.995,1045,4.497,1074,3.072,1078,4.497,1079,4.497,1080,5.259,1081,5.259,1082,6.268,1083,7.085,1084,6.268,1085,6.697,1086,5.259,1087,5.259]],["title/index.html",[51,0.31,239,2.29,1088,3.014]],["body/index.html",[12,0.02,43,0.016,44,0.016,107,2.072,180,3.719,181,3.719,193,1.469,222,1.949,224,2.994,230,3.03,242,2.746,247,5.867,270,4.234,344,2.364,350,2.54,351,2.54,364,2.74,491,1.949,492,1.949,887,3.719,1002,3.719,1089,6.861,1090,4.349,1091,4.349,1092,3.719,1093,4.349,1094,4.349,1095,4.349,1096,4.349,1097,5.26,1098,5.573,1099,4.349,1100,4.349,1101,5.573,1102,5.573,1103,5.573,1104,4.349,1105,4.349,1106,5.26,1107,4.349,1108,5.573,1109,4.349,1110,4.349,1111,4.349,1112,4.349,1113,4.349,1114,4.349,1115,6.861,1116,4.349,1117,4.349,1118,4.349,1119,4.349,1120,5.573,1121,4.349,1122,4.349,1123,4.349,1124,4.349,1125,4.349,1126,4.349,1127,4.349,1128,4.349,1129,4.349,1130,4.349,1131,4.349,1132,4.349,1133,4.349,1134,4.349,1135,4.349,1136,5.573,1137,4.349,1138,4.349,1139,5.573,1140,4.349,1141,3.719,1142,4.349,1143,4.349,1144,4.349,1145,5.573,1146,4.349,1147,4.349]],["title/modules.html",[2,2.208]],["body/modules.html",[1,3.658,2,2.381,11,3.356,12,0.018,13,3.104,14,2.888,15,2.7,16,3.356,17,3.104,43,0.018,44,0.018,1148,7.28,1149,7.28,1150,7.28,1151,7.28]],["title/overview.html",[1152,4.213]],["body/overview.html",[0,1.096,1,4.973,2,1.708,3,1.708,4,1.937,5,1.937,6,1.708,7,1.937,8,1.937,9,3.259,10,3.259,11,4.478,12,0.021,13,3.948,14,3.882,15,3.535,16,4.394,17,4.142,18,2.597,19,1.937,20,1.937,43,0.014,44,0.014,47,1.039,98,3.369,102,3.029,105,2.762,173,3.259,174,3.259,175,3.259,176,3.642,197,1.937,359,1.816,379,3.228,409,1.816,460,1.816,503,2.072,526,3.259,527,3.259,528,3.259,529,3.948,568,3.434,621,3.259,623,3.259,624,3.259,638,3.221,759,3.259,760,3.259,761,3.259,817,2.624,860,3.674,917,3.259,919,3.259,920,3.259,1152,3.259,1153,5.111,1154,5.111]],["title/properties.html",[199,0.806,1048,2.578]],["body/properties.html",[12,0.02,43,0.018,44,0.018,178,0.519,199,1.016,224,3.766,344,2.974,350,3.196,351,3.196,778,4.156,1092,4.678,1097,5.487,1106,4.678,1141,4.678,1155,5.471,1156,5.471,1157,5.471,1158,5.471,1159,5.471,1160,5.471,1161,5.471,1162,5.471,1163,5.471]],["title/interfaces/swaggerInterface.html",[458,1.095,493,1.525]],["body/interfaces/swaggerInterface.html",[12,0.021,21,0.189,22,0.214,23,0.189,26,0.29,41,0.398,43,0.014,44,0.014,47,1.354,51,0.375,58,1.284,59,0.87,60,0.931,67,0.603,68,0.671,70,1.234,124,0.718,145,0.895,178,0.347,179,1.314,193,1.234,199,0.922,217,2.098,355,1.651,404,1.169,405,1.169,406,1.419,407,1.507,412,1.153,425,1.457,458,2.207,459,1.981,460,1.741,461,1.741,462,2.368,463,1.712,464,2.463,465,1.741,466,1.741,467,2.368,468,1.741,469,1.741,470,3.078,471,3.32,472,0.944,473,1.741,474,1.543,475,1.741,476,1.741,477,1.543,478,1.772,479,1.543,480,1.457,481,1.981,482,2.098,483,1.741,484,1.741,485,1.741,486,1.741,487,1.741,488,1.741,489,1.741,490,1.543,491,2.227,492,2.227,493,2.098,494,2.887,495,2.887,496,1.741,497,1.741,498,1.741,499,1.741,500,1.741,1164,4.968]],["title/miscellaneous/variables.html",[1074,1.761,1165,3.713]],["body/miscellaneous/variables.html",[12,0.021,21,0.126,31,1.854,35,2.253,43,0.007,44,0.007,51,0.149,54,1.854,59,1.053,60,0.613,68,0.728,70,1.765,88,1.163,89,2.018,107,1.163,109,1.568,113,1.326,125,2.838,126,1.854,127,1.854,128,2.556,145,0.355,178,0.692,179,0.285,189,1.854,193,2.131,215,2.556,217,2.019,222,2.143,223,1.765,224,0.997,227,1.854,228,1.238,234,1.68,236,3.172,237,1.719,239,3.815,240,1.238,241,4.632,242,1.997,249,4.324,256,2.618,257,2.556,258,1.68,260,2.735,261,3.29,276,0.736,307,1.238,309,1.238,338,3.292,344,2.599,350,1.848,351,1.848,355,1.13,357,2.793,363,3.669,364,2.019,365,2.177,406,0.73,407,1.363,408,1.4,409,1.163,412,1.289,426,0.997,439,2.556,454,0.649,462,0.69,463,1.873,464,2.145,465,1.163,466,1.163,467,1.507,468,1.163,469,1.163,475,1.507,476,0.69,481,1.261,483,0.69,484,0.69,485,0.69,486,0.69,487,0.69,488,0.69,489,0.69,493,2.499,494,2.819,495,2.819,496,2.819,497,2.393,498,2.769,499,2.712,500,2.491,501,0.546,502,0.787,503,0.787,541,3.607,576,1.607,579,2.838,580,1.854,617,2.443,628,1.418,649,2.087,692,1.238,778,1.1,820,1.1,822,1.1,834,2.087,842,1.238,861,1.854,862,1.854,863,1.854,898,1.24,930,2.087,931,2.087,957,1.238,1000,1.1,1008,1.238,1012,1.238,1019,1.238,1020,1.238,1021,1.238,1022,2.087,1035,1.238,1038,1.238,1039,1.1,1040,2.087,1041,1.238,1044,1.238,1074,0.846,1079,1.238,1165,1.238,1166,5.916,1167,2.44,1168,1.448,1169,2.44,1170,1.448,1171,1.448,1172,5.81,1173,5.81,1174,1.448,1175,1.448,1176,5.81,1177,5.691,1178,4.145,1179,2.44,1180,1.448,1181,1.448,1182,1.448,1183,1.448,1184,1.448,1185,1.448,1186,1.448,1187,1.448,1188,1.448,1189,1.448,1190,1.448,1191,1.448,1192,2.44,1193,1.448,1194,1.448,1195,1.448,1196,1.448,1197,1.448,1198,1.448,1199,1.448,1200,1.448,1201,1.448,1202,1.448,1203,1.448,1204,1.448,1205,3.163,1206,4.145,1207,2.44,1208,3.163,1209,1.448,1210,1.448,1211,1.448,1212,1.448,1213,1.448,1214,1.448,1215,1.448,1216,1.448,1217,1.448,1218,1.448,1219,1.448]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1156,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":409,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.25",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["113900",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["120000",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["128",{"_index":378,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["15",{"_index":385,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["16",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["19800.3",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1})@column({unique",{"_index":745,"title":{},"body":{"entities/ItemEntity.html":{}}}],["2",{"_index":413,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["2/3",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20300.4",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23505",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["25",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":374,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["3.2.3",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["3.3.12",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":428,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["3.6})@column({type",{"_index":738,"title":{},"body":{"entities/ItemEntity.html":{}}}],["30.5",{"_index":618,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["30.5})@column('float",{"_index":611,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["3000",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30000",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["4.6",{"_index":449,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["4.6})@column({type",{"_index":753,"title":{},"body":{"entities/ItemEntity.html":{}}}],["40",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":444,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["45})@column({type",{"_index":749,"title":{},"body":{"entities/ItemEntity.html":{}}}],["5",{"_index":1154,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":372,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{},"coverage.html":{}}}],["6/10",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1153,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":379,"title":{},"body":{"classes/CreataUserDto.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{},"overview.html":{}}}],["8.12.0",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_username",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["_username.tolowercase",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["ability",{"_index":1126,"title":{},"body":{"index.html":{}}}],["access",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["accountant",{"_index":365,"title":{},"body":{"classes/CreataUserDto.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["accounttype",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["accounttype.accountant",{"_index":904,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["accounttype.admin",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["accounttype})@column",{"_index":979,"title":{},"body":{"entities/UserEntity.html":{}}}],["add",{"_index":462,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["addat",{"_index":505,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["admin",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admindata",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["admindata.name",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["admindata.password",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["admindata.username",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["aims",{"_index":1090,"title":{},"body":{"index.html":{}}}],["already",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{},"miscellaneous/variables.html":{}}}],["api/auth/delete/:username",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/auth/login",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/auth/register",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/auth/update/:username",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibadrequestresponse",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apibadrequestresponse(createdoc.responses.badrequest",{"_index":586,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apibadrequestresponse(deletedoc.responses.badrequest",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibadrequestresponse(logindoc.responses.badrequest",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibadrequestresponse(registerdoc.responses.badrequest",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibadrequestresponse(updatedoc.responses.badrequest",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["apibearerauth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apibody",{"_index":578,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apicreatedresponse",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicreatedresponse(logindoc.responses.success",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiforbiddenresponse",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apiforbiddenresponse(createdoc.responses.forbidden",{"_index":587,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apiforbiddenresponse(deletedoc.responses.forbidden",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["apiforbiddenresponse(invoicedoc.responses.forbidden",{"_index":874,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiforbiddenresponse(itemdoc.responses.forbidden",{"_index":868,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiforbiddenresponse(registerdoc.responses.forbidden",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiforbiddenresponse(returnedinvoicedoc.responses.forbidden",{"_index":880,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiforbiddenresponse(updatedoc.responses.forbidden",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["apinotfoundresponse",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apinotfoundresponse(createdoc.responses.notfound",{"_index":585,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apinotfoundresponse(deletedoc.responses.notfound",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["apinotfoundresponse(finddoc.responses.notfound",{"_index":596,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apinotfoundresponse(logindoc.responses.notfound",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse(updatedoc.responses.notfound",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["apiokresponse",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apiokresponse(createdoc.responses.success",{"_index":584,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apiokresponse(deletedoc.responses.success",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["apiokresponse(finddoc.responses.success",{"_index":595,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apiokresponse(invoicedoc.responses.success",{"_index":873,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiokresponse(itemdoc.responses.success",{"_index":867,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiokresponse(registerdoc.responses.success",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse(returnedinvoicedoc.responses.success",{"_index":879,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiokresponse(updatedoc.responses.success",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["apioperation",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apioperation(createdoc.operation",{"_index":583,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apioperation(createdoc.operation)@apiokresponse(undefined.success)@apibadrequestresponse(undefined.badrequest)@apinotfoundresponse(undefined.notfound)@apiforbiddenresponse(undefined.forbidden)@apiunauthorizedresponse(undefined.unauthorized)@apibody({type",{"_index":894,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["apioperation(createdoc.operation)@apiokresponse(undefined.success)@apibadrequestresponse(undefined.badrequest)@apiunauthorizedresponse(undefined.unauthorized)@apiforbiddenresponse(undefined.forbidden)@usepipes(validationpipe)@post('add",{"_index":708,"title":{},"body":{"controllers/ItemController.html":{}}}],["apioperation(createdoc.operation)@apiokresponse(undefined.success)@apinotfoundresponse(undefined.notfound)@apibadrequestresponse(undefined.badrequest)@apiforbiddenresponse(undefined.forbidden)@apiunauthorizedresponse(undefined.unauthorized)@apibody({type",{"_index":555,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apioperation(deletedoc.operation",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["apioperation(deletedoc.operation)@apibearerauth()@apiokresponse(undefined.success)@apibadrequestresponse(undefined.badrequest)@apinotfoundresponse(undefined.notfound)@apiunauthorizedresponse(undefined.unauthorized)@apiforbiddenresponse(undefined.forbidden)@useguards(jwtauthguard",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation(deletedoc.operation)@apiokresponse(undefined.success)@apinotfoundresponse(undefined.notfound)@apiforbiddenresponse(undefined.forbidden)@apiunauthorizedresponse(undefined.unauthorized)@useguards(rolesguard)@roles(accounttype.accountant)@delete('delete/:id",{"_index":561,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apioperation(deletedoc.operation)@apiokresponse(undefined.success)@apinotfoundresponse(undefined.notfound)@apiunauthorizedresponse(undefined.unauthorized)@apiforbiddenresponse(undefined.forbidden)@delete('delete/:id",{"_index":711,"title":{},"body":{"controllers/ItemController.html":{}}}],["apioperation(finddoc.operation",{"_index":594,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apioperation(finddoc.operation)@apiokresponse(undefined.success)@apinotfoundresponse(undefined.notfound)@apiunauthorizedresponse(undefined.unauthorized)@get('find/:id",{"_index":564,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apioperation(invoicedoc.operation",{"_index":872,"title":{},"body":{"controllers/ReportController.html":{}}}],["apioperation(invoicedoc.operation)@apiokresponse(undefined.success)@apiforbiddenresponse(undefined.forbidden)@apiunauthorizedresponse(undefined.unauthorized)@get('invoices",{"_index":852,"title":{},"body":{"controllers/ReportController.html":{}}}],["apioperation(itemdoc.operation",{"_index":866,"title":{},"body":{"controllers/ReportController.html":{}}}],["apioperation(itemdoc.operation)@apiokresponse(undefined.success)@apiforbiddenresponse(undefined.forbidden)@apiunauthorizedresponse(undefined.unauthorized)@get('items",{"_index":854,"title":{},"body":{"controllers/ReportController.html":{}}}],["apioperation(logindoc.operation",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation(logindoc.operation)@apicreatedresponse(undefined.success)@apinotfoundresponse(undefined.notfound)@apibadrequestresponse(undefined.badrequest)@post('login')@usepipes(validationpipe",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation(registerdoc.operation",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation(registerdoc.operation)@apibearerauth()@apiokresponse(undefined.success)@apibadrequestresponse(undefined.badrequest)@apiunauthorizedresponse(undefined.unauthorized)@apiforbiddenresponse(undefined.forbidden)@useguards(jwtauthguard",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation(returnedinvoicedoc.operation",{"_index":878,"title":{},"body":{"controllers/ReportController.html":{}}}],["apioperation(returnedinvoicedoc.operation)@apiokresponse(undefined.success)@apiforbiddenresponse(undefined.forbidden)@apiunauthorizedresponse(undefined.unauthorized)@get('retruned",{"_index":857,"title":{},"body":{"controllers/ReportController.html":{}}}],["apioperation(updatedoc.operation",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["apioperation(updatedoc.operation)@apibearerauth()@apiokresponse(undefined.success)@apibadrequestresponse(undefined.badrequest)@apinotfoundresponse(undefined.notfound)@apiunauthorizedresponse(undefined.unauthorized)@apiforbiddenresponse(undefined.forbidden)@useguards(jwtauthguard",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation(updatedoc.operation)@apiokresponse(undefined.success)@apinotfoundresponse(undefined.notfound)@apibadrequestresponse(undefined.badrequest)@apiunauthorizedresponse(undefined.unauthorized)@apiforbiddenresponse(undefined.forbidden)@usepipes(validationpipe)@patch('update/:id",{"_index":715,"title":{},"body":{"controllers/ItemController.html":{}}}],["apioperationoptions",{"_index":470,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["apiproperty",{"_index":394,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"classes/LoginDto.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["apiproperty({description",{"_index":362,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"classes/LoginDto.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["apiresponseoptions",{"_index":471,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["apitags",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apitags('auth",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('invoice",{"_index":581,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apitags('item",{"_index":721,"title":{},"body":{"controllers/ItemController.html":{}}}],["apitags('report",{"_index":864,"title":{},"body":{"controllers/ReportController.html":{}}}],["apitags('returned",{"_index":901,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["apiunauthorizedresponse",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apiunauthorizedresponse(createdoc.responses.unauthorized",{"_index":588,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["apiunauthorizedresponse(deletedoc.responses.unauthorized",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["apiunauthorizedresponse(finddoc.responses.unauthorized",{"_index":597,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["apiunauthorizedresponse(invoicedoc.responses.unauthorized",{"_index":875,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiunauthorizedresponse(itemdoc.responses.unauthorized",{"_index":869,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiunauthorizedresponse(registerdoc.responses.unauthorized",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse(returnedinvoicedoc.responses.unauthorized",{"_index":881,"title":{},"body":{"controllers/ReportController.html":{}}}],["apiunauthorizedresponse(updatedoc.responses.unauthorized",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["app",{"_index":1140,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":556,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["async",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["auht.guard",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["auht.guard.ts",{"_index":816,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["auth.controller",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":46,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":821,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["auther",{"_index":1147,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":819,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":818,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1163,"title":{},"body":{"properties.html":{}}}],["authoriz",{"_index":951,"title":{},"body":{"guards/RolesGuard.html":{}}}],["authorization",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avgbuypillprice",{"_index":485,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["avgexpirydate",{"_index":489,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["avgofallinvoicesprice",{"_index":465,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["avgproductiondate",{"_index":488,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["avgsellpillprice",{"_index":484,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["backend",{"_index":1097,"title":{},"body":{"index.html":{},"properties.html":{}}}],["backend.git",{"_index":1133,"title":{},"body":{"index.html":{}}}],["badrequest",{"_index":497,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["baseentity",{"_index":521,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["bcrypt",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["benefited",{"_index":1121,"title":{},"body":{"index.html":{}}}],["body",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["body(new",{"_index":591,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["boolean",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{},"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1151,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1148,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1141,"title":{},"body":{"index.html":{},"properties.html":{}}}],["building",{"_index":1144,"title":{},"body":{"index.html":{}}}],["buy",{"_index":787,"title":{},"body":{"injectables/ItemService.html":{}}}],["buyallitemsprice",{"_index":729,"title":{},"body":{"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["buypillprice",{"_index":419,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["call",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["called",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactivate",{"_index":952,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":956,"title":{},"body":{"guards/RolesGuard.html":{}}}],["catch",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["cd",{"_index":1134,"title":{},"body":{"index.html":{}}}],["check",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["checking",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["chocolate",{"_index":441,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["chocolate'})@column",{"_index":747,"title":{},"body":{"entities/ItemEntity.html":{}}}],["cid",{"_index":665,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["class",{"_index":42,"title":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"classes/LoginDto.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"modules/ItemModule.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":359,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"classes/LoginDto.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["clone",{"_index":1131,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_errormodule",{"_index":526,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_exports",{"_index":528,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_providers",{"_index":527,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_invoicemodule",{"_index":621,"title":{},"body":{"modules/InvoiceModule.html":{},"overview.html":{}}}],["cluster_invoicemodule_exports",{"_index":624,"title":{},"body":{"modules/InvoiceModule.html":{},"overview.html":{}}}],["cluster_invoicemodule_imports",{"_index":622,"title":{},"body":{"modules/InvoiceModule.html":{}}}],["cluster_invoicemodule_providers",{"_index":623,"title":{},"body":{"modules/InvoiceModule.html":{},"overview.html":{}}}],["cluster_itemmodule",{"_index":759,"title":{},"body":{"modules/ItemModule.html":{},"overview.html":{}}}],["cluster_itemmodule_exports",{"_index":760,"title":{},"body":{"modules/ItemModule.html":{},"overview.html":{}}}],["cluster_itemmodule_providers",{"_index":761,"title":{},"body":{"modules/ItemModule.html":{},"overview.html":{}}}],["cluster_reportmodule",{"_index":884,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_reportmodule_imports",{"_index":885,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_returnedinvoicemodule",{"_index":917,"title":{},"body":{"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["cluster_returnedinvoicemodule_exports",{"_index":920,"title":{},"body":{"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["cluster_returnedinvoicemodule_imports",{"_index":918,"title":{},"body":{"modules/ReturnedInvoiceModule.html":{}}}],["cluster_returnedinvoicemodule_providers",{"_index":919,"title":{},"body":{"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["column",{"_index":513,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["column('float",{"_index":620,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["column('json",{"_index":619,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["column({type",{"_index":734,"title":{},"body":{"entities/ItemEntity.html":{}}}],["column({unique",{"_index":758,"title":{},"body":{"entities/ItemEntity.html":{},"entities/UserEntity.html":{}}}],["commands",{"_index":779,"title":{},"body":{"injectables/ItemService.html":{}}}],["company",{"_index":431,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["company'})@column",{"_index":740,"title":{},"body":{"entities/ItemEntity.html":{}}}],["companyname",{"_index":420,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["compodoc/compodoc",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["concepts",{"_index":1096,"title":{},"body":{"index.html":{}}}],["config",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["config.get('admin",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["config.get('db",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["config.get('salt",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["config.get('server",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/typeorm.config",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["consolidate",{"_index":1091,"title":{},"body":{"index.html":{}}}],["const",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{}}}],["constructor(@injectrepository(userentity",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(errorrepository",{"_index":535,"title":{},"body":{"injectables/ErrorService.html":{}}}],["constructor(invoicerepository",{"_index":636,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["constructor(itemrepository",{"_index":769,"title":{},"body":{"injectables/ItemService.html":{}}}],["constructor(reflector",{"_index":953,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(rinvoicerepository",{"_index":925,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["constructor(userrepository",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":959,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":962,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":963,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":45,"title":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('invoice",{"_index":582,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["controller('item",{"_index":722,"title":{},"body":{"controllers/ItemController.html":{}}}],["controller('report",{"_index":865,"title":{},"body":{"controllers/ReportController.html":{}}}],["controller('returned",{"_index":902,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["controllers",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"controllers/InvoiceController.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"controllers/ItemController.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"interfaces/UpdateInvoiceIterface.html":{},"overview.html":{},"interfaces/swaggerInterface.html":{}}}],["conveyed",{"_index":1123,"title":{},"body":{"index.html":{}}}],["correct",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":1001,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatauserdto",{"_index":78,"title":{"classes/CreataUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["create",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ReturnedInvoiceService.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create(invoiceid",{"_index":928,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["create(message",{"_index":538,"title":{},"body":{"injectables/ErrorService.html":{}}}],["createat",{"_index":481,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"miscellaneous/variables.html":{}}}],["created.'})@useguards(rolesguard)@roles(accounttype.accountant)@post('create",{"_index":557,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["createdat",{"_index":682,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn",{"_index":522,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn({type",{"_index":507,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["createdevaccount",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdoc",{"_index":579,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createinvoice",{"_index":551,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{}}}],["createinvoice(createinvoicedtos",{"_index":554,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{}}}],["createinvoicedto",{"_index":401,"title":{"classes/CreateInvoiceDto.html":{}},"body":{"classes/CreateInvoiceDto.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"coverage.html":{}}}],["createinvoicedtos",{"_index":559,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{}}}],["createinvoicedtos.foreach",{"_index":664,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["createitem",{"_index":704,"title":{},"body":{"controllers/ItemController.html":{},"injectables/ItemService.html":{}}}],["createitem(createitemdto",{"_index":707,"title":{},"body":{"controllers/ItemController.html":{},"injectables/ItemService.html":{}}}],["createitemdto",{"_index":416,"title":{"classes/CreateItemDto.html":{}},"body":{"classes/CreateItemDto.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"classes/UpdateItemDto.html":{},"coverage.html":{}}}],["createitemdto.buypillprice",{"_index":793,"title":{},"body":{"injectables/ItemService.html":{}}}],["createitemdto.itemid",{"_index":797,"title":{},"body":{"injectables/ItemService.html":{}}}],["createitemdto.numberofitems",{"_index":791,"title":{},"body":{"injectables/ItemService.html":{}}}],["createitemdto.sellpillprice",{"_index":792,"title":{},"body":{"injectables/ItemService.html":{}}}],["createparamdecorator",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreturnedinvoicedto",{"_index":453,"title":{"classes/CreateReturnedInvoiceDto.html":{}},"body":{"classes/CreateReturnedInvoiceDto.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{}}}],["createrinvoice",{"_index":892,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["createrinvoice(crid",{"_index":893,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["createuser",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(createuserdto",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{}}}],["createuserdto.username",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["creation",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["crid",{"_index":897,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["crid.foreach",{"_index":944,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["crid.length",{"_index":938,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["ctx",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current_timestamp",{"_index":509,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":400,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["data",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":541,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["databasewhen",{"_index":785,"title":{},"body":{"injectables/ItemService.html":{}}}],["datainvoicereportinterface",{"_index":459,"title":{"interfaces/DataInvoiceReportInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["date",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateItemDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["dateitemreportinterface",{"_index":482,"title":{"interfaces/DateItemReportInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["db",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db.database",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.host",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.password",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.port",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.synchronize",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.type",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.username",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deal",{"_index":763,"title":{},"body":{"modules/ItemModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["decorator",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/ErrorEntitiy.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"classes/UpdateNumberOfItems.html":{},"entities/UserEntity.html":{}}}],["decorators/jwt.decorator",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/roles.decorator",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{}}}],["default",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"classes/UpdateNumberOfItems.html":{},"entities/UserEntity.html":{}}}],["delete",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"miscellaneous/variables.html":{}}}],["delete('delete/:id",{"_index":601,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["delete('delete/:username",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["deleted",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"miscellaneous/variables.html":{}}}],["deletedoc",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteinvoice",{"_index":552,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{}}}],["deleteinvoice(id",{"_index":560,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["deleteinvoice(invoiceid",{"_index":643,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["deleteitem",{"_index":705,"title":{},"body":{"controllers/ItemController.html":{},"injectables/ItemService.html":{}}}],["deleteitem(id",{"_index":710,"title":{},"body":{"controllers/ItemController.html":{}}}],["deleteitem(itemid",{"_index":773,"title":{},"body":{"injectables/ItemService.html":{}}}],["deleteuser",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["deleteuser(username",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["deleting",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"modules/ErrorModule.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"miscellaneous/functions.html":{},"properties.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["description:'the",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developer",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":1160,"title":{},"body":{"properties.html":{}}}],["display",{"_index":370,"title":{},"body":{"classes/CreataUserDto.html":{},"entities/UserEntity.html":{}}}],["displayname",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["doc",{"_index":492,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"interfaces/swaggerInterface.html":{}}}],["doc:build",{"_index":1146,"title":{},"body":{"index.html":{}}}],["docfor",{"_index":1116,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1143,"title":{},"body":{"index.html":{}}}],["document",{"_index":1145,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1002,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["double",{"_index":735,"title":{},"body":{"entities/ItemEntity.html":{}}}],["dto",{"_index":973,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["dtos/create",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["dtos/login.dto",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/update",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{}}}],["eager",{"_index":517,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["easy",{"_index":1157,"title":{},"body":{"properties.html":{}}}],["enough",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":503,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/error.entity",{"_index":532,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/ErrorService.html":{}}}],["entities/invoice.entity",{"_index":577,"title":{},"body":{"controllers/InvoiceController.html":{},"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{}}}],["entities/item.entity",{"_index":720,"title":{},"body":{"controllers/ItemController.html":{},"modules/ItemModule.html":{},"injectables/ItemService.html":{}}}],["entities/returned",{"_index":899,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["entities/user.entity",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["entity",{"_index":501,"title":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"injectables/JwtStrategy.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":366,"title":{},"body":{"classes/CreataUserDto.html":{},"entities/UserEntity.html":{}}}],["enumerations",{"_index":1075,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"entities/UserEntity.html":{}}}],["error",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/ItemService.html":{},"entities/UserEntity.html":{}}}],["error.code",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["error.id",{"_index":548,"title":{},"body":{"injectables/ErrorService.html":{}}}],["error.service",{"_index":531,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.user",{"_index":985,"title":{},"body":{"entities/UserEntity.html":{}}}],["error/error.module",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["errorentitiy",{"_index":502,"title":{"entities/ErrorEntitiy.html":{}},"body":{"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorentity",{"_index":547,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errormodule",{"_index":13,"title":{"modules/ErrorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules.html":{},"overview.html":{}}}],["errorrepository",{"_index":537,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errors",{"_index":524,"title":{},"body":{"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"entities/UserEntity.html":{}}}],["errorservice",{"_index":529,"title":{"injectables/ErrorService.html":{}},"body":{"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"coverage.html":{},"overview.html":{}}}],["example",{"_index":364,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"classes/LoginDto.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["executioncontext",{"_index":957,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":1095,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists",{"_index":772,"title":{},"body":{"injectables/ItemService.html":{}}}],["expiresin",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiry",{"_index":435,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["expirydate",{"_index":421,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["export",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["express",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":525,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/ReturnedInvoiceEntity.html":{},"guards/RolesGuard.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{}}}],["extract",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":518,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["features",{"_index":1109,"title":{},"body":{"index.html":{}}}],["fields",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["files",{"_index":1136,"title":{},"body":{"index.html":{}}}],["find",{"_index":649,"title":{},"body":{"injectables/InvoiceService.html":{},"miscellaneous/variables.html":{}}}],["finddoc",{"_index":580,"title":{},"body":{"controllers/InvoiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["findinvoice",{"_index":553,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{}}}],["findinvoice(id",{"_index":563,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["findinvoice(invoiceid",{"_index":647,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["forbidden",{"_index":499,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["founction",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":657,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["function",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1078,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":626,"title":{},"body":{"modules/InvoiceModule.html":{},"injectables/ItemService.html":{}}}],["get('find/:id",{"_index":598,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["get('invoices",{"_index":876,"title":{},"body":{"controllers/ReportController.html":{}}}],["get('items",{"_index":870,"title":{},"body":{"controllers/ReportController.html":{}}}],["get('retruned",{"_index":882,"title":{},"body":{"controllers/ReportController.html":{}}}],["getinvoicereport",{"_index":634,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["getinvoicereport(user",{"_index":650,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["getinvoicesreport",{"_index":849,"title":{},"body":{"controllers/ReportController.html":{}}}],["getinvoicesreport(user",{"_index":851,"title":{},"body":{"controllers/ReportController.html":{}}}],["getitemsreport",{"_index":767,"title":{},"body":{"injectables/ItemService.html":{},"controllers/ReportController.html":{}}}],["getitemsreport(user",{"_index":775,"title":{},"body":{"injectables/ItemService.html":{},"controllers/ReportController.html":{}}}],["getreturnedinvoicereport",{"_index":924,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["getreturnedinvoicereport(user",{"_index":933,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["getreturnedinvoicesreport",{"_index":850,"title":{},"body":{"controllers/ReportController.html":{}}}],["getreturnedinvoicesreport(user",{"_index":856,"title":{},"body":{"controllers/ReportController.html":{}}}],["getting",{"_index":239,"title":{"index.html":{}},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["getuser",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["git",{"_index":1130,"title":{},"body":{"index.html":{}}}],["go",{"_index":1137,"title":{},"body":{"index.html":{}}}],["greater",{"_index":930,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["guard",{"_index":817,"title":{"guards/RolesGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":949,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guards/jwt",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["guards/roles.guard",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["hashing",{"_index":1112,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"entities/UserEntity.html":{}}}],["hashpassword','salt",{"_index":700,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["hope",{"_index":1120,"title":{},"body":{"index.html":{}}}],["host",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["httpexception('password",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('there",{"_index":939,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["httpexception('username",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(`the",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["httpexception(`username",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://github.com/mohaned2023/supermarket",{"_index":1132,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["httpstatus.bad_request",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["i.itemid",{"_index":673,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["id",{"_index":408,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["if(!username",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{}}}],["in(itemsids",{"_index":669,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["incorrect",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateNumberOfItems.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["information.the",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{}}}],["injectables",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{},"overview.html":{}}}],["injected",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["injectrepository",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["injectrepository(errorentitiy",{"_index":544,"title":{},"body":{"injectables/ErrorService.html":{}}}],["injectrepository(invoiceentity",{"_index":660,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["injectrepository(itementity",{"_index":661,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["injectrepository(returnedinvoiceentity",{"_index":937,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["injectrepository(userentity",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["inof",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserting",{"_index":732,"title":{},"body":{"entities/ItemEntity.html":{}}}],["installset",{"_index":1135,"title":{},"body":{"index.html":{}}}],["interface",{"_index":458,"title":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["interfaces",{"_index":460,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"overview.html":{},"interfaces/swaggerInterface.html":{}}}],["internalservererrorexception",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["invalid",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["invoce",{"_index":476,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["invoice",{"_index":463,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["invoice.controller",{"_index":627,"title":{},"body":{"modules/InvoiceModule.html":{},"modules/ReturnedInvoiceModule.html":{}}}],["invoice.controller.ts",{"_index":891,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{},"coverage.html":{}}}],["invoice.controller.ts:53",{"_index":896,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["invoice.dto",{"_index":570,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["invoice.dto.ts",{"_index":403,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"coverage.html":{}}}],["invoice.dto.ts:12",{"_index":411,"title":{},"body":{"classes/CreateInvoiceDto.html":{}}}],["invoice.dto.ts:13",{"_index":456,"title":{},"body":{"classes/CreateReturnedInvoiceDto.html":{}}}],["invoice.dto.ts:21",{"_index":414,"title":{},"body":{"classes/CreateInvoiceDto.html":{}}}],["invoice.dto.ts:22",{"_index":457,"title":{},"body":{"classes/CreateReturnedInvoiceDto.html":{}}}],["invoice.entity",{"_index":900,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{}}}],["invoice.entity.ts",{"_index":908,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{},"coverage.html":{}}}],["invoice.entity.ts:10",{"_index":910,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["invoice.entity.ts:22",{"_index":911,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["invoice.entity.ts:29",{"_index":912,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["invoice.entity.ts:36",{"_index":909,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["invoice.entity.ts:39",{"_index":914,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["invoice.entity.ts:42",{"_index":915,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["invoice.items",{"_index":687,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["invoice.items.findindex",{"_index":945,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["invoice.items.length",{"_index":940,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["invoice.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["invoice.module.ts",{"_index":921,"title":{},"body":{"modules/ReturnedInvoiceModule.html":{}}}],["invoice.save",{"_index":691,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["invoice.service",{"_index":569,"title":{},"body":{"controllers/InvoiceController.html":{},"modules/InvoiceModule.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{}}}],["invoice.service.ts",{"_index":923,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{},"coverage.html":{}}}],["invoice.service.ts:24",{"_index":926,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["invoice.service.ts:32",{"_index":936,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["invoice.service.ts:45",{"_index":929,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["invoice.service.ts:87",{"_index":934,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["invoice.totalprice",{"_index":689,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["invoice.user",{"_index":680,"title":{},"body":{"injectables/InvoiceService.html":{},"entities/UserEntity.html":{}}}],["invoice/dtos/create",{"_index":455,"title":{},"body":{"classes/CreateReturnedInvoiceDto.html":{},"coverage.html":{}}}],["invoice/entities/returned",{"_index":907,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["invoice/invoice.module",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["invoice/returned",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{}}}],["invoice/swagger/controller.swagger.ts",{"_index":1044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invoicecontroller",{"_index":549,"title":{"controllers/InvoiceController.html":{}},"body":{"controllers/InvoiceController.html":{},"modules/InvoiceModule.html":{},"coverage.html":{}}}],["invoicedoc",{"_index":861,"title":{},"body":{"controllers/ReportController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invoiceentity",{"_index":576,"title":{"entities/InvoiceEntity.html":{}},"body":{"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["invoiceid",{"_index":645,"title":{},"body":{"injectables/InvoiceService.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["invoicemodule",{"_index":14,"title":{"modules/InvoiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InvoiceModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"modules.html":{},"overview.html":{}}}],["invoicereportinterface",{"_index":480,"title":{"interfaces/InvoiceReportInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["invoicerepository",{"_index":640,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["invoices",{"_index":617,"title":{},"body":{"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"controllers/ReportController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["invoiceservice",{"_index":568,"title":{"injectables/InvoiceService.html":{}},"body":{"controllers/InvoiceController.html":{},"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"controllers/ReportController.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{},"overview.html":{}}}],["isdate",{"_index":452,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["isnotempty",{"_index":388,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"classes/LoginDto.html":{},"classes/UpdateNumberOfItems.html":{}}}],["isnumber",{"_index":415,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"classes/UpdateNumberOfItems.html":{}}}],["isnumber()@isnotempty",{"_index":970,"title":{},"body":{"classes/UpdateNumberOfItems.html":{}}}],["isstring",{"_index":389,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{},"classes/LoginDto.html":{}}}],["isvalidupdatedto",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["item",{"_index":407,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["item.buyallitemsprice",{"_index":809,"title":{},"body":{"injectables/ItemService.html":{}}}],["item.buypillprice",{"_index":806,"title":{},"body":{"injectables/ItemService.html":{}}}],["item.controller",{"_index":764,"title":{},"body":{"modules/ItemModule.html":{}}}],["item.dto",{"_index":718,"title":{},"body":{"controllers/ItemController.html":{},"injectables/ItemService.html":{},"classes/UpdateItemDto.html":{}}}],["item.dto.ts",{"_index":418,"title":{},"body":{"classes/CreateItemDto.html":{},"classes/UpdateItemDto.html":{},"coverage.html":{}}}],["item.dto.ts:15",{"_index":440,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:26",{"_index":442,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:35",{"_index":450,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:44",{"_index":430,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:53",{"_index":445,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:64",{"_index":434,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:74",{"_index":447,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.dto.ts:84",{"_index":438,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["item.itemid",{"_index":946,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["item.name",{"_index":795,"title":{},"body":{"injectables/ItemService.html":{}}}],["item.numberofitems",{"_index":677,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["item.save",{"_index":794,"title":{},"body":{"injectables/ItemService.html":{}}}],["item.sellallitemsprice",{"_index":810,"title":{},"body":{"injectables/ItemService.html":{}}}],["item.sellpillprice",{"_index":808,"title":{},"body":{"injectables/ItemService.html":{}}}],["item.service",{"_index":719,"title":{},"body":{"controllers/ItemController.html":{},"modules/ItemModule.html":{}}}],["item.user",{"_index":796,"title":{},"body":{"injectables/ItemService.html":{},"entities/UserEntity.html":{}}}],["item/item.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["itemcontroller",{"_index":702,"title":{"controllers/ItemController.html":{}},"body":{"controllers/ItemController.html":{},"modules/ItemModule.html":{},"coverage.html":{}}}],["itemdoc",{"_index":862,"title":{},"body":{"controllers/ReportController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["itementity",{"_index":628,"title":{"entities/ItemEntity.html":{}},"body":{"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"modules/ItemModule.html":{},"injectables/ItemService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["itemerror",{"_index":941,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["itemid",{"_index":404,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"entities/ReturnedInvoiceEntity.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["itemiderror",{"_index":663,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["iteminterface",{"_index":478,"title":{"interfaces/ItemInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["itemmodule",{"_index":15,"title":{"modules/ItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"modules.html":{},"overview.html":{}}}],["itemreportinterface",{"_index":490,"title":{"interfaces/ItemReportInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["itemrepository",{"_index":637,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["items",{"_index":412,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["items.dto.ts",{"_index":969,"title":{},"body":{"classes/UpdateNumberOfItems.html":{},"coverage.html":{}}}],["items.dto.ts:7",{"_index":971,"title":{},"body":{"classes/UpdateNumberOfItems.html":{}}}],["itemservice",{"_index":638,"title":{"injectables/ItemService.html":{}},"body":{"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"modules/ItemModule.html":{},"injectables/ItemService.html":{},"controllers/ReportController.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{},"overview.html":{}}}],["itemsids",{"_index":662,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["itemsids.filter",{"_index":671,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["itemsids.push(cid.itemid",{"_index":666,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["itemsinfo",{"_index":667,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["itemsinfo.findindex",{"_index":672,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["itemsinfo[i",{"_index":676,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["itme",{"_index":439,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{},"miscellaneous/variables.html":{}}}],["itmeid",{"_index":717,"title":{},"body":{"controllers/ItemController.html":{}}}],["jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["jwt.expiresin",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt.ignoreexpiration",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt.secretorkey",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":102,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtconfig",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconfig",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtpayloadinterface",{"_index":474,"title":{"interfaces/JwtPayloadInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["jwtservice",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":176,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["keys",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["know",{"_index":1099,"title":{},"body":{"index.html":{}}}],["lass",{"_index":642,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["learning",{"_index":1159,"title":{},"body":{"properties.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["license",{"_index":1161,"title":{},"body":{"properties.html":{}}}],["list",{"_index":607,"title":{},"body":{"entities/InvoiceEntity.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":1164,"title":{},"body":{"interfaces/swaggerInterface.html":{}}}],["log",{"_index":540,"title":{},"body":{"injectables/ErrorService.html":{}}}],["loger",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["logger('authservice",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger('errorservice",{"_index":542,"title":{},"body":{"injectables/ErrorService.html":{}}}],["logger('invoiceservice",{"_index":654,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["logger('itmeservice",{"_index":788,"title":{},"body":{"injectables/ItemService.html":{}}}],["logger('retrunedinvoiceservice",{"_index":935,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["login",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["login(logindto",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindoc",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logindto",{"_index":74,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["make",{"_index":975,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["manytoone",{"_index":523,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["manytoone(undefined",{"_index":515,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["matches",{"_index":390,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["matching",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":371,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{}}}],["maxlength",{"_index":391,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{}}}],["maxlength(128",{"_index":398,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["maxlength(15",{"_index":395,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["maxlength(50",{"_index":397,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{}}}],["message",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{}}}],["mind",{"_index":1093,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":373,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["minlength",{"_index":392,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["minlength(3",{"_index":396,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["minlength(8",{"_index":399,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["miscellaneous",{"_index":1074,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modest",{"_index":1124,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"modules.html":{},"overview.html":{}}}],["mohaned",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/LoginDto.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mohaned'})@column({unique",{"_index":995,"title":{},"body":{"entities/UserEntity.html":{}}}],["mohaned123",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["mohaned2023",{"_index":377,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/LoginDto.html":{}}}],["more",{"_index":1114,"title":{},"body":{"index.html":{}}}],["mr.x",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mr.x)'})@column",{"_index":982,"title":{},"body":{"entities/UserEntity.html":{}}}],["name",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"miscellaneous/functions.html":{},"interfaces/swaggerInterface.html":{}}}],["nestjs",{"_index":1092,"title":{},"body":{"index.html":{},"properties.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"modules/ItemModule.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":960,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"interfaces/swaggerInterface.html":{}}}],["nestjs/typeorm",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"modules/ItemModule.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"dependencies.html":{}}}],["new",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateItemDto.html":{},"injectables/ErrorService.html":{},"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.accounttype",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.displayname",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.hashpassword",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.salt",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.save",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.username",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfound",{"_index":500,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["notfoundexception(`item",{"_index":800,"title":{},"body":{"injectables/ItemService.html":{}}}],["notfoundexception(`the",{"_index":674,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["notfoundexception(`user",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfounditemid",{"_index":670,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["npm",{"_index":1115,"title":{},"body":{"index.html":{}}}],["number",{"_index":406,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateNumberOfItems.html":{},"entities/UserEntity.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["number(this.saltdata.range",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["numberofitems",{"_index":405,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"entities/ReturnedInvoiceEntity.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateNumberOfItems.html":{},"interfaces/swaggerInterface.html":{}}}],["obj",{"_index":1086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.assign(item",{"_index":811,"title":{},"body":{"injectables/ItemService.html":{}}}],["object.assign(userdata",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(updateitemdto).every",{"_index":802,"title":{},"body":{"injectables/ItemService.html":{}}}],["object.keys(updateuserdto).every",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["ok",{"_index":646,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["omit",{"_index":1084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["omitobjectkeys",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["omitobjectkeys(invoice.user",{"_index":681,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["omitobjectkeys(obj",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["omits",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["omituser",{"_index":699,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["one",{"_index":426,"title":{},"body":{"classes/CreateItemDto.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"miscellaneous/variables.html":{}}}],["onetomany",{"_index":997,"title":{},"body":{"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":984,"title":{},"body":{"entities/UserEntity.html":{}}}],["onmoduleinit",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation",{"_index":494,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["optionals",{"_index":976,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["overview",{"_index":1152,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1048,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["param('id",{"_index":599,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["param('username",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["parameters",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["parsearraypipe",{"_index":566,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["parsearraypipe({items",{"_index":592,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["parseintpipe",{"_index":567,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["part",{"_index":1102,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":968,"title":{},"body":{"classes/UpdateItemDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(creatauserdto",{"_index":974,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createitemdto",{"_index":967,"title":{},"body":{"classes/UpdateItemDto.html":{}}}],["passport",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":823,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/LoginDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["passwordhash",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["patch",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["patch('update/:id",{"_index":726,"title":{},"body":{"controllers/ItemController.html":{}}}],["patch('update/:username",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload",{"_index":473,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["permission",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["piece",{"_index":427,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["pieces",{"_index":443,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["pills",{"_index":931,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["post('add",{"_index":723,"title":{},"body":{"controllers/ItemController.html":{}}}],["post('create",{"_index":590,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["post('login",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["practical",{"_index":1094,"title":{},"body":{"index.html":{}}}],["precision",{"_index":736,"title":{},"body":{"entities/ItemEntity.html":{}}}],["prefix",{"_index":49,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["price",{"_index":425,"title":{},"body":{"classes/CreateItemDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"entities/ReturnedInvoiceEntity.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["primarygeneratedcolumn",{"_index":511,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{}}}],["production",{"_index":446,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["productiondate",{"_index":422,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["program",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["programming",{"_index":1125,"title":{},"body":{"index.html":{}}}],["project",{"_index":1089,"title":{},"body":{"index.html":{}}}],["project:i",{"_index":1119,"title":{},"body":{"index.html":{}}}],["promise",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["properties",{"_index":199,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"classes/LoginDto.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateNumberOfItems.html":{},"entities/UserEntity.html":{},"properties.html":{},"interfaces/swaggerInterface.html":{}}}],["protection",{"_index":1111,"title":{},"body":{"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["purchase",{"_index":424,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["purpose",{"_index":1158,"title":{},"body":{"properties.html":{}}}],["purposes",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["query",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["query('invoiceid",{"_index":905,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["read",{"_index":1118,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":656,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["readfilesync('./sql/invoices",{"_index":694,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["readonly",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["reflect",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":954,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reflector.createdecorator",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdoc",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["relations",{"_index":679,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["report",{"_index":464,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"controllers/ReportController.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["report.controller",{"_index":888,"title":{},"body":{"modules/ReportModule.html":{}}}],["report.sql",{"_index":695,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["report/report.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["report[0",{"_index":815,"title":{},"body":{"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["reportby",{"_index":777,"title":{},"body":{"injectables/ItemService.html":{}}}],["reportcontroller",{"_index":847,"title":{"controllers/ReportController.html":{}},"body":{"controllers/ReportController.html":{},"modules/ReportModule.html":{},"coverage.html":{}}}],["reportmodule",{"_index":16,"title":{"modules/ReportModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{},"modules.html":{},"overview.html":{}}}],["reportobject",{"_index":697,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["reportobject[0",{"_index":701,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["reports",{"_index":887,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["repository",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["req",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":822,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":964,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requier",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["require",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":367,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"classes/LoginDto.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}],["responses",{"_index":495,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["result",{"_index":683,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["result.affected",{"_index":685,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{}}}],["results",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["retruned",{"_index":903,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["retruned.'})@useguards(rolesguard)@roles(accounttype.accountant)@post('create",{"_index":895,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["retrunedinvoicecontroller",{"_index":890,"title":{"controllers/RetrunedInvoiceController.html":{}},"body":{"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"coverage.html":{}}}],["retuned",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returend",{"_index":932,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["return",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateReturnedInvoiceDto.html":{},"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["returned_invoices",{"_index":916,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["returnedinvoice",{"_index":942,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["returnedinvoicedoc",{"_index":863,"title":{},"body":{"controllers/ReportController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["returnedinvoiceentity",{"_index":898,"title":{"entities/ReturnedInvoiceEntity.html":{}},"body":{"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["returnedinvoicemodule",{"_index":17,"title":{"modules/ReturnedInvoiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"modules.html":{},"overview.html":{}}}],["returnedinvoices",{"_index":978,"title":{},"body":{"entities/UserEntity.html":{}}}],["returnedinvoiceservice",{"_index":860,"title":{"injectables/ReturnedInvoiceService.html":{}},"body":{"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"coverage.html":{},"overview.html":{}}}],["returns",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rinvoice",{"_index":991,"title":{},"body":{"entities/UserEntity.html":{}}}],["rinvoice.user",{"_index":992,"title":{},"body":{"entities/UserEntity.html":{}}}],["rinvoicerepository",{"_index":927,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["role",{"_index":363,"title":{},"body":{"classes/CreataUserDto.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["roles(accounttype.accountant",{"_index":589,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["roles(accounttype.admin",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{}}}],["roles.includes(user.accounttype",{"_index":965,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":105,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["rolesguard)@roles(accounttype.admin)@delete('delete/:username",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesguard)@roles(accounttype.admin)@usepipes(validationpipe)@patch('update/:username",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["rolesguard)@roles(accounttype.admin)@usepipes(validationpipe)@post('register",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["run",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["runnig",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["running",{"_index":1139,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"entities/UserEntity.html":{}}}],["saltdata",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":786,"title":{},"body":{"injectables/ItemService.html":{}}}],["sellallitemsprice",{"_index":730,"title":{},"body":{"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["selling",{"_index":448,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{}}}],["sellpillprice",{"_index":423,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{}}}],["server",{"_index":1040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1138,"title":{},"body":{"index.html":{}}}],["setting",{"_index":1128,"title":{},"body":{"index.html":{}}}],["sherhan",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["signoptions",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":1106,"title":{},"body":{"index.html":{},"properties.html":{}}}],["simulate",{"_index":1107,"title":{},"body":{"index.html":{}}}],["small",{"_index":1101,"title":{},"body":{"index.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{}}}],["sql",{"_index":693,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["sql/retruned",{"_index":947,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["src/.../account",{"_index":1076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../controller.swagger.ts",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.config.ts",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.decorator.ts",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.strategy.ts",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1079,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../omit.util.ts",{"_index":1080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:69",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:83",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:131",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:147",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:27",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:97",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/jwt.decorator",{"_index":571,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["src/auth/decorators/jwt.decorator.ts",{"_index":1008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/roles.decorator",{"_index":574,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/create",{"_index":360,"title":{},"body":{"classes/CreataUserDto.html":{},"coverage.html":{}}}],["src/auth/dtos/login.dto.ts",{"_index":843,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dtos/login.dto.ts:12",{"_index":846,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/login.dto.ts:21",{"_index":845,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/update",{"_index":972,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/auth/entities/user.entity",{"_index":472,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["src/auth/entities/user.entity.ts",{"_index":977,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/auth/entities/user.entity.ts:12",{"_index":988,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:19",{"_index":996,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:26",{"_index":983,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:29",{"_index":994,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:32",{"_index":987,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:40",{"_index":980,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:47",{"_index":981,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:50",{"_index":990,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:53",{"_index":989,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:56",{"_index":993,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/entities/user.entity.ts:59",{"_index":986,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/auth/enums/account",{"_index":575,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/jwt",{"_index":572,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard",{"_index":573,"title":{},"body":{"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":950,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:12",{"_index":958,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:9",{"_index":955,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":820,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/strategies/jwt.strategy.ts:17",{"_index":825,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:33",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/swagger/controller.swagger.ts",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/jwt.config",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/config/jwt.config.ts",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/error/entities/error.entity",{"_index":999,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/error/entities/error.entity.ts",{"_index":504,"title":{},"body":{"entities/ErrorEntitiy.html":{},"coverage.html":{}}}],["src/error/entities/error.entity.ts:10",{"_index":514,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["src/error/entities/error.entity.ts:13",{"_index":519,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["src/error/entities/error.entity.ts:16",{"_index":520,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["src/error/entities/error.entity.ts:19",{"_index":510,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["src/error/entities/error.entity.ts:7",{"_index":512,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["src/error/error.module",{"_index":631,"title":{},"body":{"modules/InvoiceModule.html":{}}}],["src/error/error.module.ts",{"_index":530,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/error/error.service",{"_index":659,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/error/error.service.ts",{"_index":534,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/error/error.service.ts:13",{"_index":543,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/error/error.service.ts:22",{"_index":539,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/error/error.service.ts:8",{"_index":536,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/interfaces/interfaces",{"_index":616,"title":{},"body":{"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["src/interfaces/interfaces.ts",{"_index":461,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["src/invoice/dtos/create",{"_index":402,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"coverage.html":{}}}],["src/invoice/entities/invoice.entity",{"_index":998,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/invoice/entities/invoice.entity.ts",{"_index":603,"title":{},"body":{"entities/InvoiceEntity.html":{},"coverage.html":{}}}],["src/invoice/entities/invoice.entity.ts:17",{"_index":606,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["src/invoice/entities/invoice.entity.ts:31",{"_index":609,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["src/invoice/entities/invoice.entity.ts:38",{"_index":612,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["src/invoice/entities/invoice.entity.ts:41",{"_index":614,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["src/invoice/entities/invoice.entity.ts:44",{"_index":615,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["src/invoice/entities/invoice.entity.ts:51",{"_index":605,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["src/invoice/invoice.controller.ts",{"_index":550,"title":{},"body":{"controllers/InvoiceController.html":{},"coverage.html":{}}}],["src/invoice/invoice.controller.ts:54",{"_index":558,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["src/invoice/invoice.controller.ts:66",{"_index":565,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["src/invoice/invoice.controller.ts:78",{"_index":562,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["src/invoice/invoice.module",{"_index":889,"title":{},"body":{"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{}}}],["src/invoice/invoice.module.ts",{"_index":625,"title":{},"body":{"modules/InvoiceModule.html":{}}}],["src/invoice/invoice.service",{"_index":859,"title":{},"body":{"controllers/ReportController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["src/invoice/invoice.service.ts",{"_index":633,"title":{},"body":{"injectables/InvoiceService.html":{},"coverage.html":{}}}],["src/invoice/invoice.service.ts:105",{"_index":644,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/invoice.service.ts:121",{"_index":653,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/invoice.service.ts:136",{"_index":651,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/invoice.service.ts:26",{"_index":639,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/invoice.service.ts:34",{"_index":655,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/invoice.service.ts:45",{"_index":641,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/invoice.service.ts:89",{"_index":648,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/invoice/swagger/controller.swagger.ts",{"_index":1035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/item/dtos/create",{"_index":417,"title":{},"body":{"classes/CreateItemDto.html":{},"coverage.html":{}}}],["src/item/dtos/update",{"_index":966,"title":{},"body":{"classes/UpdateItemDto.html":{},"classes/UpdateNumberOfItems.html":{},"coverage.html":{}}}],["src/item/entities/item.entity",{"_index":629,"title":{},"body":{"modules/InvoiceModule.html":{},"injectables/InvoiceService.html":{},"entities/UserEntity.html":{}}}],["src/item/entities/item.entity.ts",{"_index":728,"title":{},"body":{"entities/ItemEntity.html":{},"coverage.html":{}}}],["src/item/entities/item.entity.ts:16",{"_index":746,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:23",{"_index":748,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:30",{"_index":754,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:37",{"_index":739,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:44",{"_index":750,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:47",{"_index":752,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:50",{"_index":737,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:57",{"_index":741,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:64",{"_index":751,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:71",{"_index":743,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:78",{"_index":733,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:81",{"_index":756,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:84",{"_index":757,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/entities/item.entity.ts:9",{"_index":744,"title":{},"body":{"entities/ItemEntity.html":{}}}],["src/item/item.controller.ts",{"_index":703,"title":{},"body":{"controllers/ItemController.html":{},"coverage.html":{}}}],["src/item/item.controller.ts:51",{"_index":709,"title":{},"body":{"controllers/ItemController.html":{}}}],["src/item/item.controller.ts:61",{"_index":712,"title":{},"body":{"controllers/ItemController.html":{}}}],["src/item/item.controller.ts:73",{"_index":716,"title":{},"body":{"controllers/ItemController.html":{}}}],["src/item/item.module",{"_index":630,"title":{},"body":{"modules/InvoiceModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{}}}],["src/item/item.module.ts",{"_index":762,"title":{},"body":{"modules/ItemModule.html":{}}}],["src/item/item.service",{"_index":658,"title":{},"body":{"injectables/InvoiceService.html":{},"controllers/ReportController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["src/item/item.service.ts",{"_index":766,"title":{},"body":{"injectables/ItemService.html":{},"coverage.html":{}}}],["src/item/item.service.ts:120",{"_index":784,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/item/item.service.ts:142",{"_index":776,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/item/item.service.ts:21",{"_index":770,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/item/item.service.ts:33",{"_index":771,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/item/item.service.ts:59",{"_index":774,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/item/item.service.ts:80",{"_index":781,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/item/swagger/controller.swagger.ts",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/items",{"_index":813,"title":{},"body":{"injectables/ItemService.html":{}}}],["src/main.ts",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/report/report.controller.ts",{"_index":848,"title":{},"body":{"controllers/ReportController.html":{},"coverage.html":{}}}],["src/report/report.controller.ts:38",{"_index":855,"title":{},"body":{"controllers/ReportController.html":{}}}],["src/report/report.controller.ts:47",{"_index":853,"title":{},"body":{"controllers/ReportController.html":{}}}],["src/report/report.controller.ts:56",{"_index":858,"title":{},"body":{"controllers/ReportController.html":{}}}],["src/report/report.module.ts",{"_index":886,"title":{},"body":{"modules/ReportModule.html":{}}}],["src/report/swagger/controller.swagger.ts",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/returned",{"_index":454,"title":{},"body":{"classes/CreateReturnedInvoiceDto.html":{},"controllers/ReportController.html":{},"modules/ReportModule.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/omit.util",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["src/utils/omit.util.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1104,"title":{},"body":{"index.html":{}}}],["start:prodapp",{"_index":1142,"title":{},"body":{"index.html":{}}}],["started",{"_index":1088,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategies/jwt.strategy",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateItemDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"classes/LoginDto.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{}}}],["string(admindata.username).tolowercase",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["strong",{"_index":1103,"title":{},"body":{"index.html":{}}}],["sub",{"_index":783,"title":{},"body":{"injectables/ItemService.html":{}}}],["success",{"_index":496,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary:'login",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["supermarket",{"_index":1108,"title":{},"body":{"index.html":{}}}],["support",{"_index":1149,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1150,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":491,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"interfaces/swaggerInterface.html":{}}}],["swagger/controller.swagger",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["swaggerinterface",{"_index":493,"title":{"interfaces/swaggerInterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["this.authservice.createuser(createuserdto",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.deleteuser(username",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.updateuser(username",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.createdevaccount",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.errorrepository.create",{"_index":545,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorrepository.save(error",{"_index":546,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.invoicerepository.delete",{"_index":684,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this.invoicerepository.findone",{"_index":678,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this.invoicerepository.findone({where",{"_index":686,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this.invoicerepository.query(sql",{"_index":698,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this.invoiceservice.createinvoice",{"_index":593,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["this.invoiceservice.deleteinvoice",{"_index":602,"title":{},"body":{"controllers/InvoiceController.html":{}}}],["this.invoiceservice.findinvoice",{"_index":600,"title":{},"body":{"controllers/InvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["this.invoiceservice.getinvoicereport",{"_index":877,"title":{},"body":{"controllers/ReportController.html":{}}}],["this.itemrepository.create",{"_index":790,"title":{},"body":{"injectables/ItemService.html":{}}}],["this.itemrepository.delete",{"_index":798,"title":{},"body":{"injectables/ItemService.html":{}}}],["this.itemrepository.find({where",{"_index":668,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this.itemrepository.findone",{"_index":799,"title":{},"body":{"injectables/ItemService.html":{}}}],["this.itemrepository.query(sql",{"_index":814,"title":{},"body":{"injectables/ItemService.html":{}}}],["this.itemrepository.save(item",{"_index":812,"title":{},"body":{"injectables/ItemService.html":{}}}],["this.itemservice.createitem(createitemdto",{"_index":724,"title":{},"body":{"controllers/ItemController.html":{}}}],["this.itemservice.deleteitem(id",{"_index":725,"title":{},"body":{"controllers/ItemController.html":{}}}],["this.itemservice.getitemsreport",{"_index":871,"title":{},"body":{"controllers/ReportController.html":{}}}],["this.itemservice.updateitem(itmeid",{"_index":727,"title":{},"body":{"controllers/ItemController.html":{}}}],["this.jwtservice.sign",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`create",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`the",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["this.reflector.get(roles",{"_index":961,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.returnedinvoiceservice.create",{"_index":906,"title":{},"body":{"controllers/RetrunedInvoiceController.html":{}}}],["this.returnedinvoiceservice.getreturnedinvoicereport",{"_index":883,"title":{},"body":{"controllers/ReportController.html":{}}}],["this.rinvoicerepository.create",{"_index":943,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["this.rinvoicerepository.query",{"_index":948,"title":{},"body":{"injectables/ReturnedInvoiceService.html":{}}}],["this.userrepository.delete",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.findone",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.userrepository.findone({where",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.save",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.save(userdata",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":1117,"title":{},"body":{"index.html":{}}}],["through",{"_index":1127,"title":{},"body":{"index.html":{}}}],["throw",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["time",{"_index":731,"title":{},"body":{"entities/ItemEntity.html":{}}}],["timestamp",{"_index":508,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["token",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":1110,"title":{},"body":{"index.html":{}}}],["total",{"_index":610,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["totalbuyprice",{"_index":487,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["totalnumberofallinvoices",{"_index":466,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["totalnumberofallitems",{"_index":467,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["totalnumberofallpills",{"_index":468,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["totalnumberofitem",{"_index":483,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["totalprice",{"_index":479,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"entities/ReturnedInvoiceEntity.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{}}}],["totalpriceofallinvoices",{"_index":469,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["totalsellprice",{"_index":486,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":451,"title":{},"body":{"classes/CreateItemDto.html":{},"dependencies.html":{}}}],["true",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"entities/ItemEntity.html":{},"classes/LoginDto.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{}}}],["true})@isdate()@isnotempty()@type(undefined",{"_index":437,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["true})@isnotempty",{"_index":368,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["true})@isnotempty()@isnumber",{"_index":410,"title":{},"body":{"classes/CreateInvoiceDto.html":{},"classes/CreateReturnedInvoiceDto.html":{}}}],["true})@isnumber()@isnotempty",{"_index":429,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["true})@isstring()@isnotempty",{"_index":844,"title":{},"body":{"classes/LoginDto.html":{}}}],["true})@isstring()@isnotempty()@maxlength(50",{"_index":433,"title":{},"body":{"classes/CreateItemDto.html":{}}}],["true})@maxlength(128)@minlength(8)@isstring()@isnotempty()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":380,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["true})@maxlength(15)@minlength(3)@isnotempty()@isstring",{"_index":386,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["true})@maxlength(50)@minlength(3)@isnotempty()@isstring",{"_index":375,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["try",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemService.html":{}}}],["type",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateNumberOfItems.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/UserEntity.html":{}}}],["type.enum.ts",{"_index":1077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"entities/InvoiceEntity.html":{},"injectables/InvoiceService.html":{},"entities/ItemEntity.html":{},"injectables/ItemService.html":{},"injectables/JwtStrategy.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReturnedInvoiceModule.html":{}}}],["typeormmodule.forfeature([errorentitiy",{"_index":533,"title":{},"body":{"modules/ErrorModule.html":{}}}],["typeormmodule.forfeature([invoiceentity",{"_index":632,"title":{},"body":{"modules/InvoiceModule.html":{}}}],["typeormmodule.forfeature([itementity",{"_index":765,"title":{},"body":{"modules/ItemModule.html":{}}}],["typeormmodule.forfeature([returnedinvoiceentity",{"_index":922,"title":{},"body":{"modules/ReturnedInvoiceModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["udate",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorized",{"_index":498,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":436,"title":{},"body":{"classes/CreateItemDto.html":{},"controllers/InvoiceController.html":{},"injectables/InvoiceService.html":{},"controllers/RetrunedInvoiceController.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["undefined})@column",{"_index":742,"title":{},"body":{"entities/ItemEntity.html":{}}}],["undefined})@column('json",{"_index":608,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["undefined})@createdatecolumn({type",{"_index":604,"title":{},"body":{"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{},"entities/UserEntity.html":{}}}],["unlicensed",{"_index":1162,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1129,"title":{},"body":{"index.html":{}}}],["update",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":692,"title":{},"body":{"injectables/InvoiceService.html":{},"miscellaneous/variables.html":{}}}],["updatedoc",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateinvoice",{"_index":635,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["updateinvoice(invoiceid",{"_index":652,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["updateinvoice.items",{"_index":688,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["updateinvoice.totalprice",{"_index":690,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["updateinvoiceiterface",{"_index":477,"title":{"interfaces/UpdateInvoiceIterface.html":{}},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{}}}],["updateitem",{"_index":706,"title":{},"body":{"controllers/ItemController.html":{},"injectables/ItemService.html":{}}}],["updateitem(itemid",{"_index":780,"title":{},"body":{"injectables/ItemService.html":{}}}],["updateitem(itmeid",{"_index":713,"title":{},"body":{"controllers/ItemController.html":{}}}],["updateitemdto",{"_index":714,"title":{"classes/UpdateItemDto.html":{}},"body":{"controllers/ItemController.html":{},"injectables/ItemService.html":{},"classes/UpdateItemDto.html":{},"coverage.html":{}}}],["updateitemdto.buypillprice",{"_index":805,"title":{},"body":{"injectables/ItemService.html":{}}}],["updateitemdto.numberofitems",{"_index":804,"title":{},"body":{"injectables/ItemService.html":{}}}],["updateitemdto.sellpillprice",{"_index":807,"title":{},"body":{"injectables/ItemService.html":{}}}],["updateitmedtokeys",{"_index":801,"title":{},"body":{"injectables/ItemService.html":{}}}],["updateitmedtokeys.includes(key",{"_index":803,"title":{},"body":{"injectables/ItemService.html":{}}}],["updatenumberofitems",{"_index":768,"title":{"classes/UpdateNumberOfItems.html":{}},"body":{"injectables/ItemService.html":{},"classes/UpdateNumberOfItems.html":{},"coverage.html":{}}}],["updatenumberofitems(itemid",{"_index":782,"title":{},"body":{"injectables/ItemService.html":{}}}],["updateuser",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["updateuser(_username",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser(username",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateuserdto",{"_index":84,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdtokeys",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdtokeys.includes(key",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["updating",{"_index":475,"title":{},"body":{"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"interfaces/UpdateInvoiceIterface.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"modules/ErrorModule.html":{},"injectables/ErrorService.html":{},"modules/InvoiceModule.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"interfaces/ItemInterface.html":{},"modules/ItemModule.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/functions.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{}}}],["useguards(jwtauthguard",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InvoiceController.html":{},"controllers/ItemController.html":{}}}],["usepipes",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["usepipes(validationpipe",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["user",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"guards/RolesGuard.html":{},"interfaces/UpdateInvoiceIterface.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["user.accounttype",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["user.createdat",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.displayname",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts",{"_index":361,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:17",{"_index":387,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["user.dto.ts:30",{"_index":376,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["user.dto.ts:47",{"_index":384,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["user.dto.ts:56",{"_index":369,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["user.errors",{"_index":516,"title":{},"body":{"entities/ErrorEntitiy.html":{}}}],["user.hashpassword",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.invoices",{"_index":613,"title":{},"body":{"entities/InvoiceEntity.html":{}}}],["user.items",{"_index":755,"title":{},"body":{"entities/ItemEntity.html":{}}}],["user.returnedinvoices",{"_index":913,"title":{},"body":{"entities/ReturnedInvoiceEntity.html":{}}}],["user.salt",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["user:userentity",{"_index":789,"title":{},"body":{"injectables/ItemService.html":{}}}],["userdata",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.hashpassword",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.salt",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity",{"_index":60,"title":{"entities/UserEntity.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"entities/ErrorEntitiy.html":{},"injectables/ErrorService.html":{},"controllers/InvoiceController.html":{},"entities/InvoiceEntity.html":{},"interfaces/InvoiceReportInterface.html":{},"injectables/InvoiceService.html":{},"controllers/ItemController.html":{},"entities/ItemEntity.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"injectables/ItemService.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"controllers/ReportController.html":{},"controllers/RetrunedInvoiceController.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"coverage.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":506,"title":{},"body":{"entities/ErrorEntitiy.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["username",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreataUserDto.html":{},"interfaces/DataInvoiceReportInterface.html":{},"interfaces/DateItemReportInterface.html":{},"interfaces/InvoiceReportInterface.html":{},"interfaces/ItemInterface.html":{},"interfaces/ItemReportInterface.html":{},"interfaces/JwtPayloadInterface.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"interfaces/UpdateInvoiceIterface.html":{},"entities/UserEntity.html":{},"interfaces/swaggerInterface.html":{},"miscellaneous/variables.html":{}}}],["username.tolowercase",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrepository",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["users",{"_index":1000,"title":{},"body":{"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":778,"title":{},"body":{"injectables/ItemService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["utf",{"_index":696,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["valid",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":824,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":826,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation.for",{"_index":1113,"title":{},"body":{"index.html":{}}}],["validationpipe",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemController.html":{}}}],["validator",{"_index":393,"title":{},"body":{"classes/CreataUserDto.html":{},"classes/CreateInvoiceDto.html":{},"classes/CreateItemDto.html":{},"classes/CreateReturnedInvoiceDto.html":{},"classes/LoginDto.html":{},"classes/UpdateNumberOfItems.html":{},"dependencies.html":{}}}],["value",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/InvoiceService.html":{},"injectables/ItemService.html":{},"entities/ReturnedInvoiceEntity.html":{},"injectables/ReturnedInvoiceService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.itemid",{"_index":675,"title":{},"body":{"injectables/InvoiceService.html":{},"injectables/ReturnedInvoiceService.html":{}}}],["variable",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1165,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1155,"title":{},"body":{"properties.html":{}}}],["very",{"_index":1100,"title":{},"body":{"index.html":{}}}],["way",{"_index":1122,"title":{},"body":{"index.html":{}}}],["weak",{"_index":383,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["well",{"_index":1105,"title":{},"body":{"index.html":{}}}],["work",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["work,or",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":1098,"title":{},"body":{"index.html":{}}}],["x",{"_index":432,"title":{},"body":{"classes/CreateItemDto.html":{},"entities/InvoiceEntity.html":{},"entities/ItemEntity.html":{},"entities/ReturnedInvoiceEntity.html":{}}}],["yor",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":382,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["z])(?=.*[a",{"_index":381,"title":{},"body":{"classes/CreataUserDto.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceModule.html":{},"modules/ItemModule.html":{},"modules/ReportModule.html":{},"modules/ReturnedInvoiceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nAppModule -->\n\nErrorModule->AppModule\n\n\n\n\n\nInvoiceModule\n\nInvoiceModule\n\nAppModule -->\n\nInvoiceModule->AppModule\n\n\n\n\n\nItemModule\n\nItemModule\n\nAppModule -->\n\nItemModule->AppModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nAppModule -->\n\nReportModule->AppModule\n\n\n\n\n\nReturnedInvoiceModule\n\nReturnedInvoiceModule\n\nAppModule -->\n\nReturnedInvoiceModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ErrorModule\n                        \n                        \n                            InvoiceModule\n                        \n                        \n                            ItemModule\n                        \n                        \n                            ReportModule\n                        \n                        \n                            ReturnedInvoiceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeormConfig } from './config/typeorm.config';\nimport { ItemModule } from './item/item.module';\nimport { InvoiceModule } from './invoice/invoice.module';\nimport { ReturnedInvoiceModule } from './returned-invoice/returned-invoice.module';\nimport { ErrorModule } from './error/error.module';\nimport { ReportModule } from './report/report.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(typeormConfig),\n    AuthModule,\n    ItemModule,\n    InvoiceModule,\n    ReturnedInvoiceModule,\n    ErrorModule,\n    ReportModule,\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(username: string, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(deleteDoc.operation)@ApiBearerAuth()@ApiOkResponse(undefined.success)@ApiBadRequestResponse(undefined.badRequest)@ApiNotFoundResponse(undefined.notFound)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiForbiddenResponse(undefined.forbidden)@UseGuards(JwtAuthGuard, RolesGuard)@Roles(accountType.ADMIN)@Delete('delete/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(loginDoc.operation)@ApiCreatedResponse(undefined.success)@ApiNotFoundResponse(undefined.notFound)@ApiBadRequestResponse(undefined.badRequest)@Post('login')@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createUserDto: CreataUserDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(registerDoc.operation)@ApiBearerAuth()@ApiOkResponse(undefined.success)@ApiBadRequestResponse(undefined.badRequest)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiForbiddenResponse(undefined.forbidden)@UseGuards(JwtAuthGuard, RolesGuard)@Roles(accountType.ADMIN)@UsePipes(ValidationPipe)@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreataUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(username: string, updateUserDto: UpdateUserDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(updateDoc.operation)@ApiBearerAuth()@ApiOkResponse(undefined.success)@ApiBadRequestResponse(undefined.badRequest)@ApiNotFoundResponse(undefined.notFound)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiForbiddenResponse(undefined.forbidden)@UseGuards(JwtAuthGuard, RolesGuard)@Roles(accountType.ADMIN)@UsePipes(ValidationPipe)@Patch('update/:username')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Param, Patch, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { CreataUserDto } from './dtos/create-user.dto';\nimport { AuthService } from './auth.service';\nimport { UserEntity } from './entities/user.entity';\nimport { LoginDto } from './dtos/login.dto';\nimport { JwtAuthGuard } from './guards/jwt-auht.guard';\nimport { RolesGuard } from './guards/roles.guard';\nimport { Roles } from './decorators/roles.decorator';\nimport { accountType } from './enums/account-type.enum';\nimport { UpdateUserDto } from './dtos/update-user.dto';\nimport { GetUser } from './decorators/jwt.decorator';\nimport { \n    ApiBadRequestResponse,\n    ApiBearerAuth,\n    ApiCreatedResponse,\n    ApiForbiddenResponse,\n    ApiNotFoundResponse,\n    ApiOkResponse,\n    ApiOperation,\n    ApiTags,\n    ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { deleteDoc, loginDoc, registerDoc, updateDoc } from './swagger/controller.swagger';\n\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n\n    constructor( private authService: AuthService ) {}\n\n    @ApiOperation(registerDoc.operation)\n    @ApiBearerAuth()\n    @ApiOkResponse(registerDoc.responses.success)\n    @ApiBadRequestResponse(registerDoc.responses.badRequest)\n    @ApiUnauthorizedResponse(registerDoc.responses.unauthorized)\n    @ApiForbiddenResponse(registerDoc.responses.forbidden)\n    @UseGuards(JwtAuthGuard, RolesGuard)\n    @Roles(accountType.ADMIN)\n    @UsePipes(ValidationPipe)\n    @Post('register') // api/auth/register\n    register(@Body() createUserDto: CreataUserDto, @GetUser() user: UserEntity ): Promise {\n        return this.authService.createUser(createUserDto, user);\n    }\n\n    \n    @ApiOperation(loginDoc.operation)\n    @ApiCreatedResponse(loginDoc.responses.success)\n    @ApiNotFoundResponse(loginDoc.responses.notFound)\n    @ApiBadRequestResponse(loginDoc.responses.badRequest)\n    @Post('login') // api/auth/login\n    @UsePipes(ValidationPipe)\n    login( @Body() loginDto: LoginDto ): Promise {\n        return this.authService.login(loginDto);\n    }\n\n\n    @ApiOperation(updateDoc.operation)\n    @ApiBearerAuth()\n    @ApiOkResponse(updateDoc.responses.success)\n    @ApiBadRequestResponse(updateDoc.responses.badRequest)\n    @ApiNotFoundResponse(updateDoc.responses.notFound)\n    @ApiUnauthorizedResponse(updateDoc.responses.unauthorized)\n    @ApiForbiddenResponse(updateDoc.responses.forbidden)\n    @UseGuards(JwtAuthGuard, RolesGuard)\n    @Roles(accountType.ADMIN)\n    @UsePipes(ValidationPipe)\n    @Patch('update/:username') // api/auth/update/:username\n    updateUser( @Param('username') username: string, @Body() updateUserDto: UpdateUserDto, @GetUser() user: UserEntity ) {\n        return this.authService.updateUser(username, updateUserDto, user) ;\n    }\n\n    @ApiOperation(deleteDoc.operation)\n    @ApiBearerAuth()\n    @ApiOkResponse(deleteDoc.responses.success)\n    @ApiBadRequestResponse(deleteDoc.responses.badRequest)\n    @ApiNotFoundResponse(deleteDoc.responses.notFound)\n    @ApiUnauthorizedResponse(deleteDoc.responses.unauthorized)\n    @ApiForbiddenResponse(deleteDoc.responses.forbidden)\n    @UseGuards(JwtAuthGuard, RolesGuard)\n    @Roles(accountType.ADMIN)\n    @Delete('delete/:username') // api/auth/delete/:username\n    deleteUser( @Param('username') username: string, @GetUser() user: UserEntity ): Promise {\n        return this.authService.deleteUser(username, user) ;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nJwtAuthGuard \n\nJwtAuthGuard \n\n\n\nRolesGuard \n\nRolesGuard \n\n\n\nAuthModule\n\nAuthModule\n\nJwtAuthGuard  -->\n\nAuthModule->JwtAuthGuard \n\n\n\nRolesGuard  -->\n\nAuthModule->RolesGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This module use for authentication and authorization purposes.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtAuthGuard\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtAuthGuard\n                        \n                        \n                            RolesGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConfig } from 'src/config/jwt.config';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JwtAuthGuard } from './guards/jwt-auht.guard';\nimport { RolesGuard } from './guards/roles.guard';\n\n/**\n * This module use for authentication and authorization purposes.\n */\n@Module({\n  imports: [\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    TypeOrmModule.forFeature([UserEntity]),\n    JwtModule.register(jwtConfig)\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, JwtAuthGuard, RolesGuard],\n  exports: [ PassportModule, JwtAuthGuard, RolesGuard ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                saltData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createDevAccount\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createDevAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDevAccount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:147\n                        \n                    \n\n\n            \n                \n                        This function use to check the developer account if is work,Or creating the developer account if not.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The status of the developer account.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreataUserDto, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n                        This founction use to create a new account in the system.\nExceptions:\n\nHttpException - User is already registered.\nInternalServerErrorException\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreataUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The information about the user.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                User information after the creation.\nExceptions:\n\nHttpException - User is already registered.\nInternalServerErrorException\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(username: string, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:131\n                        \n                    \n\n\n            \n                \n                        This function use to delete user.\nExceptions:\n\nHttpException - Invalid username.\nNotFoundException - The user not found.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Message with the username.\nExceptions:\n\nHttpException - Invalid username.\nNotFoundException - The user not found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n                        This function use to login and getting the access token for the user.\nExceptions:\n\nNotFoundException - if the user is not found.\nHttpException - The password is not correct.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Login information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                access token.\nExceptions:\n\nNotFoundException - if the user is not found.\nHttpException - The password is not correct.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n                        called when the program is run for checking the admin account.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(_username: string, updateUserDto: UpdateUserDto, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n                        This function use to udate user information.The Valid data to update are username, displayName, password, accountType.\nExceptions:\n\nHttpException - Invalid username\nNotFoundException - There is no user.\nHttpException - There is invalid update fields in the updateUserDto.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user.\n\n                                            \n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The update information.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The new user with the new information.\nExceptions:\n\nHttpException - Invalid username\nNotFoundException - There is no user.\nHttpException - There is invalid update fields in the updateUserDto.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('AuthService')\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        saltData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : config.get('salt')\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { \n    HttpException, HttpStatus, \n    Injectable, InternalServerErrorException, \n    Logger, \n    NotFoundException, \n    OnModuleInit\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { CreataUserDto } from './dtos/create-user.dto';\nimport * as bcrypt from 'bcrypt' ;\nimport { LoginDto } from './dtos/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { UpdateUserDto } from './dtos/update-user.dto';\nimport * as config from 'config';\nimport { accountType } from './enums/account-type.enum';\nimport { omitObjectKeys } from 'src/utils/omit.util';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n    constructor( \n        @InjectRepository(UserEntity) private readonly userRepository: Repository,\n        private readonly jwtService: JwtService,\n        ) {}\n\n    private readonly logger: Logger = new Logger('AuthService') ;\n    private readonly saltData = config.get('salt');\n\n    /**\n     * called when the program is run for checking the admin account.\n     */\n    async onModuleInit() {\n        this.createDevAccount();\n    }\n\n    /**\n     * This founction use to create a new account in the system.\n     * @param {CreataUserDto} createUserDto The information about the user.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} User information after the creation.\n     * ### Exceptions:\n     * - HttpException - User is already registered.\n     * - InternalServerErrorException\n     */\n    async createUser( createUserDto: CreataUserDto, user: UserEntity ): Promise {\n        const { username, displayName, password, accountType } = createUserDto ;\n        const newUser = new UserEntity() ;\n        newUser.username = username.toLowerCase() ;\n        newUser.displayName = displayName;\n        newUser.salt = await bcrypt.genSalt( Number(this.saltData.range) || 12 ) ;\n        newUser.hashPassword = await bcrypt.hash( password, newUser.salt );\n        newUser.accountType = accountType ;\n\n        try {\n            await newUser.save() ;\n            this.logger.log( `The ${user.accountType} '${user.username}' Create ${accountType} '${username}'.` ) ;\n            delete newUser.hashPassword;\n            delete newUser.salt ;\n            return newUser;\n        } catch( error ) {\n            if (error.code == '23505' ) throw new HttpException(`The user '${createUserDto.username}' is already registered!`, HttpStatus.BAD_REQUEST) ;\n            throw new InternalServerErrorException( error ) ;\n        }\n    }\n\n    /**\n     * This function use to login and getting the access token for the user.\n     * @param {LoginDto} loginDto Login information.\n     * @returns {Promise} access token.\n     * ### Exceptions:\n     * - NotFoundException - if the user is not found.\n     * - HttpException - The password is not correct.\n     */\n    async login( loginDto: LoginDto ): Promise {\n        const { username, password } = loginDto ;\n        const user = await this.userRepository.findOne({where: {username: username.toLowerCase()} });\n        if (!user) throw new NotFoundException();\n        const passwordHash = await bcrypt.hash( password, user.salt );\n        if (passwordHash !== user.hashPassword ) throw new HttpException('Password is incorrect!', HttpStatus.BAD_REQUEST);\n        this.logger.log(`Create Access Token For ${user.accountType} '${user.username}'.`);\n        return { accessToken: this.jwtService.sign( {username: user.username, accountType: user.accountType} ) } ;\n    }\n\n    /**\n     * This function use to udate user information.\\\n     * The Valid data to update are `username`, `displayName`, `password`, `accountType`.\n     * @param {string} _username The user.\n     * @param {UpdateUserDto} updateUserDto The update information.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} The new user with the new information.\n     * ### Exceptions:\n     * - HttpException - Invalid username\n     * - NotFoundException - There is no user.\n     * - HttpException - There is invalid update fields in the updateUserDto.\n     */\n    async updateUser( _username: string, updateUserDto: UpdateUserDto, user: UserEntity): Promise {\n        _username = _username.toLowerCase() ;\n        if (!_username) throw new HttpException('username query is requier!', HttpStatus.BAD_REQUEST) ;\n        const userData = await this.userRepository.findOne( {where: { username: _username } } );\n        if (!userData) throw new NotFoundException();\n\n        const updateUserDtoKeys: string[] = [\n            'username',\n            'displayName',\n            'password',\n            'accountType'\n        ];\n        const isValidUpdateDto: boolean = Object.keys(updateUserDto).every( (key) =>  updateUserDtoKeys.includes(key) );\n        if (!isValidUpdateDto) throw new HttpException( 'Invalid update fields in the body!', HttpStatus.BAD_REQUEST);\n        if (updateUserDto.password) {\n            userData.hashPassword = await bcrypt.hash(updateUserDto.password, userData.salt) ;\n            delete updateUserDto.password;\n        }\n        Object.assign(userData, updateUserDto) ;\n        await this.userRepository.save(userData) ;\n\n        this.logger.log(`The ${user.accountType} '${user.username}' Update Information for User '${_username}'.`);\n        return omitObjectKeys( userData, ['salt', 'hashPassword'] ) as UserEntity;\n    }\n\n    /**\n     * This function use to delete user.\n     * @param {string} username The user.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} Message with the username.\n     * ### Exceptions:\n     * - HttpException - Invalid username.\n     * - NotFoundException - The user not found.\n     */\n    async deleteUser( username: string, user: UserEntity ): Promise {\n        username = username.toLowerCase();\n        if(!username) throw new HttpException(`Username is require!`, HttpStatus.BAD_REQUEST) ;\n        const { affected } = await this.userRepository.delete({ username }) ;\n        if ( affected > 0 ) {\n            this.logger.log(`The ${user.accountType} '${user.username}' Deleted The User '${username}'.`);\n            return { message: `User '${username}' has been deleted.` };\n        }\n        throw new NotFoundException(`User '${username}' not found!`);\n    }\n\n    /**\n     * This function use to check the developer account if is work,\\\n     * Or creating the developer account if not.\n     * @returns {Promise} The status of the developer account.\n     */\n    private async createDevAccount(): Promise {\n        const adminData = config.get('admin');\n        let user: UserEntity = await this.userRepository.findOne( {where: { username: adminData.username || 'mohaned' }} );\n        if ( user ) {\n            this.logger.log(`The Admin Account '${user.username}' is Runnig..`);\n        } else {\n            user = new UserEntity();\n            user.accountType = accountType.ADMIN;\n            user.username = String(adminData.username).toLowerCase() || 'mohaned' ;\n            user.displayName = adminData.name || 'Mohaned Sherhan (Mr.x)';\n            user.salt = await bcrypt.genSalt( Number(this.saltData.range) || 12 );\n            user.hashPassword = await bcrypt.hash( adminData.password || 'mohaned123', user.salt );\n            user.createdAt = new Date() ;\n            await this.userRepository.save( user ) ;\n            this.logger.log(`The Admin Account With Username '${user.username}' Has Been Created..`);\n        }\n        return true;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreataUserDto.html":{"url":"classes/CreataUserDto.html","title":"class - CreataUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreataUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accountType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         accountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the account Role.', example: 'ACCOUNTANT', enum: accountType, required: true})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the display name.', example: 'Mohaned Sherhan (Mr.x)', maximum: 50, minimum: 3, required: true})@MaxLength(50)@MinLength(3)@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the password.', example: 'Mohaned2023+', maximum: 128, minimum: 8, required: true})@MaxLength(128)@MinLength(8)@IsString()@IsNotEmpty()@Matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the username.', example: 'mohaned', maximum: 15, minimum: 3, required: true})@MaxLength(15)@MinLength(3)@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, Matches, MaxLength, MinLength } from \"class-validator\";\nimport { accountType } from \"../enums/account-type.enum\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreataUserDto {\n    @ApiProperty({\n        description: 'This is the username.',\n        example: 'mohaned',\n        maximum: 15,\n        minimum: 3,\n        required: true\n    })\n    @MaxLength(15)\n    @MinLength(3)\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @ApiProperty({\n        description: 'This is the display name.',\n        example: 'Mohaned Sherhan (Mr.x)',\n        maximum: 50,\n        minimum: 3,\n        required: true\n    })\n    @MaxLength(50)\n    @MinLength(3)\n    @IsNotEmpty()\n    @IsString()\n    displayName: string;\n\n    @ApiProperty({\n        description: 'This is the password.',\n        example: 'Mohaned2023+',\n        maximum: 128,\n        minimum: 8,\n        required: true\n    })\n    @MaxLength(128)\n    @MinLength(8)\n    @IsString()\n    @IsNotEmpty()\n    @Matches(\n        /((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n        {message: 'password too weak.'}\n    )\n    password: string;\n\n    @ApiProperty({\n        description: 'This is the account Role.',\n        example: 'ACCOUNTANT',\n        enum: accountType,\n        required: true\n    })\n    @IsNotEmpty()\n    accountType: accountType;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInvoiceDto.html":{"url":"classes/CreateInvoiceDto.html","title":"class - CreateInvoiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInvoiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invoice/dtos/create-invoice.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                itemId\n                            \n                            \n                                    \n                                    \n                                    \n                                numberOfItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The item ID', example: 1, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/dtos/create-invoice.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numberOfItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of items.', example: 2, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/dtos/create-invoice.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsNumber } from \"class-validator\";\n\nexport class CreateInvoiceDto {\n    @ApiProperty({\n        description: 'The item ID',\n        example: 1,\n        required: true\n    })\n    @IsNotEmpty()\n    @IsNumber()\n    itemId: number;\n\n    @ApiProperty({\n        description: 'The number of items.',\n        example: 2,\n        required: true\n    })\n    @IsNotEmpty()\n    @IsNumber()\n    numberOfItems: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateItemDto.html":{"url":"classes/CreateItemDto.html","title":"class - CreateItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item/dtos/create-item.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                buyPillPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                companyName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                expiryDate\n                            \n                            \n                                    \n                                    \n                                    \n                                itemId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                numberOfItems\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                productionDate\n                            \n                            \n                                    \n                                    \n                                    \n                                sellPillPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        buyPillPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Purchase price of one piece.', example: 3.6, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Company name.', maximum: 50, example: 'X Company', required: true})@IsString()@IsNotEmpty()@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        expiryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Expiry Date.', example: undefined, required: true})@IsDate()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Itme ID', example: 1, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Itme name', maximum: 50, example: 'X Chocolate', required: true})@IsString()@IsNotEmpty()@MaxLength(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numberOfItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Number of all pieces.', example: 45, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        productionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Production Date.', example: undefined, required: true})@IsDate()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        sellPillPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Selling price of one piece.', example: 4.6, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/create-item.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsDate, IsNotEmpty, IsNumber, IsString, MaxLength } from \"class-validator\";\n\n\n\nexport class CreateItemDto {\n    @ApiProperty({\n        description: 'Itme ID',\n        example: 1,\n        required: true\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    itemId: number;\n\n    @ApiProperty({\n        description: 'Itme name',\n        maximum: 50,\n        example: 'X Chocolate',\n        required: true\n    })\n    @IsString()\n    @IsNotEmpty()\n    @MaxLength(50)\n    name: string;\n\n    @ApiProperty({\n        description: 'Selling price of one piece.',\n        example: 4.6,\n        required: true\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    sellPillPrice: number;\n\n    @ApiProperty({\n        description: 'Purchase price of one piece.',\n        example: 3.6,\n        required: true\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    buyPillPrice: number;\n\n    @ApiProperty({\n        description: 'The Number of all pieces.',\n        example: 45,\n        required: true\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    numberOfItems: number;\n\n    @ApiProperty({\n        description: 'The Company name.',\n        maximum: 50,\n        example: 'X Company',\n        required: true\n    })\n    @IsString()\n    @IsNotEmpty()\n    @MaxLength(50)\n    companyName: string;\n\n    @ApiProperty({\n        description: 'Production Date.',\n        example: new Date(),\n        required: true\n    })\n    @IsDate()\n    @IsNotEmpty()\n    @Type( () => Date )\n    productionDate: Date;\n\n    @ApiProperty({\n        description: 'Expiry Date.',\n        example: new Date(),\n        required: true\n    })\n    @IsDate()\n    @IsNotEmpty()\n    @Type( () => Date )\n    expiryDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReturnedInvoiceDto.html":{"url":"classes/CreateReturnedInvoiceDto.html","title":"class - CreateReturnedInvoiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReturnedInvoiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/returned-invoice/dtos/create-returned-invoice.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                itemId\n                            \n                            \n                                    \n                                    \n                                    \n                                numberOfItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The item ID', example: 1, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/dtos/create-returned-invoice.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        numberOfItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The number of items.', example: 2, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/dtos/create-returned-invoice.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsNumber } from \"class-validator\";\n\nexport class CreateReturnedInvoiceDto {\n\n    @ApiProperty({\n        description: 'The item ID',\n        example: 1,\n        required: true\n    })\n    @IsNotEmpty()\n    @IsNumber()\n    itemId: number;\n\n    @ApiProperty({\n        description: 'The number of items.',\n        example: 2,\n        required: true\n    })\n    @IsNotEmpty()\n    @IsNumber()\n    numberOfItems: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataInvoiceReportInterface.html":{"url":"interfaces/DataInvoiceReportInterface.html","title":"interface - DataInvoiceReportInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataInvoiceReportInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for add the invoice to the report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avgOfAllInvoicesPrice\n                                        \n                                \n                                \n                                        \n                                            totalNumberOfAllInvoices\n                                        \n                                \n                                \n                                        \n                                            totalNumberOfAllItems\n                                        \n                                \n                                \n                                        \n                                            totalNumberOfAllPills\n                                        \n                                \n                                \n                                        \n                                            totalPriceOfAllInvoices\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avgOfAllInvoicesPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avgOfAllInvoicesPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNumberOfAllInvoices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalNumberOfAllInvoices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNumberOfAllItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalNumberOfAllItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNumberOfAllPills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalNumberOfAllPills:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPriceOfAllInvoices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPriceOfAllInvoices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateItemReportInterface.html":{"url":"interfaces/DateItemReportInterface.html","title":"interface - DateItemReportInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateItemReportInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for add the item to the report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avgBuyPillPrice\n                                        \n                                \n                                \n                                        \n                                            avgExpiryDate\n                                        \n                                \n                                \n                                        \n                                            avgProductionDate\n                                        \n                                \n                                \n                                        \n                                            avgSellPillPrice\n                                        \n                                \n                                \n                                        \n                                            totalBuyPrice\n                                        \n                                \n                                \n                                        \n                                            totalNumberOfAllItems\n                                        \n                                \n                                \n                                        \n                                            totalNumberOfItem\n                                        \n                                \n                                \n                                        \n                                            totalSellPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avgBuyPillPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avgBuyPillPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avgExpiryDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avgExpiryDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avgProductionDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avgProductionDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avgSellPillPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avgSellPillPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalBuyPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalBuyPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNumberOfAllItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalNumberOfAllItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalNumberOfItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalNumberOfItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSellPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSellPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ErrorEntitiy.html":{"url":"entities/ErrorEntitiy.html","title":"entity - ErrorEntitiy","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ErrorEntitiy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/entities/error.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/error/entities/error.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/error/entities/error.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/error/entities/error.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.errors, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/error/entities/error.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/error/entities/error.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { UserEntity } from \"src/auth/entities/user.entity\";\nimport { BaseEntity, Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity( {name: 'errors'} )\nexport class ErrorEntitiy extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    message: string;\n\n    @ManyToOne( () => UserEntity, user => user.errors, {eager: false})\n    user: UserEntity;\n\n    @Column()\n    userId: number;\n\n    @CreateDateColumn({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n    addAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_providers\n\n\n\ncluster_ErrorModule_exports\n\n\n\n\nErrorService \n\nErrorService \n\n\n\nErrorModule\n\nErrorModule\n\nErrorService  -->\n\nErrorModule->ErrorService \n\n\n\n\n\nErrorService\n\nErrorService\n\nErrorModule -->\n\nErrorService->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This module use for errors.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ErrorService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorService } from './error.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ErrorEntitiy } from './entities/error.entity';\n\n/**\n * This module use for errors.\n */\n@Module({\n  imports: [ TypeOrmModule.forFeature([ErrorEntitiy]) ],\n  providers: [ErrorService],\n  exports: [ ErrorService ]\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/error/error.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/error/error.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(message: string, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/error/error.service.ts:22\n                        \n                    \n\n\n            \n                \n                        This function use to log the error of items to the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('ErrorService')\n                    \n                \n                    \n                        \n                                Defined in src/error/error.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ErrorEntitiy } from './entities/error.entity';\nimport { Repository } from 'typeorm';\nimport { UserEntity } from 'src/auth/entities/user.entity';\n\n@Injectable()\nexport class ErrorService {\n    constructor( \n        @InjectRepository(ErrorEntitiy) private readonly errorRepository: Repository\n    ) {}\n\n    private readonly logger = new Logger('ErrorService');\n\n\n    /**\n     * This function use to log the error of items to the database.\n     * @param {string} message  \n     * @param {UserEntity} user \n     * @returns {Promise}\n     */\n    async create( message: string, user: UserEntity ): Promise {\n        const error = this.errorRepository.create( {message, user} as ErrorEntitiy );\n        await this.errorRepository.save(error);\n        this.logger.log(`The ${user.accountType} '${user.username}' Create New ErrorEntity With ID '${error.id}'.`);\n        return { message: 'Error Created.' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InvoiceController.html":{"url":"controllers/InvoiceController.html","title":"controller - InvoiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InvoiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invoice/invoice.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                invoice\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                createInvoice\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                deleteInvoice\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findInvoice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        createInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInvoice(createInvoiceDtos: CreateInvoiceDto[], user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(createDoc.operation)@ApiOkResponse(undefined.success)@ApiNotFoundResponse(undefined.notFound)@ApiBadRequestResponse(undefined.badRequest)@ApiForbiddenResponse(undefined.forbidden)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiBody({type: undefined, description: 'Array of Items to be created.'})@UseGuards(RolesGuard)@Roles(accountType.ACCOUNTANT)@Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/invoice/invoice.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInvoiceDtos\n                                            \n                                                            CreateInvoiceDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        deleteInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteInvoice(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(deleteDoc.operation)@ApiOkResponse(undefined.success)@ApiNotFoundResponse(undefined.notFound)@ApiForbiddenResponse(undefined.forbidden)@ApiUnauthorizedResponse(undefined.unauthorized)@UseGuards(RolesGuard)@Roles(accountType.ACCOUNTANT)@Delete('delete/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/invoice/invoice.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    findInvoice(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(findDoc.operation)@ApiOkResponse(undefined.success)@ApiNotFoundResponse(undefined.notFound)@ApiUnauthorizedResponse(undefined.unauthorized)@Get('find/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/invoice/invoice.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { \n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    ParseArrayPipe,\n    ParseIntPipe,\n    Post,\n    UseGuards\n} from '@nestjs/common';\nimport { InvoiceService } from './invoice.service';\nimport { CreateInvoiceDto } from './dtos/create-invoice.dto';\nimport { GetUser } from 'src/auth/decorators/jwt.decorator';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auht.guard';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { accountType } from 'src/auth/enums/account-type.enum';\nimport { InvoiceEntity } from './entities/invoice.entity';\nimport { \n    ApiBadRequestResponse,\n    ApiBearerAuth,\n    ApiBody,\n    ApiForbiddenResponse,\n    ApiNotFoundResponse,\n    ApiOkResponse,\n    ApiOperation,\n    ApiTags,\n    ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { createDoc, deleteDoc, findDoc } from './swagger/controller.swagger';\n\n@ApiTags('Invoice')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard)\n@Controller('invoice')\nexport class InvoiceController {\n    constructor( private readonly invoiceService: InvoiceService ) {}\n\n    @ApiOperation(createDoc.operation)\n    @ApiOkResponse(createDoc.responses.success)\n    @ApiNotFoundResponse(createDoc.responses.notFound)\n    @ApiBadRequestResponse(createDoc.responses.badRequest)\n    @ApiForbiddenResponse(createDoc.responses.forbidden)\n    @ApiUnauthorizedResponse(createDoc.responses.unauthorized)\n    @ApiBody({\n        type: [CreateInvoiceDto],\n        description: 'Array of Items to be created.'\n    })\n    @UseGuards( RolesGuard )\n    @Roles(accountType.ACCOUNTANT)\n    @Post('create')\n    createInvoice(\n        @Body(new ParseArrayPipe({items: CreateInvoiceDto})) createInvoiceDtos: CreateInvoiceDto[],\n        @GetUser() user: UserEntity\n    ): Promise {\n        return this.invoiceService.createInvoice( createInvoiceDtos, user );\n    }\n\n    @ApiOperation(findDoc.operation)\n    @ApiOkResponse(findDoc.responses.success)\n    @ApiNotFoundResponse(findDoc.responses.notFound)\n    @ApiUnauthorizedResponse(findDoc.responses.unauthorized)\n    @Get('find/:id')\n    findInvoice( @Param('id', ParseIntPipe) id: number, @GetUser() user: UserEntity): Promise {\n        return this.invoiceService.findInvoice( id, user );\n    }\n\n    @ApiOperation(deleteDoc.operation)\n    @ApiOkResponse(deleteDoc.responses.success)\n    @ApiNotFoundResponse(deleteDoc.responses.notFound)\n    @ApiForbiddenResponse(deleteDoc.responses.forbidden)\n    @ApiUnauthorizedResponse(deleteDoc.responses.unauthorized)\n    @UseGuards( RolesGuard )\n    @Roles(accountType.ACCOUNTANT)\n    @Delete('delete/:id')\n    deleteInvoice( @Param('id', ParseIntPipe) id: number, @GetUser() user: UserEntity ): Promise {\n        return this.invoiceService.deleteInvoice( id, user ) ;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/InvoiceEntity.html":{"url":"entities/InvoiceEntity.html","title":"entity - InvoiceEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  InvoiceEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invoice/entities/invoice.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                addAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                totalPrice\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        addAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Invoice Date.', example: undefined})@CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/entities/invoice.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/entities/invoice.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ItemInterface[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of the items', example: undefined})@Column('json')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/entities/invoice.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Total Price.', example: 30.5})@Column('float')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/entities/invoice.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.invoices, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/entities/invoice.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/invoice/entities/invoice.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\nimport { ItemInterface } from \"src/interfaces/interfaces\";\nimport { \n    BaseEntity,\n    Column,\n    CreateDateColumn,\n    Entity,\n    ManyToOne,\n    PrimaryGeneratedColumn\n} from \"typeorm\";\n\n\n@Entity({ name: 'invoices' })\nexport class InvoiceEntity extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n    \n    @ApiProperty({\n        description: 'List of the items',\n        example: [\n            {\n                itemId: 1,\n                name: \"X Chocolate\",\n                numberOfItems: 2,\n                price: 30.5,\n            }\n        ]\n    })\n    @Column('json')\n    items: ItemInterface[] ;\n\n    @ApiProperty({\n        description: 'The Total Price.',\n        example: 30.5\n    })\n    @Column('float')\n    totalPrice: number;\n\n    @ManyToOne( () => UserEntity, user => user.invoices, {eager: false} )\n    user: UserEntity;\n\n    @Column()\n    userId: number;\n\n    @ApiProperty({\n        description: 'The Invoice Date.',\n        example: new Date()\n    })\n    @CreateDateColumn( { type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' } )\n    addAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvoiceModule.html":{"url":"modules/InvoiceModule.html","title":"module - InvoiceModule","body":"\n                   \n\n\n\n\n    Modules\n    InvoiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InvoiceModule\n\n\n\ncluster_InvoiceModule_imports\n\n\n\ncluster_InvoiceModule_providers\n\n\n\ncluster_InvoiceModule_exports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nInvoiceModule\n\nInvoiceModule\n\nInvoiceModule -->\n\nErrorModule->InvoiceModule\n\n\n\n\n\nItemModule\n\nItemModule\n\nInvoiceModule -->\n\nItemModule->InvoiceModule\n\n\n\n\n\nInvoiceService \n\nInvoiceService \n\nInvoiceService  -->\n\nInvoiceModule->InvoiceService \n\n\n\n\n\nInvoiceService\n\nInvoiceService\n\nInvoiceModule -->\n\nInvoiceService->InvoiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/invoice/invoice.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This module use to generate invoice.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InvoiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InvoiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            ItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InvoiceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InvoiceController } from './invoice.controller';\nimport { InvoiceService } from './invoice.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InvoiceEntity } from './entities/invoice.entity';\nimport { ItemEntity } from 'src/item/entities/item.entity';\nimport { ItemModule } from 'src/item/item.module';\nimport { ErrorModule } from 'src/error/error.module';\n\n/**\n * This module use to generate invoice.\n */\n@Module({\n  imports: [ \n    TypeOrmModule.forFeature([InvoiceEntity, ItemEntity]),\n    ItemModule,\n    ErrorModule\n  ],\n  controllers: [InvoiceController],\n  providers: [InvoiceService],\n  exports: [ InvoiceService ]\n})\nexport class InvoiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvoiceReportInterface.html":{"url":"interfaces/InvoiceReportInterface.html","title":"interface - InvoiceReportInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvoiceReportInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for creating the invoice report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createAt\n                                        \n                                \n                                \n                                        \n                                            report\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        report\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        report:         DataInvoiceReportInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataInvoiceReportInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvoiceService.html":{"url":"injectables/InvoiceService.html","title":"injectable - InvoiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvoiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/invoice/invoice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createInvoice\n                            \n                            \n                                    Async\n                                deleteInvoice\n                            \n                            \n                                    Async\n                                findInvoice\n                            \n                            \n                                    Async\n                                getInvoiceReport\n                            \n                            \n                                    Async\n                                updateInvoice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(invoiceRepository: Repository, itemRepository: Repository, itemService: ItemService, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/invoice/invoice.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        invoiceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemService\n                                                  \n                                                        \n                                                                        ItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInvoice(createInvoiceDtos: CreateInvoiceDto[], user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invoice/invoice.service.ts:45\n                        \n                    \n\n\n            \n                \n                        This function use to create an invoice.\nExceptions:\n\nNotFoundException - One of the items not found.\nHttpException - The number of items in the invoice is lass than in the database.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createInvoiceDtos\n                                            \n                                                            CreateInvoiceDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The invoice information.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The invoice.\nExceptions:\n\nNotFoundException - One of the items not found.\nHttpException - The number of items in the invoice is lass than in the database.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteInvoice(invoiceId: number, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invoice/invoice.service.ts:105\n                        \n                    \n\n\n            \n                \n                        This function use to delete an invoice.\nExceptions:\n\nNotFoundException - The invoice not found.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                invoiceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The invoice ID.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The OK message.\nExceptions:\n\nNotFoundException - The invoice not found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    findInvoice(invoiceId: number, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invoice/invoice.service.ts:89\n                        \n                    \n\n\n            \n                \n                        This function use to find an invoice.\nExceptions:\n\nNotFoundException - The invoice not found.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                invoiceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Invoice ID.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The invoice.\nExceptions:\n\nNotFoundException - The invoice not found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getInvoiceReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInvoiceReport(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invoice/invoice.service.ts:136\n                        \n                    \n\n\n            \n                \n                        This function use to get the invoices report.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The report.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateInvoice(invoiceId: number, updateInvoice: UpdateInvoiceIterface, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/invoice/invoice.service.ts:121\n                        \n                    \n\n\n            \n                \n                        This function use to update an invoice information.\nExceptions:\n\nNotFoundException - The invoice not found.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                invoiceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The invoice ID.\n\n                                            \n                                        \n                                        \n                                                updateInvoice\n                                            \n                                                            UpdateInvoiceIterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new invoice information.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The OK message.\nExceptions:\n\nNotFoundException - The invoice not found.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('InvoiceService')\n                    \n                \n                    \n                        \n                                Defined in src/invoice/invoice.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { \n    HttpException,\n    HttpStatus,\n    Injectable,\n    Logger,\n    NotFoundException\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InvoiceEntity } from './entities/invoice.entity';\nimport { In, Repository } from 'typeorm';\nimport { CreateInvoiceDto } from './dtos/create-invoice.dto';\nimport { ItemEntity } from 'src/item/entities/item.entity';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { \n    DataInvoiceReportInterface,\n    InvoiceReportInterface,\n    ItemInterface,\n    UpdateInvoiceIterface\n} from 'src/interfaces/interfaces';\nimport { readFileSync } from 'fs'; \nimport { omitObjectKeys } from 'src/utils/omit.util';\nimport { ItemService } from 'src/item/item.service';\nimport { ErrorService } from 'src/error/error.service';\n\n@Injectable()\nexport class InvoiceService {\n    constructor( \n        @InjectRepository(InvoiceEntity) private readonly invoiceRepository: Repository,\n        @InjectRepository(ItemEntity) private readonly itemRepository: Repository,\n        private readonly itemService: ItemService,\n        private readonly errorService: ErrorService\n    ) {}\n\n    private readonly logger = new Logger('InvoiceService');\n\n    /**\n     * This function use to create an invoice.\n     * @param {CreateInvoiceDto} createInvoiceDtos The invoice information.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} The invoice.\n     * ### Exceptions:\n     * - NotFoundException - One of the items not found.\n     * - HttpException - The number of items in the invoice is lass than in the database.\n     */\n    async createInvoice( createInvoiceDtos: CreateInvoiceDto[], user: UserEntity ): Promise {\n        let invoice = new InvoiceEntity();\n        let items: ItemInterface[] = [];\n        let totalPrice: number = 0;\n        let itemsIds: number[] = [];\n        let itemIdError: number = undefined;\n\n        createInvoiceDtos.forEach( (cid) => itemsIds.push(cid.itemId) );\n        const itemsInfo: ItemEntity[] = await this.itemRepository.find({where: { itemId: In(itemsIds) } });\n        const notFoundItemId: number | undefined = itemsIds.filter( (id) => itemsInfo.findIndex( (i) => i.itemId === id ) === -1 )[0] ;\n        if ( notFoundItemId ) throw new NotFoundException(`The item with id '${notFoundItemId}' Not Found!`);\n\n        createInvoiceDtos.forEach( (cid) => {\n            const { itemId } = cid \n            const i: number = itemsInfo.findIndex( (value) => value.itemId == itemId );\n            const item = itemsInfo[i];\n            if ( item.numberOfItems } The invoice.\n     * ### Exceptions:\n     * - NotFoundException - The invoice not found.\n     */\n    async findInvoice( invoiceId: number, user: UserEntity ): Promise {\n        const invoice: InvoiceEntity = await this.invoiceRepository.findOne( { where: {id: invoiceId}, relations: ['user'] });\n        if ( !invoice ) throw new NotFoundException();\n        this.logger.log(`The ${user.accountType} '${user.username}' Get The Info of The Invoice With ID '${invoiceId}'.`);\n        invoice.user = omitObjectKeys(invoice.user, ['accountType', 'hashPassword', 'salt', 'createdAt']) as UserEntity ;\n        return invoice;\n    }\n\n    /**\n     * This function use to delete an invoice.\n     * @param {number} invoiceId The invoice ID.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} The OK message.\n     * ### Exceptions:\n     * - NotFoundException - The invoice not found.\n     */\n    async deleteInvoice( invoiceId: number, user: UserEntity): Promise{\n        const result = await this.invoiceRepository.delete( {id: invoiceId} ) ;\n        if ( result.affected === 0 ) throw new NotFoundException();\n        this.logger.log(`The ${user.accountType} '${user.username}' Delete The Invoice With ID '${invoiceId}'.`);\n        return { message: `The Invoice With ID '${invoiceId}' Has Been Deleted.` };\n    }\n\n    /**\n     * This function use to update an invoice information.\n     * @param {number} invoiceId The invoice ID.\n     * @param {UpdateInvoiceIterface} updateInvoice The new invoice information. \n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} The OK message.\n     * ### Exceptions:\n     * - NotFoundException - The invoice not found.\n     */\n    async updateInvoice( invoiceId: number, updateInvoice: UpdateInvoiceIterface, user: UserEntity ): Promise {\n        const invoice: InvoiceEntity = await this.invoiceRepository.findOne({where: {id: invoiceId}}) ;\n        if ( !invoice ) throw new NotFoundException();\n        invoice.items = updateInvoice.items;\n        invoice.totalPrice = updateInvoice.totalPrice;\n        await invoice.save();\n        this.logger.log(`The ${user.accountType} '${user.username}' Updated The Invoice With ID '${invoiceId}'.`);\n        return { message: 'Invoice Updated.' };\n    }\n\n    /**\n     * This function use to get the invoices report.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {Promise} The report.\n     */\n    async getInvoiceReport( user: UserEntity ): Promise {\n        const sql: string = readFileSync('./sql/invoices-report.sql', 'utf-8' ) ;\n        const reportObject: DataInvoiceReportInterface[] = ( await this.invoiceRepository.query(sql) ) as DataInvoiceReportInterface[] ;\n        this.logger.log(`The ${user.accountType} '${user.username}' Created Invoices Report.`);\n        const omitUser: UserEntity = omitObjectKeys(\n            user,\n            ['hashPassword','salt', 'createdAt']\n        ) as UserEntity;\n        return { \n            report: reportObject[0],\n            user: omitUser,\n            createAt: new Date() \n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ItemController.html":{"url":"controllers/ItemController.html","title":"controller - ItemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ItemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item/item.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                item\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                createItem\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                deleteItem\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        createItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    createItem(createItemDto: CreateItemDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(createDoc.operation)@ApiOkResponse(undefined.success)@ApiBadRequestResponse(undefined.badRequest)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiForbiddenResponse(undefined.forbidden)@UsePipes(ValidationPipe)@Post('add')\n                \n            \n\n                    \n                        \n                            Defined in src/item/item.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createItemDto\n                                            \n                                                            CreateItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        deleteItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteItem(id: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(deleteDoc.operation)@ApiOkResponse(undefined.success)@ApiNotFoundResponse(undefined.notFound)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiForbiddenResponse(undefined.forbidden)@Delete('delete/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/item/item.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        updateItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateItem(itmeId: number, updateItemDto: UpdateItemDto, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(updateDoc.operation)@ApiOkResponse(undefined.success)@ApiNotFoundResponse(undefined.notFound)@ApiBadRequestResponse(undefined.badRequest)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiForbiddenResponse(undefined.forbidden)@UsePipes(ValidationPipe)@Patch('update/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/item/item.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itmeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateItemDto\n                                            \n                                                            UpdateItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { \n    Body,\n    Controller,\n    Delete,\n    Param,\n    ParseIntPipe,\n    Patch,\n    Post,\n    UseGuards,\n    UsePipes,\n    ValidationPipe\n} from '@nestjs/common';\nimport { CreateItemDto } from './dtos/create-item.dto';\nimport { ItemService } from './item.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auht.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { accountType } from 'src/auth/enums/account-type.enum';\nimport { GetUser } from 'src/auth/decorators/jwt.decorator';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { ItemEntity } from './entities/item.entity';\nimport { UpdateItemDto } from './dtos/update-item.dto';\nimport { \n    ApiBadRequestResponse,\n    ApiBearerAuth,\n    ApiForbiddenResponse,\n    ApiNotFoundResponse,\n    ApiOkResponse,\n    ApiOperation,\n    ApiTags,\n    ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { createDoc, deleteDoc, updateDoc } from './swagger/controller.swagger';\n\n@ApiTags('Item')\n@ApiBearerAuth()\n@UseGuards(JwtAuthGuard, RolesGuard)\n@Roles(accountType.ADMIN)\n@Controller('item')\nexport class ItemController {\n\n    constructor( private readonly itemService: ItemService ) {}\n\n    @ApiOperation(createDoc.operation)\n    @ApiOkResponse(createDoc.responses.success)\n    @ApiBadRequestResponse(createDoc.responses.badRequest)\n    @ApiUnauthorizedResponse(createDoc.responses.unauthorized)\n    @ApiForbiddenResponse(createDoc.responses.forbidden)\n    @UsePipes(ValidationPipe)\n    @Post('add')\n    createItem( @Body() createItemDto: CreateItemDto, @GetUser() user: UserEntity ): Promise {\n        return this.itemService.createItem(createItemDto, user);\n    }\n\n    @ApiOperation(deleteDoc.operation)\n    @ApiOkResponse(deleteDoc.responses.success)\n    @ApiNotFoundResponse(deleteDoc.responses.notFound)\n    @ApiUnauthorizedResponse(deleteDoc.responses.unauthorized)\n    @ApiForbiddenResponse(deleteDoc.responses.forbidden)\n    @Delete('delete/:id')\n    deleteItem( @Param('id', ParseIntPipe) id: number, @GetUser() user: UserEntity ): Promise {\n        return this.itemService.deleteItem(id, user) ;\n    }\n\n    @ApiOperation(updateDoc.operation)\n    @ApiOkResponse(updateDoc.responses.success)\n    @ApiNotFoundResponse(updateDoc.responses.notFound)\n    @ApiBadRequestResponse(updateDoc.responses.badRequest)\n    @ApiUnauthorizedResponse(updateDoc.responses.unauthorized)\n    @ApiForbiddenResponse(updateDoc.responses.forbidden)\n    @UsePipes(ValidationPipe)\n    @Patch('update/:id')\n    updateItem( @Param('id', ParseIntPipe) itmeId: number, @Body() updateItemDto: UpdateItemDto, @GetUser() user: UserEntity ) {\n        return this.itemService.updateItem(itmeId, updateItemDto, user);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ItemEntity.html":{"url":"entities/ItemEntity.html","title":"entity - ItemEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ItemEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item/entities/item.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                addAt\n                            \n                            \n                                    \n                                buyAllItemsPrice\n                            \n                            \n                                    \n                                    \n                                buyPillPrice\n                            \n                            \n                                    \n                                    \n                                companyName\n                            \n                            \n                                    \n                                    \n                                expiryDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                itemId\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                numberOfItems\n                            \n                            \n                                    \n                                    \n                                productionDate\n                            \n                            \n                                    \n                                sellAllItemsPrice\n                            \n                            \n                                    \n                                    \n                                sellPillPrice\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        addAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The time of inserting the item.', example: undefined})@CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        buyAllItemsPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double precision'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        buyPillPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Purchase price of one piece.', example: 3.6})@Column({type: 'double precision'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Company name.', example: 'X Company'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        expiryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Expiry Date.', example: undefined})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        itemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The itme id.', example: 1})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the item.', example: 'X Chocolate'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Number of all pieces.', example: 45})@Column({type: 'double precision'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        productionDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Production Date.', example: undefined})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sellAllItemsPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'double precision'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sellPillPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Selling price of one piece.', example: 4.6})@Column({type: 'double precision'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.items, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/entities/item.entity.ts:84\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\nimport { BaseEntity, Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n\n@Entity( {name: 'items'} )\nexport class ItemEntity extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number; \n\n    @ApiProperty({\n        description: 'The itme id.',\n        example: 1\n    })\n    @Column({unique: true})\n    itemId: number;\n\n    @ApiProperty({\n        description: 'The name of the item.',\n        example: \"X Chocolate\"\n    })\n    @Column()\n    name: string;\n\n    @ApiProperty({\n        description: 'Selling price of one piece.',\n        example: 4.6\n    })\n    @Column({type: 'double precision'})\n    sellPillPrice: number;\n\n    @ApiProperty({\n        description: 'Purchase price of one piece.',\n        example: 3.6\n    })\n    @Column({type: 'double precision'})\n    buyPillPrice: number;\n\n    @ApiProperty({\n        description: 'The Number of all pieces.',\n        example: 45\n    })\n    @Column({type: 'double precision'})\n    numberOfItems: number;\n\n    @Column({type: 'double precision'})\n    sellAllItemsPrice: number;\n\n    @Column({type: 'double precision'})\n    buyAllItemsPrice: number;\n\n    @ApiProperty({\n        description: 'The Company name.',\n        example: 'X Company'\n    })\n    @Column()\n    companyName: string;\n\n    @ApiProperty({\n        description: 'Production Date.',\n        example: new Date()\n    })\n    @Column()\n    productionDate: Date;\n\n    @ApiProperty({\n        description: 'Expiry Date.',\n        example: new Date()\n    })\n    @Column()\n    expiryDate: Date;\n\n    @ApiProperty({\n        description: 'The time of inserting the item.',\n        example: new Date()\n    })\n    @CreateDateColumn( {type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' } )\n    addAt: Date\n\n    @ManyToOne( () => UserEntity, user => user.items, {eager: false})\n    user: UserEntity;\n    \n    @Column()\n    userId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemInterface.html":{"url":"interfaces/ItemInterface.html","title":"interface - ItemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for return the invoice with items.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfItems\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ItemModule.html":{"url":"modules/ItemModule.html","title":"module - ItemModule","body":"\n                   \n\n\n\n\n    Modules\n    ItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ItemModule\n\n\n\ncluster_ItemModule_exports\n\n\n\ncluster_ItemModule_providers\n\n\n\n\nItemService \n\nItemService \n\n\n\nItemModule\n\nItemModule\n\nItemService  -->\n\nItemModule->ItemService \n\n\n\n\n\nItemService\n\nItemService\n\nItemModule -->\n\nItemService->ItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/item/item.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This module use to deal with items.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ItemService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ItemController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ItemService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ItemController } from './item.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ItemEntity } from './entities/item.entity';\nimport { ItemService } from './item.service';\n\n/**\n * This module use to deal with items.\n */\n@Module({\n  imports: [ TypeOrmModule.forFeature([ItemEntity]) ],\n  controllers: [ItemController],\n  providers: [ItemService],\n  exports: [ItemService]\n})\nexport class ItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemReportInterface.html":{"url":"interfaces/ItemReportInterface.html","title":"interface - ItemReportInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ItemReportInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for creating the item report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createAt\n                                        \n                                \n                                \n                                        \n                                            report\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        report\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        report:         DateItemReportInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DateItemReportInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemService.html":{"url":"injectables/ItemService.html","title":"injectable - ItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item/item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createItem\n                            \n                            \n                                    Async\n                                deleteItem\n                            \n                            \n                                    Async\n                                getItemsReport\n                            \n                            \n                                    Async\n                                updateItem\n                            \n                            \n                                    Async\n                                updateNumberOfItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/item/item.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    createItem(createItemDto: CreateItemDto, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/item/item.service.ts:33\n                        \n                    \n\n\n            \n                \n                        This function use to create an Item in the database.\nExceptions:\n\nHttpException - Item is already exists in the database.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createItemDto\n                                            \n                                                            CreateItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Item information.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user how call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The Item after the creation.\nExceptions:\n\nHttpException - Item is already exists in the database.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteItem(itemId: number, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/item/item.service.ts:59\n                        \n                    \n\n\n            \n                \n                        This function use to delete the item from the database.\nExceptions:\n\nNotFoundException - The item is not in the database.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                itemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the item.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user how call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The ok message.\nExceptions:\n\nNotFoundException - The item is not in the database.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getItemsReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    getItemsReport(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/item/item.service.ts:142\n                        \n                    \n\n\n            \n                \n                        This function is use to generate the items reportby using SQL commands.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user how call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The report.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateItem(itemId: number, updateItemDto: UpdateItemDto, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/item/item.service.ts:80\n                        \n                    \n\n\n            \n                \n                        This function use to update item information. Update fields are: itemId, name, sellPillPrice, buyPillPrice, numberOfItems, companyName, productionDate, expiryDate\nExceptions:\n\nNotFoundException - The Item is not in the database.\nHttpException - Invalid update fields in the updateItemDto\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                itemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The item ID.\n\n                                            \n                                        \n                                        \n                                                updateItemDto\n                                            \n                                                            UpdateItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The update fields.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user how call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The Item after the update. \nExceptions:\n\nNotFoundException - The Item is not in the database.\nHttpException - Invalid update fields in the updateItemDto\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateNumberOfItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateNumberOfItems(itemId: number, numberOfItems: number, sub: boolean, user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/item/item.service.ts:120\n                        \n                    \n\n\n            \n                \n                        This function use to update the number of items in the databasewhen they sell or buy new items.\nExceptions:\n\nNotFoundException - The Item is not in the database.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                itemId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The item ID.\n\n                                            \n                                        \n                                        \n                                                numberOfItems\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of items.\n\n                                            \n                                        \n                                        \n                                                sub\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    If it is sell or buy.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user how call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The ok message.\nExceptions:\n\nNotFoundException - The Item is not in the database.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('ItmeService')\n                    \n                \n                    \n                        \n                                Defined in src/item/item.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { \n    HttpException,\n    HttpStatus,\n    Injectable,\n    InternalServerErrorException,\n    Logger,\n    NotFoundException\n} from '@nestjs/common';\nimport { CreateItemDto } from './dtos/create-item.dto';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ItemEntity } from './entities/item.entity';\nimport { Repository } from 'typeorm';\nimport { UpdateItemDto } from './dtos/update-item.dto';\nimport { readFileSync } from 'fs';\nimport { DateItemReportInterface, ItemReportInterface } from 'src/interfaces/interfaces';\nimport { omitObjectKeys } from 'src/utils/omit.util';\n\n@Injectable()\nexport class ItemService {\n    private readonly logger = new Logger('ItmeService');\n\n    constructor( @InjectRepository(ItemEntity) private readonly itemRepository: Repository ) {}\n\n    /**\n     * This function use to create an Item in the database.\n     * @param {CreateItemDto} createItemDto The Item information.\n     * @param {UserEntity} user The user how call this function.\n     * @returns {Promise} The Item after the creation.\n     * ### Exceptions:\n     * - HttpException - Item is already exists in the database.\n     */\n    async createItem( createItemDto: CreateItemDto, user:UserEntity ): Promise {\n        const item = this.itemRepository.create({\n                    ...createItemDto,\n                    sellAllItemsPrice: createItemDto.numberOfItems * createItemDto.sellPillPrice,\n                    buyAllItemsPrice: createItemDto.numberOfItems * createItemDto.buyPillPrice,\n                    user\n                });\n        try {\n            await item.save();\n            this.logger.log(`The ${user.accountType} '${user.username}' Created the item '${item.name}'.`);\n            delete item.user;\n            return item;\n        } catch (error) {\n            if (error.code === '23505') throw new HttpException(`The item with the id ${createItemDto.itemId} already exists.`, HttpStatus.BAD_REQUEST);\n            throw new InternalServerErrorException();\n        }\n    }\n\n    /**\n     * This function use to delete the item from the database.\n     * @param {number} itemId The ID of the item. \n     * @param {UserEntity} user The user how call this function.\n     * @returns {Promise} The ok message.\n     * ### Exceptions:\n     * - NotFoundException - The item is not in the database.\n     */\n    async deleteItem( itemId: number, user: UserEntity ): Promise {\n        const result = await this.itemRepository.delete({ itemId })\n        if (result.affected > 0 ) {\n            this.logger.log(`The ${user.accountType} '${user.username}' deleted the item with id '${itemId}'.`);\n            return { message: `The item with id '${itemId}' has been deleted.` }\n        }\n        throw new NotFoundException(`The itme with the id '${itemId}' not found!` );\n    }\n\n    /**\n     * This function use to update item information. \\\n     * Update fields are: `itemId`, `name`, `sellPillPrice`, `buyPillPrice`, \\\n     * `numberOfItems`, `companyName`, `productionDate`, `expiryDate`\n     * @param {number} itemId The item ID.\n     * @param {UpdateItemDto} updateItemDto The update fields.\n     * @param {UserEntity} user The user how call this function.\n     * @returns {Promise} The Item after the update. \n     * ### Exceptions:\n     * - NotFoundException - The Item is not in the database.\n     * - HttpException - Invalid update fields in the updateItemDto\n     */\n    async updateItem( itemId: number, updateItemDto: UpdateItemDto, user: UserEntity ): Promise {\n        const item = await this.itemRepository.findOne( { where: {itemId} } );\n        if (!item) throw new NotFoundException(`Item with id '${itemId}' not found!`);\n        const updateItmeDtoKeys: string[] = [\n            'itemId',\n            'name',\n            'sellPillPrice',\n            'buyPillPrice',\n            'numberOfItems',\n            'companyName',\n            'productionDate',\n            'expiryDate'\n        ];\n        const isValidUpdateDto: boolean = Object.keys(updateItemDto).every( (key) => updateItmeDtoKeys.includes(key) );\n        if (!isValidUpdateDto) throw new HttpException( 'Invalid update fields in the body!', HttpStatus.BAD_REQUEST);\n\n        const numberOfItems: number = updateItemDto.numberOfItems || item.numberOfItems ;\n        const buyPillPrice: number = updateItemDto.buyPillPrice || item.buyPillPrice; \n        const sellPillPrice: number = updateItemDto.sellPillPrice || item.sellPillPrice; \n        item.buyAllItemsPrice = buyPillPrice * numberOfItems ;\n        item.sellAllItemsPrice = sellPillPrice * numberOfItems ;\n\n        Object.assign(item, updateItemDto) ;\n        await this.itemRepository.save(item);\n        this.logger.log(`The ${user.accountType} '${user.username}' update the item with id '${itemId}'.`);\n        delete item.user ;\n        return item;\n    }\n\n    /**\n     * This function use to update the number of items in the database\\\n     * when they sell or buy new items.\n     * @param {number} itemId The item ID.\n     * @param {number} numberOfItems The number of items.\n     * @param {boolean} sub If it is sell or buy.\n     * @param {UserEntity} user The user how call this function.\n     * @returns {Promise} The ok message.\n     * ### Exceptions:\n     * - NotFoundException - The Item is not in the database.\n     */\n    async updateNumberOfItems ( itemId: number, numberOfItems: number, sub: boolean, user: UserEntity ): Promise {\n        const item = await this.itemRepository.findOne( {where: { itemId  } } );\n        if (!item) throw new NotFoundException(`The item with the id '${itemId}' Not Found!`);\n\n        if ( sub ) item.numberOfItems -= numberOfItems;\n        else item.numberOfItems += numberOfItems;\n\n        if ( sub && item.numberOfItems } The report.\n     */\n    async getItemsReport( user: UserEntity ): Promise {\n        const sql: string = readFileSync( './src/items-report.sql', 'utf-8' );\n        const report: DateItemReportInterface[] = (await this.itemRepository.query(sql)) as DateItemReportInterface[] ;\n        this.logger.log(`The ${user.accountType} '${user.username}' Create Item Report.`);\n        return {\n            report: report[0],\n            user: omitObjectKeys( user, ['hashPassword','salt', 'createdAt'] ) as UserEntity,\n            createAt: new Date()\n        } as ItemReportInterface;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auht.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                This module use to create a Auth Guard for the JWT.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n/**\n * This module use to create a Auth Guard for the JWT.\n * @extends AuthGuard As JWT Guard.\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayloadInterface.html":{"url":"interfaces/JwtPayloadInterface.html","title":"interface - JwtPayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for the JWT payload.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                This Module use to authenticate the request by the JWT.\n\n            \n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtPayloadInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:33\n                        \n                    \n\n\n            \n                \n                        This function use to check if the user is in the database.\nExceptions:\n\nUnauthorizedException - If the JWT token invalid.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayloadInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user information after the authenticate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user entity to by injected in the request body.\nExceptions:\n\nUnauthorizedException - If the JWT token invalid.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JwtPayloadInterface } from \"src/interfaces/interfaces\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"../entities/user.entity\";\nimport { Repository } from \"typeorm\";\nimport * as config from 'config';\n\nconst jwt = config.get('jwt')\n\n/**\n * This Module use to authenticate the request by the JWT.\n * @extends PassportStrategy As a JWT strategy.\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(@InjectRepository(UserEntity) private readonly userRepository: Repository ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: jwt.ignoreExpiration,\n            secretOrKey: jwt.secretOrKey,\n        })\n    }\n\n    /**\n     * This function use to check if the user is in the database.\n     * @param payload The user information after the authenticate.\n     * @returns The user entity to by injected in the request body.\n     * ### Exceptions: \n     * - UnauthorizedException - If the JWT token invalid.\n     */\n    async validate( payload: JwtPayloadInterface ): Promise {\n        const {username} = payload ;\n        const user = await this.userRepository.findOne( {where: {username} } ) ;\n        if (!user) throw new UnauthorizedException() ;\n        return user;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the password.', example: 'Mohaned2023+', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the username.', example: 'mohaned', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n    @ApiProperty({\n        description: 'This is the username.',\n        example: 'mohaned',\n        required: true\n    })\n    @IsString()\n    @IsNotEmpty()\n    username: string;\n    \n    @ApiProperty({\n        description: 'This is the password.',\n        example: 'Mohaned2023+',\n        required: true\n    })\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReportController.html":{"url":"controllers/ReportController.html","title":"controller - ReportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/report/report.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                report\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getInvoicesReport\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getItemsReport\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getReturnedInvoicesReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getInvoicesReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInvoicesReport(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(invoiceDoc.operation)@ApiOkResponse(undefined.success)@ApiForbiddenResponse(undefined.forbidden)@ApiUnauthorizedResponse(undefined.unauthorized)@Get('invoices')\n                \n            \n\n                    \n                        \n                            Defined in src/report/report.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getItemsReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    getItemsReport(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(itemDoc.operation)@ApiOkResponse(undefined.success)@ApiForbiddenResponse(undefined.forbidden)@ApiUnauthorizedResponse(undefined.unauthorized)@Get('items')\n                \n            \n\n                    \n                        \n                            Defined in src/report/report.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        getReturnedInvoicesReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReturnedInvoicesReport(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(returnedInvoiceDoc.operation)@ApiOkResponse(undefined.success)@ApiForbiddenResponse(undefined.forbidden)@ApiUnauthorizedResponse(undefined.unauthorized)@Get('retruned-invoices')\n                \n            \n\n                    \n                        \n                            Defined in src/report/report.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auht.guard';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { accountType } from 'src/auth/enums/account-type.enum';\nimport { GetUser } from 'src/auth/decorators/jwt.decorator';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { ItemService } from 'src/item/item.service';\nimport { InvoiceService } from 'src/invoice/invoice.service';\nimport { ReturnedInvoiceService } from 'src/returned-invoice/returned-invoice.service';\nimport { \n    ApiBearerAuth,\n    ApiForbiddenResponse,\n    ApiOkResponse,\n    ApiOperation,\n    ApiTags,\n    ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { invoiceDoc, itemDoc, returnedInvoiceDoc } from './swagger/controller.swagger';\n\n@ApiTags('Report')\n@ApiBearerAuth()\n@UseGuards( JwtAuthGuard, RolesGuard )\n@Roles(accountType.ADMIN)\n@Controller('report')\nexport class ReportController {\n    constructor( \n        private readonly itemService: ItemService,\n        private readonly invoiceService: InvoiceService,\n        private readonly returnedInvoiceService: ReturnedInvoiceService\n    ) {}\n\n    @ApiOperation(itemDoc.operation)\n    @ApiOkResponse(itemDoc.responses.success)\n    @ApiForbiddenResponse(itemDoc.responses.forbidden)\n    @ApiUnauthorizedResponse(itemDoc.responses.unauthorized)\n    @Get('items')\n    getItemsReport( @GetUser() user: UserEntity ) {\n        return this.itemService.getItemsReport( user ) ;\n    }\n\n    @ApiOperation(invoiceDoc.operation)\n    @ApiOkResponse(invoiceDoc.responses.success)\n    @ApiForbiddenResponse(invoiceDoc.responses.forbidden)\n    @ApiUnauthorizedResponse(invoiceDoc.responses.unauthorized)\n    @Get('invoices')\n    getInvoicesReport( @GetUser() user: UserEntity ) {\n        return this.invoiceService.getInvoiceReport( user ) ;\n    }\n\n    @ApiOperation(returnedInvoiceDoc.operation)\n    @ApiOkResponse(returnedInvoiceDoc.responses.success)\n    @ApiForbiddenResponse(returnedInvoiceDoc.responses.forbidden)\n    @ApiUnauthorizedResponse(returnedInvoiceDoc.responses.unauthorized)\n    @Get('retruned-invoices')\n    getReturnedInvoicesReport( @GetUser() user: UserEntity ) {\n        return this.returnedInvoiceService.getReturnedInvoiceReport( user );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportModule.html":{"url":"modules/ReportModule.html","title":"module - ReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_imports\n\n\n\n\nInvoiceModule\n\nInvoiceModule\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nInvoiceModule->ReportModule\n\n\n\n\n\nItemModule\n\nItemModule\n\nReportModule -->\n\nItemModule->ReportModule\n\n\n\n\n\nReturnedInvoiceModule\n\nReturnedInvoiceModule\n\nReportModule -->\n\nReturnedInvoiceModule->ReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/report/report.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This module use for the reports.\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ReportController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InvoiceModule\n                        \n                        \n                            ItemModule\n                        \n                        \n                            ReturnedInvoiceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReportController } from './report.controller';\nimport { ItemModule } from 'src/item/item.module';\nimport { InvoiceModule } from 'src/invoice/invoice.module';\nimport { ReturnedInvoiceModule } from 'src/returned-invoice/returned-invoice.module';\n\n/**\n * This module use for the reports.\n */\n@Module({\n  imports: [ ItemModule, InvoiceModule, ReturnedInvoiceModule],\n  controllers: [ReportController],\n})\nexport class ReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RetrunedInvoiceController.html":{"url":"controllers/RetrunedInvoiceController.html","title":"controller - RetrunedInvoiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RetrunedInvoiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/returned-invoice/returned-invoice.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                returned-invoice\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                createRInvoice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        createRInvoice\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRInvoice(crid: CreateReturnedInvoiceDto[], invoiceId: number, user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation(createDoc.operation)@ApiOkResponse(undefined.success)@ApiBadRequestResponse(undefined.badRequest)@ApiNotFoundResponse(undefined.notFound)@ApiForbiddenResponse(undefined.forbidden)@ApiUnauthorizedResponse(undefined.unauthorized)@ApiBody({type: undefined, description: 'Array of Items to be retruned.'})@UseGuards(RolesGuard)@Roles(accountType.ACCOUNTANT)@Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/returned-invoice/returned-invoice.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                crid\n                                            \n                                                            CreateReturnedInvoiceDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                invoiceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { \n    Body, \n    Controller, \n    ParseArrayPipe,\n    ParseIntPipe,\n    Post,\n    Query,\n    UseGuards \n} from '@nestjs/common';\nimport { ReturnedInvoiceService } from './returned-invoice.service';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auht.guard';\nimport { CreateReturnedInvoiceDto } from './dtos/create-returned-invoice.dto';\nimport { GetUser } from 'src/auth/decorators/jwt.decorator';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { Roles } from 'src/auth/decorators/roles.decorator';\nimport { accountType } from 'src/auth/enums/account-type.enum';\nimport { ReturnedInvoiceEntity } from './entities/returned-invoice.entity';\nimport { \n    ApiBadRequestResponse,\n    ApiBearerAuth,\n    ApiBody,\n    ApiForbiddenResponse,\n    ApiNotFoundResponse,\n    ApiOkResponse,\n    ApiOperation,\n    ApiTags,\n    ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { createDoc } from './swagger/controller.swagger';\n\n@ApiTags('Returned Invoice')\n@ApiBearerAuth()\n@UseGuards( JwtAuthGuard )\n@Controller('returned-invoice')\nexport class RetrunedInvoiceController {\n    \n    constructor( private readonly returnedInvoiceService: ReturnedInvoiceService ) {}\n    \n    @ApiOperation(createDoc.operation)\n    @ApiOkResponse(createDoc.responses.success)\n    @ApiBadRequestResponse(createDoc.responses.badRequest)\n    @ApiNotFoundResponse(createDoc.responses.notFound)\n    @ApiForbiddenResponse(createDoc.responses.forbidden)\n    @ApiUnauthorizedResponse(createDoc.responses.unauthorized)\n    @ApiBody({\n        type: [CreateReturnedInvoiceDto],\n        description: 'Array of Items to be retruned.'\n    })\n    @UseGuards( RolesGuard )\n    @Roles( accountType.ACCOUNTANT )\n    @Post('create')\n    createRInvoice( \n        @Body(new ParseArrayPipe({items: CreateReturnedInvoiceDto}) ) crid: CreateReturnedInvoiceDto[],\n        @Query('invoiceId', ParseIntPipe) invoiceId: number,\n        @GetUser() user: UserEntity\n    ): Promise  {\n        return this.returnedInvoiceService.create( invoiceId, crid, user );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReturnedInvoiceEntity.html":{"url":"entities/ReturnedInvoiceEntity.html","title":"entity - ReturnedInvoiceEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReturnedInvoiceEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/returned-invoice/entities/returned-invoice.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                addAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                totalPrice\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        addAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Invoice Date.', example: undefined})@CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/entities/returned-invoice.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/entities/returned-invoice.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ItemInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The items.', example: undefined})@Column('json')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/entities/returned-invoice.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Total Price.', example: 30.5})@Column('float')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/entities/returned-invoice.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.returnedInvoices, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/entities/returned-invoice.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/entities/returned-invoice.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\nimport { ItemInterface } from \"src/interfaces/interfaces\";\nimport { BaseEntity, Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n\n@Entity( { name: 'returned_invoices' } ) \nexport class ReturnedInvoiceEntity extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty({\n        description: 'The items.',\n        example: [{\n            itemId: 1,\n            name: \"X Chocolate\",\n            numberOfItems: 2,\n            price: 30.5,\n        }]\n    })\n    @Column('json')\n    items: ItemInterface[] = [];\n\n    @ApiProperty({\n        description: 'The Total Price.',\n        example: 30.5\n    })\n    @Column('float')\n    totalPrice: number = 0;\n\n    @ApiProperty({\n        description: 'The Invoice Date.',\n        example: new Date()\n    })\n    @CreateDateColumn( { type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' } )\n    addAt: Date;\n\n    @ManyToOne( () => UserEntity, user => user.returnedInvoices, {eager: false} )\n    user: UserEntity;\n\n    @Column()\n    userId: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReturnedInvoiceModule.html":{"url":"modules/ReturnedInvoiceModule.html","title":"module - ReturnedInvoiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ReturnedInvoiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReturnedInvoiceModule\n\n\n\ncluster_ReturnedInvoiceModule_imports\n\n\n\ncluster_ReturnedInvoiceModule_providers\n\n\n\ncluster_ReturnedInvoiceModule_exports\n\n\n\n\nInvoiceModule\n\nInvoiceModule\n\n\n\nReturnedInvoiceModule\n\nReturnedInvoiceModule\n\nReturnedInvoiceModule -->\n\nInvoiceModule->ReturnedInvoiceModule\n\n\n\n\n\nItemModule\n\nItemModule\n\nReturnedInvoiceModule -->\n\nItemModule->ReturnedInvoiceModule\n\n\n\n\n\nReturnedInvoiceService \n\nReturnedInvoiceService \n\nReturnedInvoiceService  -->\n\nReturnedInvoiceModule->ReturnedInvoiceService \n\n\n\n\n\nReturnedInvoiceService\n\nReturnedInvoiceService\n\nReturnedInvoiceModule -->\n\nReturnedInvoiceService->ReturnedInvoiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/returned-invoice/returned-invoice.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module use for returned invoices.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReturnedInvoiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RetrunedInvoiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InvoiceModule\n                        \n                        \n                            ItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReturnedInvoiceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RetrunedInvoiceController } from './returned-invoice.controller';\nimport { ReturnedInvoiceService } from './returned-invoice.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ReturnedInvoiceEntity } from './entities/returned-invoice.entity';\nimport { InvoiceModule } from 'src/invoice/invoice.module';\nimport { ItemModule } from 'src/item/item.module';\n\n/**\n * This Module use for returned invoices.\n */\n@Module({\n  imports: [ \n    TypeOrmModule.forFeature([ReturnedInvoiceEntity]),\n    InvoiceModule,\n    ItemModule\n  ],\n  controllers: [RetrunedInvoiceController],\n  providers: [ ReturnedInvoiceService ],\n  exports: [ ReturnedInvoiceService ]\n})\nexport class ReturnedInvoiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReturnedInvoiceService.html":{"url":"injectables/ReturnedInvoiceService.html","title":"injectable - ReturnedInvoiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReturnedInvoiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/returned-invoice/returned-invoice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getReturnedInvoiceReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rInvoiceRepository: Repository, invoiceService: InvoiceService, itemService: ItemService)\n                    \n                \n                        \n                            \n                                Defined in src/returned-invoice/returned-invoice.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rInvoiceRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoiceService\n                                                  \n                                                        \n                                                                        InvoiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemService\n                                                  \n                                                        \n                                                                        ItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(invoiceId: number, crid: CreateReturnedInvoiceDto[], user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/returned-invoice/returned-invoice.service.ts:45\n                        \n                    \n\n\n            \n                \n                        This function use to create returned invoice in the database.\nExceptions:\n\nHttpException - No items or number of items is greater than number of items in the invoice.\nNotFoundException - Item not found in the database.\nHttpException - The number of pills greater than The number of pills in the invoice.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                invoiceId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the invoice.\n\n                                            \n                                        \n                                        \n                                                crid\n                                            \n                                                            CreateReturnedInvoiceDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The returned invoice information.\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The returend invoice.\nExceptions:\n\nHttpException - No items or number of items is greater than number of items in the invoice.\nNotFoundException - Item not found in the database.\nHttpException - The number of pills greater than The number of pills in the invoice.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getReturnedInvoiceReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReturnedInvoiceReport(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/returned-invoice/returned-invoice.service.ts:87\n                        \n                    \n\n\n            \n                \n                        This function use to get the report for the retruned invoice.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user who call this function.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The invoice report.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RetrunedInvoiceService')\n                    \n                \n                    \n                        \n                                Defined in src/returned-invoice/returned-invoice.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { \n    HttpException,\n    HttpStatus,\n    Injectable,\n    Logger,\n    NotFoundException \n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ReturnedInvoiceEntity } from './entities/returned-invoice.entity';\nimport { Repository } from 'typeorm';\nimport { CreateReturnedInvoiceDto } from './dtos/create-returned-invoice.dto';\nimport { InvoiceService } from 'src/invoice/invoice.service';\nimport { UserEntity } from 'src/auth/entities/user.entity';\nimport { \n    DataInvoiceReportInterface,\n    InvoiceReportInterface,\n    ItemInterface\n} from 'src/interfaces/interfaces';\nimport { omitObjectKeys } from 'src/utils/omit.util';\nimport { ItemService } from 'src/item/item.service';\nimport { readFileSync } from 'fs';\n\n@Injectable()\nexport class ReturnedInvoiceService {\n\n    constructor( \n        @InjectRepository(ReturnedInvoiceEntity) private readonly rInvoiceRepository: Repository,\n        private readonly invoiceService: InvoiceService,\n        private readonly itemService: ItemService\n    ) {}\n\n    private readonly logger = new Logger('RetrunedInvoiceService');\n\n    /**\n     * This function use to create returned invoice in the database.\n     * @param {number} invoiceId The ID of the invoice.\n     * @param {CreateReturnedInvoiceDto} crid The returned invoice information.\n     * @param {UserEntity} user The user who call this function.\n     * @returns {ReturnedInvoiceEntity} The returend invoice.\n     * ### Exceptions: \n     * - HttpException - No items or number of items is greater than number of items in the invoice.\n     * - NotFoundException - Item not found in the database.\n     * - HttpException - The number of pills greater than The number of pills in the invoice.\n     */\n    async create( invoiceId: number, crid: CreateReturnedInvoiceDto[], user: UserEntity): Promise {\n        if (crid.length === 0) throw new HttpException('There is no items in the body!', HttpStatus.BAD_REQUEST);\n        const invoice = await this.invoiceService.findInvoice( invoiceId, user );\n        if ( crid.length > invoice.items.length ) throw new HttpException(`The number of items is greater than the number of items in the invoice with id '${invoiceId}'!`, HttpStatus.BAD_REQUEST);\n        let itemError: CreateReturnedInvoiceDto = undefined;\n        let notFoundItemId: number = undefined;\n        let returnedInvoice: ReturnedInvoiceEntity = this.rInvoiceRepository.create();\n        crid.forEach( ( item ) => {\n            const i: number = invoice.items.findIndex( ( value: ItemInterface ) => value.itemId ===  item.itemId );\n            if ( i  {\n        const sql: string = readFileSync( './sql/retruned-invoices-report.sql', 'utf-8' );\n        const report: DataInvoiceReportInterface[] = ( await this.rInvoiceRepository.query( sql ) ) as DataInvoiceReportInterface[] ;\n        this.logger.log(`The ${user.accountType} '${user.username}' Create Returned Invoices Report.`);\n        return {\n            report: report[0],\n            user: omitObjectKeys( user, ['hashPassword','salt', 'createdAt'] ) as UserEntity,\n            createAt: new Date()\n        } as InvoiceReportInterface;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    This module use to authoriz the user role.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { Roles } from \"../decorators/roles.decorator\";\n\n/**\n * This module use to authoriz the user role.\n * @extends CanActivate\n */\nexport class RolesGuard implements CanActivate {\n    constructor(  private reflector: Reflector = new Reflector() ) {}\n\n    canActivate(context: ExecutionContext): boolean {\n        const roles = this.reflector.get(Roles, context.getHandler());\n        if (!roles) return true;\n        const request = context.switchToHttp().getRequest();\n        const user = request.user;\n        return roles.includes(user.accountType) ;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateInvoiceIterface.html":{"url":"interfaces/UpdateInvoiceIterface.html","title":"interface - UpdateInvoiceIterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateInvoiceIterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface use for updating the invoce.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         ItemInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ItemInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateItemDto.html":{"url":"classes/UpdateItemDto.html","title":"class - UpdateItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item/dtos/update-item.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateItemDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateItemDto } from \"./create-item.dto\";\n\nexport class UpdateItemDto extends PartialType(CreateItemDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNumberOfItems.html":{"url":"classes/UpdateNumberOfItems.html","title":"class - UpdateNumberOfItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNumberOfItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/item/dtos/update-number-items.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                numberOfItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/item/dtos/update-number-items.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from \"class-validator\";\n\n\nexport class UpdateNumberOfItems {\n    @IsNumber()\n    @IsNotEmpty()\n    numberOfItems: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/update-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This DTO use for update user information.\n\n            \n\n            \n                Extends\n            \n            \n                            PartialType(CreataUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreataUserDto } from \"./create-user.dto\";\nimport { PartialType } from \"@nestjs/swagger\";\n\n/**\n * This DTO use for update user information.\n * @extends PartialType From Swagger to make all CreateUserDto fields optionals and to update the Swagger Doc.  \n */\nexport class UpdateUserDto extends PartialType(CreataUserDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accountType\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                displayName\n                            \n                            \n                                    \n                                errors\n                            \n                            \n                                    \n                                hashPassword\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                invoices\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                returnedInvoices\n                            \n                            \n                                    \n                                salt\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         accountType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the Role of the account.', example: 'ACCOUNTANT', enum: accountType})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This the date of creating the user.', example: undefined})@CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the display name.', example: 'Mohaned Sherhan (Mr.x)'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ErrorEntitiy[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, error => error.user, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        invoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoiceEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, invoice => invoice.user, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ItemEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.user, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        returnedInvoices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReturnedInvoiceEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, rInvoice => rInvoice.user, {eager: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This the username of the user.', example: 'mohaned'})@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, CreateDateColumn, BaseEntity, OneToMany } from \"typeorm\";\nimport { accountType } from \"../enums/account-type.enum\";\nimport { ItemEntity } from \"src/item/entities/item.entity\";\nimport { InvoiceEntity } from \"src/invoice/entities/invoice.entity\";\nimport { ReturnedInvoiceEntity } from \"src/returned-invoice/entities/returned-invoice.entity\";\nimport { ErrorEntitiy } from \"src/error/entities/error.entity\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\n@Entity({ name: 'users' })\nexport class UserEntity extends BaseEntity  {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty({\n        description: 'This the username of the user.',\n        example: 'mohaned',\n    })\n    @Column({unique: true})\n    username: string;\n    \n    @ApiProperty({\n        description: 'This is the display name.',\n        example: 'Mohaned Sherhan (Mr.x)'\n    })\n    @Column()\n    displayName: string;\n\n    @Column()\n    salt: string;\n\n    @Column() \n    hashPassword: string;\n\n    @ApiProperty({\n        description: 'This is the Role of the account.',\n        example: 'ACCOUNTANT',\n        enum: accountType\n    })\n    @Column()\n    accountType: accountType;\n\n    @ApiProperty({\n        description: 'This the date of creating the user.',\n        example: new Date()\n    })\n    @CreateDateColumn({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n    createdAt: Date;\n\n    @OneToMany( () => ItemEntity, item => item.user, {eager: false} ) \n    items: ItemEntity[];\n\n    @OneToMany( () => InvoiceEntity, invoice => invoice.user, {eager: false} )\n    invoices: InvoiceEntity[];\n\n    @OneToMany( () => ReturnedInvoiceEntity, rInvoice => rInvoice.user, {eager: false})\n    returnedInvoices: ReturnedInvoiceEntity[];\n\n    @OneToMany( () => ErrorEntitiy, error => error.user, {eager: false})\n    errors: ErrorEntitiy[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/auth/decorators/jwt.decorator.ts\n            \n            variable\n            GetUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/create-user.dto.ts\n            \n            class\n            CreataUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auht.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            variable\n            jwt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/swagger/controller.swagger.ts\n            \n            variable\n            deleteDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/swagger/controller.swagger.ts\n            \n            variable\n            loginDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/swagger/controller.swagger.ts\n            \n            variable\n            registerDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/swagger/controller.swagger.ts\n            \n            variable\n            updateDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            db\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/entities/error.entity.ts\n            \n            entity\n            ErrorEntitiy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            DataInvoiceReportInterface\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            DateItemReportInterface\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            InvoiceReportInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            ItemInterface\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            ItemReportInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            JwtPayloadInterface\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            swaggerInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interfaces/interfaces.ts\n            \n            interface\n            UpdateInvoiceIterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/invoice/dtos/create-invoice.dto.ts\n            \n            class\n            CreateInvoiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/invoice/entities/invoice.entity.ts\n            \n            entity\n            InvoiceEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/invoice/invoice.controller.ts\n            \n            controller\n            InvoiceController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/invoice/invoice.service.ts\n            \n            injectable\n            InvoiceService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/invoice/swagger/controller.swagger.ts\n            \n            variable\n            createDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/invoice/swagger/controller.swagger.ts\n            \n            variable\n            deleteDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/invoice/swagger/controller.swagger.ts\n            \n            variable\n            findDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/item/dtos/create-item.dto.ts\n            \n            class\n            CreateItemDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/item/dtos/update-item.dto.ts\n            \n            class\n            UpdateItemDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/item/dtos/update-number-items.dto.ts\n            \n            class\n            UpdateNumberOfItems\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/item/entities/item.entity.ts\n            \n            entity\n            ItemEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/item/item.controller.ts\n            \n            controller\n            ItemController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/item/item.service.ts\n            \n            injectable\n            ItemService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/item/swagger/controller.swagger.ts\n            \n            variable\n            createDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/item/swagger/controller.swagger.ts\n            \n            variable\n            deleteDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/item/swagger/controller.swagger.ts\n            \n            variable\n            updateDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            server\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/report/report.controller.ts\n            \n            controller\n            ReportController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/report/swagger/controller.swagger.ts\n            \n            variable\n            invoiceDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/report/swagger/controller.swagger.ts\n            \n            variable\n            itemDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/report/swagger/controller.swagger.ts\n            \n            variable\n            returnedInvoiceDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/returned-invoice/dtos/create-returned-invoice.dto.ts\n            \n            class\n            CreateReturnedInvoiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/returned-invoice/entities/returned-invoice.entity.ts\n            \n            entity\n            ReturnedInvoiceEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/returned-invoice/returned-invoice.controller.ts\n            \n            controller\n            RetrunedInvoiceController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/returned-invoice/returned-invoice.service.ts\n            \n            injectable\n            ReturnedInvoiceService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/returned-invoice/swagger/controller.swagger.ts\n            \n            variable\n            createDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/omit.util.ts\n            \n            function\n            omitObjectKeys\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            config : ^3.3.12\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.12.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            accountType   (src/.../account-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/enums/account-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        accountType\n                    \n                \n                    \n                        \n                            The Role of the users.\n\n                        \n                    \n                        \n                            \n                                 ACCOUNTANT\n                            \n                        \n                        \n                            \n                                Value : ACCOUNTANT\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            omitObjectKeys   (src/.../omit.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/omit.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        omitObjectKeys\n                        \n                    \n                \n            \n            \n                \nomitObjectKeys(obj: T, keys)\n                \n            \n\n\n\n\n            \n                \n                        This function use to omit object keys.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The object.\n\n                                            \n                                        \n                                        \n                                                keys\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of keys to omits.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Omit\n\n                        \n                            \n                                New object with new keys.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAbout the project:\nThis project aims to consolidate Nestjs information in my mind and is also a practical exercise for most of the concepts in the backend world. I know that this project is only a very small part of the backend world, but it is a strong start as well.\nThis project is a simple project to simulate a small part of a supermarket system.\nFeatures:\n\nAuthentication and Authorization by JWT tokens.\nRoles Protection.\nCreate Reports.\nPassword Hashing.\nSwagger Documentation.\nStrong Validation.For more information run:\n\nExample :$ npm run docFor those who read this simple project:I hope that I have benefited you in some way and I hope that I have conveyed to you my modest programming ability through this simple project.\nSetting Up:\nExample :$ git clone https://github.com/Mohaned2023/supermarket-backend.git\n$ cd supermarket-backend\n$ npm installSet the config files:\n\nGo to config to set the config files.\n\nRunning the app\nExample :$ npm run build\n$ npm run start:prodApp Docs:\nExample :# Building the Document.\n$ npm run doc:build\n\n# Running the Document.\n$ npm run doc\n\nAuther: Mohaned Sherhan (Mr.x)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvoiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReturnedInvoiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_exports\n\n\n\ncluster_ErrorModule_providers\n\n\n\ncluster_InvoiceModule\n\n\n\ncluster_InvoiceModule_exports\n\n\n\ncluster_InvoiceModule_providers\n\n\n\ncluster_ItemModule\n\n\n\ncluster_ItemModule_exports\n\n\n\ncluster_ItemModule_providers\n\n\n\ncluster_ReturnedInvoiceModule\n\n\n\ncluster_ReturnedInvoiceModule_exports\n\n\n\ncluster_ReturnedInvoiceModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtAuthGuard \n\nJwtAuthGuard \n\nJwtAuthGuard  -->\n\nAuthModule->JwtAuthGuard \n\n\n\n\n\nRolesGuard \n\nRolesGuard \n\nRolesGuard  -->\n\nAuthModule->RolesGuard \n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nInvoiceModule\n\nInvoiceModule\n\nInvoiceModule -->\n\nErrorModule->InvoiceModule\n\n\n\nAppModule -->\n\nErrorModule->AppModule\n\n\n\n\n\nErrorService \n\nErrorService \n\nErrorService  -->\n\nErrorModule->ErrorService \n\n\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nInvoiceModule->ReportModule\n\n\n\n\n\nReturnedInvoiceModule\n\nReturnedInvoiceModule\n\nReturnedInvoiceModule -->\n\nInvoiceModule->ReturnedInvoiceModule\n\n\n\nAppModule -->\n\nInvoiceModule->AppModule\n\n\n\n\n\nInvoiceService \n\nInvoiceService \n\nInvoiceService  -->\n\nInvoiceModule->InvoiceService \n\n\n\n\n\nItemModule\n\nItemModule\n\nInvoiceModule -->\n\nItemModule->InvoiceModule\n\n\n\nReportModule -->\n\nItemModule->ReportModule\n\n\n\nReturnedInvoiceModule -->\n\nItemModule->ReturnedInvoiceModule\n\n\n\nAppModule -->\n\nItemModule->AppModule\n\n\n\n\n\nItemService \n\nItemService \n\nItemService  -->\n\nItemModule->ItemService \n\n\n\nAppModule -->\n\nReportModule->AppModule\n\n\n\nReportModule -->\n\nReturnedInvoiceModule->ReportModule\n\n\n\nAppModule -->\n\nReturnedInvoiceModule->AppModule\n\n\n\n\n\nReturnedInvoiceService \n\nReturnedInvoiceService \n\nReturnedInvoiceService  -->\n\nReturnedInvoiceModule->ReturnedInvoiceService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nErrorService\n\nErrorService\n\nErrorModule -->\n\nErrorService->ErrorModule\n\n\n\n\n\nInvoiceService\n\nInvoiceService\n\nInvoiceModule -->\n\nInvoiceService->InvoiceModule\n\n\n\n\n\nItemService\n\nItemService\n\nItemModule -->\n\nItemService->ItemModule\n\n\n\n\n\nReturnedInvoiceService\n\nReturnedInvoiceService\n\nReturnedInvoiceModule -->\n\nReturnedInvoiceService->ReturnedInvoiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : It is a simple and easy backend system, build for the purpose of learning backend development using Nestjs.\n        \n            License : UNLICENSED\n        \n            Author : Mohaned Sherhan (Mr.x)\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/swaggerInterface.html":{"url":"interfaces/swaggerInterface.html","title":"interface - swaggerInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  swaggerInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/interfaces.ts\n        \n\n\n            \n                Description\n            \n            \n                Swagger Interface for Doc the Controllers.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            operation\n                                        \n                                \n                                \n                                        \n                                            responses\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:     ApiOperationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiOperationOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responses:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiOperationOptions, ApiResponseOptions } from \"@nestjs/swagger\";\nimport { UserEntity } from \"src/auth/entities/user.entity\";\n\n/**\n * This interface use for the JWT payload.\n */\nexport interface JwtPayloadInterface {\n    username: string;\n}\n\n/**\n * This interface use for updating the invoce.\n */\nexport interface UpdateInvoiceIterface {\n    items: ItemInterface[],\n    totalPrice: number\n}\n\n/**\n * This interface use for return the invoice with items.\n */\nexport interface ItemInterface {\n    itemId: number;\n    name: string;\n    numberOfItems: number;\n    price: number;\n}\n\n/**\n * This interface use for add the invoice to the report.\n */\nexport interface DataInvoiceReportInterface {\n    totalNumberOfAllPills: number,\n    totalNumberOfAllItems: number,\n    totalNumberOfAllInvoices: number,\n    avgOfAllInvoicesPrice: number,\n    totalPriceOfAllInvoices: number\n}\n\n/**\n * This interface use for creating the invoice report.\n */\nexport interface InvoiceReportInterface {\n    report: DataInvoiceReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * This interface use for add the item to the report.\n */\nexport interface DateItemReportInterface {\n    totalNumberOfItem: number,\n    avgSellPillPrice: number,\n    avgBuyPillPrice: number,\n    totalNumberOfAllItems: number,\n    totalSellPrice: number,\n    totalBuyPrice: number,\n    avgProductionDate: Date,\n    avgExpiryDate: Date\n}\n\n/**\n * This interface use for creating the item report.\n */\nexport interface ItemReportInterface {\n    report: DateItemReportInterface,\n    user: UserEntity,\n    createAt: Date\n}\n\n/**\n * Swagger Interface for Doc the Controllers.\n */\nexport interface swaggerInterface {\n    operation: ApiOperationOptions;\n    responses: {\n        success: ApiResponseOptions ,\n        badRequest?: ApiResponseOptions,\n        unauthorized?: ApiResponseOptions,\n        forbidden?: ApiResponseOptions,\n        notFound?: ApiResponseOptions,\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            createDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            createDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            db   (src/.../typeorm.config.ts)\n                        \n                        \n                            deleteDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            deleteDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            deleteDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            findDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            GetUser   (src/.../jwt.decorator.ts)\n                        \n                        \n                            invoiceDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            itemDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            jwt   (src/.../jwt.config.ts)\n                        \n                        \n                            jwt   (src/.../jwt.strategy.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            loginDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            registerDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            returnedInvoiceDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            server   (src/.../main.ts)\n                        \n                        \n                            typeormConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            updateDoc   (src/.../controller.swagger.ts)\n                        \n                        \n                            updateDoc   (src/.../controller.swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/invoice/swagger/controller.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Creating Invoice',\n        description: 'Creating invoice in the database. - `Role: Accountant`'\n    },\n    responses: {\n        success: {\n            description: 'The invoice created successfully.',\n            type: InvoiceEntity\n        },\n        notFound: {\n            description: 'One of the items is not found in the database.'\n        },\n        badRequest: {\n            description: 'There no loger enough items in the database.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to create the invoice.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Deleting Invoice.',\n        description: 'Deleting invoice from the database. - `Role: Accountant`'\n    },\n    responses: {\n        success: {\n            description: 'Deleted successfully',\n            example: { message: 'The Invoice With ID 1 Has Been Deleted.' }\n        },\n        notFound: {\n            description: 'The invoice not found in the database.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to delete the invoice.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Find Invoce',\n        description: 'Find invoice in the database. - `Role: Any`'\n    },\n    responses: {\n        success: {\n            description: 'The invoice.',\n            type: InvoiceEntity\n        },\n        notFound: {\n            description: 'The invoice not found in the database.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/item/swagger/controller.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Creating New Item.',\n        description: 'Creating new item in the database. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Created successfully.',\n            type: ItemEntity\n        },\n        badRequest: {\n            description: 'ID is already exist in the database.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to create items.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Deleting Itme.',\n        description: 'Deleting the itme from the database. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Deleted successfully.',\n            example: {message: 'The item with id 1 has been deleted.'}\n        },\n        notFound: {\n            description: '`Item with id not found'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to delete items.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Updating Itme.',\n        description: 'Updating the itme in the database. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Deleted successfully.',\n            type: ItemEntity\n        },\n        notFound: {\n            description: '`Item with id not found'\n        },\n        badRequest: {\n            description: 'Invalid update fields in the body'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to update items.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/returned-invoice/swagger/controller.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Creating Returned Invoice.',\n        description: 'Creating returned invoice in the database. - `Role: Accountant`'\n    },\n    responses: {\n        success: {\n            description: 'Created successfully.',\n            type: ReturnedInvoiceEntity\n        },\n        badRequest: {\n            description: 'No items or number of items is greater than number of items in the invoice or The number of pills greater than The number of pills in the invoice.',\n        },\n        notFound: {\n            description: 'Item not found in the database.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to create the returned invoice.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Default value : config.get('db')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeormConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: db.type ,\n    host: db.host ,\n    port: db.port ,\n    username: db.username ,\n    password: db.password ,\n    database: db.database ,\n    entities: [ UserEntity, ItemEntity, InvoiceEntity, ReturnedInvoiceEntity, ErrorEntitiy ],\n    synchronize: db.synchronize\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/swagger/controller.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deleteDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Delete the user',\n        description: 'Deleting the account of the user - `Role: admin`'\n    },\n    responses: {\n        success: {\n            description: 'The user deleted successfully.',\n            example: { message: `User 'mohaned' has been deleted.` }\n        },\n        badRequest: {\n            description: 'Username is missing.'\n        },\n        notFound: {\n            description:'The user not found.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to delete the user.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary:'Login',\n        description: 'Login to your account and getting the JWT token.'\n    },\n    responses: {\n        success: {\n            description: 'Login successfully and getting the JWT token.',\n            example: { accessToken: 'Yor-Access-Token' }\n        },\n        notFound: {\n            description: 'The username is not registered.'\n        },\n        badRequest: {\n            description: 'Password is incorrect.'\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Create a new account.',\n        description: 'Creating a new account in the system using username, displayName, password and accountType. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Created successfully.',\n            type: UserEntity\n        },\n        badRequest: {\n            description: 'The user is already exist.',\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to add users.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Update user info.',\n        description: 'Updating the user info by username. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Updated successfully.',\n            type: UserEntity\n        },\n        badRequest: {\n            description: '`Username is missing` or `Invalid update fields in the body`'\n        },\n        notFound: {\n            description: 'The user not found.'\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to update the user inof.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/jwt.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator( ( _ , ctx: ExecutionContext ): UserEntity => {\n    const req = ctx.switchToHttp().getRequest();\n    return req.user ;\n})\n                    \n                \n\n            \n                \n                    This decorator use to extract the user entity from the request.\n\n                \n            \n\n        \n    \n\n    src/report/swagger/controller.swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        invoiceDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Getting Invoices Report.',\n        description: 'Getting the invoices report from the database. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Created successfully.',\n            example: {\n                report: {\n                    totalNumberOfAllPills: 30000,\n                    totalNumberOfAllItems: 200,\n                    totalNumberOfAllInvoices: 200,\n                    avgOfAllInvoicesPrice: 3000,\n                    totalPriceOfAllInvoices: 20300.4\n                },\n                user: {\n                    username: 'mohaned',\n                    displayName: 'Mohaned Sherhan (Mr.x)',\n                    accountType: 'ADMIN'\n                },\n                createAt: new Date()\n            }\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to create the invoices report.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Getting Items Report.',\n        description: 'Getting the items report from the database. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Created successfully.',\n            example: {\n                report: {\n                    totalNumberOfItem: 200,\n                    avgSellPillPrice: 20300.4,\n                    avgBuyPillPrice: 19800.3,\n                    totalNumberOfAllItems: 30000,\n                    totalSellPrice: 120000,\n                    totalBuyPrice: 113900,\n                    avgProductionDate: new Date(),\n                    avgExpiryDate: new Date()\n                },\n                user: {\n                    username: 'mohaned',\n                    displayName: 'Mohaned Sherhan (Mr.x)',\n                    accountType: 'ADMIN'\n                },\n                createAt: new Date()\n            }\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to create the items report.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnedInvoiceDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         swaggerInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n    operation: {\n        summary: 'Getting Returned Invoices Report.',\n        description: 'Getting the returned invoices report from the database. - `Role: Admin`'\n    },\n    responses: {\n        success: {\n            description: 'Created successfully.',\n            example: {\n                report: {\n                    totalNumberOfAllPills: 30000,\n                    totalNumberOfAllItems: 200,\n                    totalNumberOfAllInvoices: 200,\n                    avgOfAllInvoicesPrice: 3000,\n                    totalPriceOfAllInvoices: 20300.4\n                },\n                user: {\n                    username: 'mohaned',\n                    displayName: 'Mohaned Sherhan (Mr.x)',\n                    accountType: 'ADMIN'\n                },\n                createAt: new Date()\n            }\n        },\n        unauthorized: {\n            description: 'You do not have the right JWT token.',\n        },\n        forbidden: {\n            description: 'You do not have the permission to create the retuned invoices report.',\n        }\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/config/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : config.get('jwt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: jwt.secretOrKey,\n    signOptions: {\n        expiresIn: jwt.expiresIn\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/strategies/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : config.get('jwt')\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Reflector.createDecorator()\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Default value : config.get('server')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
